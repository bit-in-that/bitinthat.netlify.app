[
  {
    "objectID": "fantasy/afl/top_coaches.html",
    "href": "fantasy/afl/top_coaches.html",
    "title": "AFL Fantasy Top Coaches",
    "section": "",
    "text": "Proven Track Record\nThese are the coaches that have ranked consistently highly in both 2022 and 2023.\n\n\nTop 100 üß¢\nTop 1000\nTop 2550\n\n\n\nThe coaches listed below had back to back top 100 finishes (i.e.¬†hats).\n\n\n\n\n\n\n\n\n\nThe coaches listed below had back to back top 1000 finishes.\n\n\n\n\n\n\n\n\n\nThe coaches listed below had back to back top 2550 finishes.\n\nNote that 2550 here is because this is the maximum ranks you can get from the AFL Fantasy APIs (i.e.¬†\\(10 \\times (2^{8}-1)\\)).\n\n\n\n\n\n\n\n\n\n\n\nNote that the repeat hat winners were shared in a tweet by the GOAT of Fantasy himself:\n\nBy my count, there were 6 coaches who went back-to-back caps in #AFLFantasy:CrayshawDolmanatorsJD - FTTVMiniMonkMottram‚Äôs Marvel‚ÄôsOur Savior LairdIn this new age of high content, quality of coaches, forced trades and rolling lockouts, it‚Äôs a pretty amazing feat.‚Äî Moreira‚Äôs Magic (@MoreirasMagic) August 31, 2023\n \n High Profile\nCheck out the track records of podcast hosts and other high profile coaches below.\nNote that only data for the top 2550 is available for 2022 ranks.\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "fantasy/aflw/selections.html",
    "href": "fantasy/aflw/selections.html",
    "title": "AFLW Fantasy Player Selections",
    "section": "",
    "text": "Top Coaches üß¢üöó\nMidweek Snapshot üì∏\n\n\n\nNote that the selections below are as at the end of round 10 (trades since then are not included).\n\n\n\n\n\n\n\n\n\n\nThe midweek snapshot below is as at 07/11/2023 04:11 PM AEDT."
  },
  {
    "objectID": "fantasy/aflw/selections.html#cheapest-player-on-field",
    "href": "fantasy/aflw/selections.html#cheapest-player-on-field",
    "title": "AFLW Fantasy Player Selections",
    "section": "Cheapest Player on Field",
    "text": "Cheapest Player on Field\nThe tables below shows the cheapest on-field player in each line as an indication of how ‚Äúcomplete‚Äù people‚Äôs teams are as at the end of round 10.\n\n\nAll Positions üå±\nDefence üõ°Ô∏èÔ∏è\nMidfield üöÇ\nRuck üå¥\nForward üéØ"
  },
  {
    "objectID": "fantasy/aflw/selections.html#team-structure",
    "href": "fantasy/aflw/selections.html#team-structure",
    "title": "AFLW Fantasy Player Selections",
    "section": "Team Structure",
    "text": "Team Structure\n\n\nTop 10k team structures\nPremium Count Explanation\n\n\n\n\n\n\n\n\n\n\nNote that only team structure that were present in the top 5K are presented above to reduce the size of the table.\n\n\nThe premium counts in the other tab are allocated according to the table below (1 for a premium, 0.5 for a mid-pricer and 0 for a rookie). The price ranges are arbitrary but represent a decent proxy for the labels ‚Äúrookie‚Äù, ‚Äúmid-pricer‚Äù and ‚Äúpremium‚Äù."
  },
  {
    "objectID": "fantasy/aflw/top_coaches.html",
    "href": "fantasy/aflw/top_coaches.html",
    "title": "AFLW Fantasy Top Coaches",
    "section": "",
    "text": "Note that all the information below is as at round 10 of the 2023 AFLW season.\n\n Overall Rank Pace\n‚ÄúMaintain‚Äù below means the number of points the previous holder of the borderline position would have required to hold their rank.\n\n\n\n\n\n\n\n\n High Profile\nCheck out the track records of podcast hosts and other high profile coaches below.\n\n\n\n\n\n\n\n\n Highest Performers\n\n\nTop 1000 Rank üß¢\nTop 1000 Week üèà\nTop 100 Value ü§ë\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "bit in that",
    "section": "",
    "text": "Philosophy\n\nWe are not trying to re-invent the wheel. We will only publish resources that have are unique or possess a distinct advantage over others.\nWe are not pundits in any sense of the word. We will leave subjective analysis of the game to those with more authority.\nStrive for simplicity and elegance.\n\n\n\nDark Mode\nThis website has a dark mode switch in the navigation bar. It serves two purposes:\n\nTurns the website them to having light text on a black background\nAdditional content will show source code and other technical information surrounding how the tools are made\n\nThis was done because there is probably a fair intersection between the those who like dark mode and those who like programming!\n\nYou are currently in light mode.\n\n\nYou are currently in dark mode.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n Back to top"
  },
  {
    "objectID": "players/afl/draft_prospects.html",
    "href": "players/afl/draft_prospects.html",
    "title": "AFL Player Data",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\")\n\n# TODO: add the sources for the phantom draft orders\n# TODO: add birth date and age as at 31 December 2023\n# TODO: add venue to matches\n# TODO: put time in local instead of AEST\n# TODO: add team\n\n\nphantom_draft_formatter &lt;- function(cell_value, row_index, column_name) {\n  if(cell_value == 999L) {\n    \"\"\n    } else {\n      cell_value\n    }\n  }\n\n\n\n\n\n\n\nData Disclaimer\n\n\n\nNote that data for the interstate underage competition (‚ÄúAFL U18 Championships‚Äù) are missing behind and free kick data, as such these items are omitted from the calculation of fantasy points.\n\n\n\nplayer_data_table &lt;- combine_player_details |&gt; \n  filter(gender == \"male\") |&gt; \n  mutate(\n    player_name = paste(player_first_name, player_surname),\n    phantom_draft_afl = coalesce(phantom_draft_afl, 999L),\n    phantom_draft_sporting_news = coalesce(phantom_draft_sporting_news, 999L),\n    phantom_draft_fox_sports = coalesce(phantom_draft_fox_sports, 999L),\n    phantom_draft_abc = coalesce(phantom_draft_abc, 999L),\n    player_url = paste0(\"https://bitinthat.netlify.app/players/afl/underage_profiles/\", playerId, \".html\")\n    ) |&gt; \n  relocate(player_name, .before = \"state\")\n\nplayer_data_table |&gt; \n  select(-gender, -national_combine, -player_first_name, -player_surname, -playerIds, \n         -player_urls, -player_images, -player_height_range, -player_weight_range, \n         -player_height_min, -player_weight_min, -playerId) |&gt;\n  reactable(\n    columns = list(\n      player_name = colDef(\n        name = \"Player\",\n        sticky = \"left\",\n        cell = function(cell_value, row_index, column_name) {\n          player_url &lt;- player_data_table[[\"player_url\"]][[row_index]]\n          player_image &lt;- player_data_table[[\"player_image\"]][[row_index]]\n          tags$a(\n            tags$img(src = player_image, style = \"height: 30px;\"\n                     ),\n            \" \",\n            cell_value,\n            href = player_url,\n            target = \"_blank\"\n          )\n        },\n        width = 200\n      ),\n      state = colDef(name = \"State\"),\n      state_league_club = colDef(name = \"State League Club\", width = 150),\n      community_club = colDef(name = \"Community Club\", width = 150),\n      date_of_birth = colDef(name = \"Date of Birth\"),\n      player_height_max = colDef(name = \"Player Height\", cell = function(cell_value, row_index, column_name) {\n        height &lt;- player_data_table[[\"player_height_range\"]][[row_index]]\n        if(is.na(height)) {\n          if(is.na(cell_value)) {\n            \"\"\n          } else {\n            paste(cell_value, \"cm\")\n          }\n        } else {\n          paste(height, \"cm\")\n        }\n        }),\n      player_weight_max = colDef(name = \"Player Weight\", cell = function(cell_value, row_index, column_name) {\n        weight &lt;- player_data_table[[\"player_weight_range\"]][[row_index]]\n        if(is.na(weight)) {\n          if(is.na(cell_value)) {\n            \"\"\n          } else {\n            paste(cell_value, \"kg\")\n          }\n        } else {\n          paste(weight, \"kg\")\n        }\n        }),\n      player_image = colDef(show = FALSE),\n      player_url = colDef(show = FALSE),\n      games_played_state_underage = colDef(name = \"Games\"),\n      fantasy_points_state_underage = colDef(name = \"Fantasy Points\", format = colFormat(digits = 1)),\n      games_played_interstate_underage = colDef(name = \"Games\"),\n      fantasy_points_interstate_underage = colDef(name = \"Fantasy Points\", format = colFormat(digits = 1)),\n      games_played_state_reserves = colDef(name = \"Games\"),\n      fantasy_points_state_reserves = colDef(name = \"Fantasy Points\", format = colFormat(digits = 1)),\n      games_played_state_league = colDef(name = \"Games\"),\n      fantasy_points_state_league = colDef(name = \"Fantasy Points\", format = colFormat(digits = 1)),\n      phantom_draft_afl = colDef(name = \"AFL\", cell = phantom_draft_formatter),\n      phantom_draft_sporting_news = colDef(name = \"Sporting News\", cell = phantom_draft_formatter),\n      phantom_draft_fox_sports = colDef(name = \"Fox Sports\", cell = phantom_draft_formatter),\n      phantom_draft_abc = colDef(name = \"ABC\", cell = phantom_draft_formatter)\n    ),\n    columnGroups = list(\n      colGroup(name = \"Player Details\", columns = c(\"state\", \"state_league_club\", \"community_club\", \"date_of_birth\", \"player_height_max\", \"player_weight_max\")),\n      colGroup(name = \"Phantom Draft Ranking\", columns = c(\"phantom_draft_afl\", \"phantom_draft_sporting_news\", \"phantom_draft_fox_sports\", \"phantom_draft_abc\")),\n      colGroup(name = \"State Underage\", columns = c(\"games_played_state_underage\", \"fantasy_points_state_underage\")),\n      colGroup(name = \"Interstate Underage\", columns = c(\"games_played_interstate_underage\", \"fantasy_points_interstate_underage\")),\n      colGroup(name = \"State Reserves\", columns = c(\"games_played_state_reserves\", \"fantasy_points_state_reserves\")),\n      colGroup(name = \"State League\", columns = c(\"games_played_state_league\", \"fantasy_points_state_league\"))\n    ),\n    filterable = TRUE\n  )\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "players/aflw/draft_prospects.html",
    "href": "players/aflw/draft_prospects.html",
    "title": "AFLW Draft Prospects",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\")\n\n\nphantom_draft_formatter &lt;- function(cell_value, row_index, column_name) {\n  if(cell_value == 999L) {\n    \"\"\n    } else {\n      cell_value\n    }\n  }\n\n\nplayer_data_table &lt;- combine_player_details |&gt; \n  filter(gender == \"female\") |&gt; \n  mutate(\n    player_name = paste(player_first_name, player_surname),\n    phantom_draft_afl = coalesce(phantom_draft_afl, 999L),\n    phantom_draft_sporting_news = coalesce(phantom_draft_sporting_news, 999L),\n    phantom_draft_fox_sports = coalesce(phantom_draft_fox_sports, 999L),\n    phantom_draft_abc = coalesce(phantom_draft_abc, 999L),\n    player_url = paste(\"https://bitinthat.netlify.app/players/afl/underage_profiles/\", playerId, \".html\")\n    ) |&gt; \n  relocate(player_name, .before = \"state\")\n\nplayer_data_table |&gt; \n  select(-gender, -national_combine, -player_first_name, -player_surname, -playerIds, \n         -player_urls, -player_images, -player_height_range, -player_weight_range, \n         -player_height_min, -player_weight_min, -playerId) |&gt;\n  reactable(\n    columns = list(\n      player_name = colDef(\n        name = \"Player\",\n        sticky = \"left\",\n        cell = function(cell_value, row_index, column_name) {\n          player_url &lt;- player_data_table[[\"player_url\"]][[row_index]]\n          player_image &lt;- player_data_table[[\"player_image\"]][[row_index]]\n          tags$a(\n            tags$img(src = player_image, style = \"height: 30px;\"\n                     ),\n            \" \",\n            cell_value,\n            href = player_url,\n            target = \"_blank\"\n          )\n        },\n        width = 200\n      ),\n      state = colDef(name = \"State\"),\n      state_league_club = colDef(name = \"State League Club\", width = 150),\n      community_club = colDef(name = \"Community Club\", width = 150),\n      date_of_birth = colDef(name = \"Date of Birth\"),\n      player_height_max = colDef(name = \"Player Height\", cell = function(cell_value, row_index, column_name) {\n        height &lt;- player_data_table[[\"player_height_range\"]][[row_index]]\n        if(is.na(height)) {\n          if(is.na(cell_value)) {\n            \"\"\n          } else {\n            paste(cell_value, \"cm\")\n          }\n        } else {\n          paste(height, \"cm\")\n        }\n        }),\n      player_weight_max = colDef(show = FALSE),\n      player_image = colDef(show = FALSE),\n      player_url = colDef(show = FALSE),\n      games_played_state_underage = colDef(name = \"Games\"),\n      fantasy_points_state_underage = colDef(name = \"Fantasy Points\", format = colFormat(digits = 1)),\n      games_played_interstate_underage = colDef(name = \"Games\"),\n      fantasy_points_interstate_underage = colDef(name = \"Fantasy Points\", format = colFormat(digits = 1)),\n      games_played_state_reserves = colDef(name = \"Games\"),\n      fantasy_points_state_reserves = colDef(name = \"Fantasy Points\", format = colFormat(digits = 1)),\n      games_played_state_league = colDef(name = \"Games\"),\n      fantasy_points_state_league = colDef(name = \"Fantasy Points\", format = colFormat(digits = 1)),\n      phantom_draft_afl = colDef(show = FALSE),\n      phantom_draft_sporting_news = colDef(show = FALSE),\n      phantom_draft_fox_sports = colDef(show = FALSE),\n      phantom_draft_abc = colDef(show = FALSE)\n    ),\n    columnGroups = list(\n      colGroup(name = \"Player Details\", columns = c(\"state\", \"state_league_club\", \"community_club\", \"date_of_birth\", \"player_height_max\", \"player_weight_max\")),\n      # colGroup(name = \"Phantom Draft Ranking\", columns = c(\"phantom_draft_afl\", \"phantom_draft_sporting_news\", \"phantom_draft_fox_sports\", \"phantom_draft_abc\")),\n      colGroup(name = \"State Underage\", columns = c(\"games_played_state_underage\", \"fantasy_points_state_underage\")),\n      colGroup(name = \"Interstate Underage\", columns = c(\"games_played_interstate_underage\", \"fantasy_points_interstate_underage\")),\n      colGroup(name = \"State Reserves\", columns = c(\"games_played_state_reserves\", \"fantasy_points_state_reserves\")),\n      colGroup(name = \"State League\", columns = c(\"games_played_state_league\", \"fantasy_points_state_league\"))\n    ),\n    filterable = TRUE\n  )\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "players/aflw/gallary.html",
    "href": "players/aflw/gallary.html",
    "title": "AFLW Players",
    "section": "",
    "text": "Below is a list of AFLW players. In future these will link to my own custom player profiles but for now they will just link to their profiles on DFS Australia.\n\n\n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nJasmine Garner\n\n\n\nNorth Melbourne\n\n\nMID\n\n\n\n1,496K | North Melbourne | 138\n\n\n\n\n\n\n\n\n\n\n\n\n\nKiara Bowers\n\n\n\nFremantle\n\n\nMID\n\n\n\n1,657K | Fremantle | 137\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharlie Rowbottom\n\n\n\nGold Coast Suns\n\n\nMID\n\n\n\n1,438K | Gold Coast Suns | 132.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAsh Riddell\n\n\n\nNorth Melbourne\n\n\nMID\n\n\n\n1,379K | North Melbourne | 128\n\n\n\n\n\n\n\n\n\n\n\n\n\nEbony Marinoff\n\n\n\nAdelaide Crows\n\n\nMID\n\n\n\n1,491K | Adelaide Crows | 118.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeorgie Prespakis\n\n\n\nGeelong Cats\n\n\nMID\n\n\n\n1,416K | Geelong Cats | 118\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrianna Davey\n\n\n\nCollingwood\n\n\nMID\n\n\n\n1,174K | Collingwood | 114.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nClaudia Whitfort\n\n\n\nGold Coast Suns\n\n\nMID\n\n\n\n1,132K | Gold Coast Suns | 114.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nKate Hore\n\n\n\nMelbourne\n\n\nFWD\n\n\n\n1,144K | Melbourne | 109\n\n\n\n\n\n\n\n\n\n\n\n\n\nLaura Gardiner\n\n\n\nSydney Swans\n\n\nFWD\n\n\n\n999K | Sydney Swans | 106.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAmy McDonald\n\n\n\nGeelong Cats\n\n\nMID\n\n\n\n1,316K | Geelong Cats | 106\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlly Anderson\n\n\n\nBrisbane Lions\n\n\nMID\n\n\n\n1,252K | Brisbane Lions | 103.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMadison Prespakis\n\n\n\nEssendon\n\n\nMID\n\n\n\n1,243K | Essendon | 103\n\n\n\n\n\n\n\n\n\n\n\n\n\nMim Strom\n\n\n\nFremantle\n\n\nRUC\n\n\n\n1,120K | Fremantle | 102\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmily Bates\n\n\n\nHawthorn\n\n\nMID\n\n\n\n1,167K | Hawthorn | 101\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnne Hatchard\n\n\n\nAdelaide Crows\n\n\nMID\n\n\n\n1,272K | Adelaide Crows | 98.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMonique Conti\n\n\n\nRichmond\n\n\nMID\n\n\n\n1,202K | Richmond | 97.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrittany Bonnici\n\n\n\nCollingwood\n\n\nMID\n\n\n\n1,053K | Collingwood | 95.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nKeeley Sherar\n\n\n\nCarlton\n\n\nMID\n\n\n\n920K | Carlton | 94.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmma Swanson\n\n\n\nWest Coast Eagles\n\n\nMID\n\n\n\n1,200K | West Coast Eagles | 93.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nNina Morrison\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n1,084K | Geelong Cats | 93.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBonnie Toogood\n\n\n\nEssendon\n\n\nFWD\n\n\n\n1,024K | Essendon | 92\n\n\n\n\n\n\n\n\n\n\n\n\n\nChloe Molloy\n\n\n\nSydney Swans\n\n\nFWD\n\n\n\n1,019K | Sydney Swans | 91\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlison Drennan\n\n\n\nGold Coast Suns\n\n\nMID\n\n\n\n1,101K | Gold Coast Suns | 90.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nGab Pound\n\n\n\nCarlton\n\n\nDEF\n\n\n\n757K | Carlton | 90\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlly Morphett\n\n\n\nSydney Swans\n\n\nRUC\n\n\n\n898K | Sydney Swans | 90\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbie McKay\n\n\n\nCarlton\n\n\nMID\n\n\n\n1,098K | Carlton | 89.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nOlivia Purcell\n\n\n\nMelbourne\n\n\nMID\n\n\n\n1,058K | Melbourne | 87.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlice Edmonds\n\n\n\nWestern Bulldogs\n\n\nRUC\n\n\n\n1,052K | Western Bulldogs | 87\n\n\n\n\n\n\n\n\n\n\n\n\n\nTilly Lucas-Rodd\n\n\n\nHawthorn\n\n\nMID\n\n\n\n1,098K | Hawthorn | 86.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAngelique Stannett\n\n\n\nFremantle\n\n\nDEF\n\n\n\n855K | Fremantle | 86.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Rowe\n\n\n\nCollingwood\n\n\nFWD\n\n\n\n811K | Collingwood | 86\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlyce Parker\n\n\n\nGWS Giants\n\n\nMID\n\n\n\n1,139K | GWS Giants | 85.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nHarriet Cordner\n\n\n\nCarlton\n\n\nDEF\n\n\n\n692K | Carlton | 84\n\n\n\n\n\n\n\n\n\n\n\n\n\nIsabelle Pritchard\n\n\n\nWestern Bulldogs\n\n\nMID\n\n\n\n953K | Western Bulldogs | 84\n\n\n\n\n\n\n\n\n\n\n\n\n\nMarianna Anthony\n\n\n\nCarlton\n\n\nMID\n\n\n\n716K | Carlton | 84\n\n\n\n\n\n\n\n\n\n\n\n\n\nNiamh Kelly\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n810K | Adelaide Crows | 84\n\n\n\n\n\n\n\n\n\n\n\n\n\nJacqueline Dupuy\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n870K | Gold Coast Suns | 84\n\n\n\n\n\n\n\n\n\n\n\n\n\nMimi Hill\n\n\n\nCarlton\n\n\nMID\n\n\n\n997K | Carlton | 81.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nHayley Miller\n\n\n\nFremantle\n\n\nMID\n\n\n\n971K | Fremantle | 81\n\n\n\n\n\n\n\n\n\n\n\n\n\nMia King\n\n\n\nNorth Melbourne\n\n\nMID\n\n\n\n923K | North Melbourne | 81\n\n\n\n\n\n\n\n\n\n\n\n\n\nTarni Evans\n\n\n\nGWS Giants\n\n\nDEF\n\n\n\n888K | GWS Giants | 81\n\n\n\n\n\n\n\n\n\n\n\n\n\nSophie Conway\n\n\n\nBrisbane Lions\n\n\nFWD\n\n\n\n854K | Brisbane Lions | 80\n\n\n\n\n\n\n\n\n\n\n\n\n\nJacqueline Parry\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n812K | Geelong Cats | 80\n\n\n\n\n\n\n\n\n\n\n\n\n\nMikala Cann\n\n\n\nCollingwood\n\n\nMID\n\n\n\n999K | Collingwood | 79.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Lampard\n\n\n\nMelbourne\n\n\nDEF\n\n\n\n782K | Melbourne | 79\n\n\n\n\n\n\n\n\n\n\n\n\n\nLucy Single\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n765K | Gold Coast Suns | 79\n\n\n\n\n\n\n\n\n\n\n\n\n\nMatilda Scholz\n\n\n\nPort Adelaide\n\n\nRUC\n\n\n\n664K | Port Adelaide | 79\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlicia Eva\n\n\n\nGWS Giants\n\n\nMID\n\n\n\n913K | GWS Giants | 78\n\n\n\n\n\n\n\n\n\n\n\n\n\nTyla Hanks\n\n\n\nMelbourne\n\n\nMID\n\n\n\n961K | Melbourne | 78\n\n\n\n\n\n\n\n\n\n\n\n\n\nTamara Smith\n\n\n\nHawthorn\n\n\nMID\n\n\n\n867K | Hawthorn | 78\n\n\n\n\n\n\n\n\n\n\n\n\n\nMegan Kauffman\n\n\n\nFremantle\n\n\nFWD\n\n\n\n886K | Fremantle | 78\n\n\n\n\n\n\n\n\n\n\n\n\n\nEllie Blackburn\n\n\n\nWestern Bulldogs\n\n\nMID\n\n\n\n1,061K | Western Bulldogs | 77.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJessica Fitzgerald\n\n\n\nWestern Bulldogs\n\n\nMID\n\n\n\n888K | Western Bulldogs | 77\n\n\n\n\n\n\n\n\n\n\n\n\n\nCathy Svarc\n\n\n\nBrisbane Lions\n\n\nMID\n\n\n\n938K | Brisbane Lions | 77\n\n\n\n\n\n\n\n\n\n\n\n\n\nErin Phillips\n\n\n\nPort Adelaide\n\n\nFWD\n\n\n\n886K | Port Adelaide | 76.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nElla Roberts\n\n\n\nWest Coast Eagles\n\n\nFWD\n\n\n\n888K | West Coast Eagles | 76\n\n\n\n\n\n\n\n\n\n\n\n\n\nDana Hooker\n\n\n\nWest Coast Eagles\n\n\nFWD\n\n\n\n868K | West Coast Eagles | 75.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nNicola Barr\n\n\n\nGWS Giants\n\n\nFWD\n\n\n\n805K | GWS Giants | 73.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nDakota Davidson\n\n\n\nBrisbane Lions\n\n\nFWD\n\n\n\n759K | Brisbane Lions | 73.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nOrla O‚ÄôDwyer\n\n\n\nBrisbane Lions\n\n\nFWD\n\n\n\n801K | Brisbane Lions | 73\n\n\n\n\n\n\n\n\n\n\n\n\n\nSophie Van De Heuvel\n\n\n\nEssendon\n\n\nMID\n\n\n\n708K | Essendon | 72.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nTeah Charlton\n\n\n\nAdelaide Crows\n\n\nMID\n\n\n\n827K | Adelaide Crows | 72.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nShelley Heath\n\n\n\nMelbourne\n\n\nMID\n\n\n\n810K | Melbourne | 72.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nDaisy D‚ÄôArcy\n\n\n\nGold Coast Suns\n\n\nDEF\n\n\n\n794K | Gold Coast Suns | 72.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nKim Rennie\n\n\n\nNorth Melbourne\n\n\nRUC\n\n\n\n823K | North Melbourne | 72\n\n\n\n\n\n\n\n\n\n\n\n\n\nDarcy Moloney\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n773K | Geelong Cats | 72\n\n\n\n\n\n\n\n\n\n\n\n\n\nNicole Bresnehan\n\n\n\nNorth Melbourne\n\n\nDEF\n\n\n\n786K | North Melbourne | 71.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAisling McCarthy\n\n\n\nWest Coast Eagles\n\n\nMID\n\n\n\n913K | West Coast Eagles | 71.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nHannah Priest\n\n\n\nSt Kilda\n\n\nDEF\n\n\n\n808K | St Kilda | 71.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nGabrielle Seymour\n\n\n\nRichmond\n\n\nRUC\n\n\n\n911K | Richmond | 71.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nIsabel Dawes\n\n\n\nBrisbane Lions\n\n\nMID\n\n\n\n852K | Brisbane Lions | 70\n\n\n\n\n\n\n\n\n\n\n\n\n\nMadison Newman\n\n\n\nAdelaide Crows\n\n\nMID\n\n\n\n798K | Adelaide Crows | 69.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmma Kearney\n\n\n\nNorth Melbourne\n\n\nDEF\n\n\n\n875K | North Melbourne | 69\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbey Dowrick\n\n\n\nPort Adelaide\n\n\nMID\n\n\n\n903K | Port Adelaide | 69\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmma O‚ÄôDriscoll\n\n\n\nFremantle\n\n\nDEF\n\n\n\n756K | Fremantle | 69\n\n\n\n\n\n\n\n\n\n\n\n\n\nKate Surman\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n801K | Geelong Cats | 69\n\n\n\n\n\n\n\n\n\n\n\n\n\nKaitlyn Ashmore\n\n\n\nHawthorn\n\n\nMID\n\n\n\n839K | Hawthorn | 68\n\n\n\n\n\n\n\n\n\n\n\n\n\nTamara Luke\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n620K | Hawthorn | 68\n\n\n\n\n\n\n\n\n\n\n\n\n\nOlivia Vesely\n\n\n\nSt Kilda\n\n\nMID\n\n\n\n810K | St Kilda | 67.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nEliza McNamara\n\n\n\nMelbourne\n\n\nMID\n\n\n\n744K | Melbourne | 67.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nLucy Wales\n\n\n\nHawthorn\n\n\nRUC\n\n\n\n808K | Hawthorn | 67\n\n\n\n\n\n\n\n\n\n\n\n\n\nJaimee Lambert\n\n\n\nSt Kilda\n\n\nMID\n\n\n\n837K | St Kilda | 66.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nKirsty Lamb\n\n\n\nWestern Bulldogs\n\n\nMID\n\n\n\n845K | Western Bulldogs | 66\n\n\n\n\n\n\n\n\n\n\n\n\n\nLauren Pearce\n\n\n\nMelbourne\n\n\nRUC\n\n\n\n738K | Melbourne | 65\n\n\n\n\n\n\n\n\n\n\n\n\n\nJessica Good\n\n\n\nCarlton\n\n\nRUC\n\n\n\n717K | Carlton | 65\n\n\n\n\n\n\n\n\n\n\n\n\n\nTahlia Hickie\n\n\n\nBrisbane Lions\n\n\nRUC\n\n\n\n839K | Brisbane Lions | 64.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nSophie Alexander\n\n\n\nEssendon\n\n\nFWD\n\n\n\n676K | Essendon | 64.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nIsabella Lewis\n\n\n\nWest Coast Eagles\n\n\nMID\n\n\n\n831K | West Coast Eagles | 64.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeorgia Gee\n\n\n\nEssendon\n\n\nFWD\n\n\n\n698K | Essendon | 64\n\n\n\n\n\n\n\n\n\n\n\n\n\nTahlia Randall\n\n\n\nNorth Melbourne\n\n\nFWD\n\n\n\n666K | North Melbourne | 64\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Lakay\n\n\n\nWest Coast Eagles\n\n\nRUC\n\n\n\n789K | West Coast Eagles | 63.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nLaura Elliott\n\n\n\nHawthorn\n\n\nMID\n\n\n\n487K | Hawthorn | 63\n\n\n\n\n\n\n\n\n\n\n\n\n\nTayla Harris\n\n\n\nMelbourne\n\n\nFWD\n\n\n\n844K | Melbourne | 62.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nTara Bohanna\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n699K | Gold Coast Suns | 62.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAishling Sheridan\n\n\n\nCollingwood\n\n\nMID\n\n\n\n691K | Collingwood | 62.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrace Egan\n\n\n\nRichmond\n\n\nMID\n\n\n\n816K | Richmond | 62\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlyssa Bannan\n\n\n\nMelbourne\n\n\nMID\n\n\n\n618K | Melbourne | 62\n\n\n\n\n\n\n\n\n\n\n\n\n\nJacqui Vogt\n\n\n\nEssendon\n\n\nMID\n\n\n\n745K | Essendon | 62\n\n\n\n\n\n\n\n\n\n\n\n\n\nJulia Crockett-Grills\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n686K | Geelong Cats | 61.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJamie Stanton\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n715K | Gold Coast Suns | 61\n\n\n\n\n\n\n\n\n\n\n\n\n\nEllie McKenzie\n\n\n\nRichmond\n\n\nMID\n\n\n\n806K | Richmond | 61\n\n\n\n\n\n\n\n\n\n\n\n\n\nLily Mithen\n\n\n\nMelbourne\n\n\nMID\n\n\n\n818K | Melbourne | 60.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nChloe Scheer\n\n\n\nGeelong Cats\n\n\nMID\n\n\n\n687K | Geelong Cats | 60.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nCourtney Hodder\n\n\n\nBrisbane Lions\n\n\nFWD\n\n\n\n732K | Brisbane Lions | 60.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nStephanie Wales\n\n\n\nEssendon\n\n\nRUC\n\n\n\n715K | Essendon | 60.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJessica Dal Pos\n\n\n\nCarlton\n\n\nFWD\n\n\n\n706K | Carlton | 60\n\n\n\n\n\n\n\n\n\n\n\n\n\nDarcy Vescio\n\n\n\nCarlton\n\n\nFWD\n\n\n\n673K | Carlton | 60\n\n\n\n\n\n\n\n\n\n\n\n\n\nKristy Stratton\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n526K | Hawthorn | 60\n\n\n\n\n\n\n\n\n\n\n\n\n\nKate Dempsey\n\n\n\nRichmond\n\n\nMID\n\n\n\n664K | Richmond | 60\n\n\n\n\n\n\n\n\n\n\n\n\n\nEilish Sheerin\n\n\n\nRichmond\n\n\nDEF\n\n\n\n760K | Richmond | 60\n\n\n\n\n\n\n\n\n\n\n\n\n\nElla Heads\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n646K | Sydney Swans | 60\n\n\n\n\n\n\n\n\n\n\n\n\n\nJordyn Allen\n\n\n\nCollingwood\n\n\nDEF\n\n\n\n781K | Collingwood | 59.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nStephanie Cain\n\n\n\nEssendon\n\n\nMID\n\n\n\n797K | Essendon | 59.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nCaitlin Gould\n\n\n\nAdelaide Crows\n\n\nRUC\n\n\n\n800K | Adelaide Crows | 59\n\n\n\n\n\n\n\n\n\n\n\n\n\nNicola Xenos\n\n\n\nSt Kilda\n\n\nFWD\n\n\n\n711K | St Kilda | 59\n\n\n\n\n\n\n\n\n\n\n\n\n\nEliza West\n\n\n\nMelbourne\n\n\nMID\n\n\n\n817K | Melbourne | 59\n\n\n\n\n\n\n\n\n\n\n\n\n\nJessica Allan\n\n\n\nAdelaide Crows\n\n\nRUC\n\n\n\n523K | Adelaide Crows | 58.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeorgia Nanscawen\n\n\n\nEssendon\n\n\nMID\n\n\n\n537K | Essendon | 58.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlaithin Mackin\n\n\n\nMelbourne\n\n\nFWD\n\n\n\n608K | Melbourne | 58.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nPaxy Paxman\n\n\n\nMelbourne\n\n\nFWD\n\n\n\n965K | Melbourne | 58\n\n\n\n\n\n\n\n\n\n\n\n\n\nSabrina Frederick\n\n\n\nCollingwood\n\n\nFWD\n\n\n\n664K | Collingwood | 58\n\n\n\n\n\n\n\n\n\n\n\n\n\nRebecca Beeson\n\n\n\nGWS Giants\n\n\nMID\n\n\n\n654K | GWS Giants | 58\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Sansonetti\n\n\n\nCollingwood\n\n\nDEF\n\n\n\n602K | Collingwood | 58\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharlotte Baskaran\n\n\n\nHawthorn\n\n\nMID\n\n\n\n698K | Hawthorn | 58\n\n\n\n\n\n\n\n\n\n\n\n\n\nRebecca Privitelli\n\n\n\nSydney Swans\n\n\nFWD\n\n\n\n656K | Sydney Swans | 57.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nChelsea Randall\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n912K | Adelaide Crows | 57.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmma King\n\n\n\nNorth Melbourne\n\n\nFWD\n\n\n\n717K | North Melbourne | 57.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nChantel Emonson\n\n\n\nGeelong Cats\n\n\nDEF\n\n\n\n718K | Geelong Cats | 57.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nKeeley Skepper\n\n\n\nCarlton\n\n\nFWD\n\n\n\n707K | Carlton | 57.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAine Tighe\n\n\n\nFremantle\n\n\nFWD\n\n\n\n735K | Fremantle | 57.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJasmine Fleming\n\n\n\nHawthorn\n\n\nMID\n\n\n\n772K | Hawthorn | 57.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBreann Moody\n\n\n\nCarlton\n\n\nRUC\n\n\n\n847K | Carlton | 57\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeorgia Garnett\n\n\n\nGWS Giants\n\n\nFWD\n\n\n\n772K | GWS Giants | 56.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nKate Shierlaw\n\n\n\nNorth Melbourne\n\n\nFWD\n\n\n\n669K | North Melbourne | 56\n\n\n\n\n\n\n\n\n\n\n\n\n\nMeghan McDonald\n\n\n\nGeelong Cats\n\n\nDEF\n\n\n\n685K | Geelong Cats | 56\n\n\n\n\n\n\n\n\n\n\n\n\n\nAmber Clarke\n\n\n\nEssendon\n\n\nFWD\n\n\n\n629K | Essendon | 55.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAmelia Velardo\n\n\n\nCarlton\n\n\nFWD\n\n\n\n601K | Carlton | 55.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nGemma Houghton\n\n\n\nPort Adelaide\n\n\nFWD\n\n\n\n649K | Port Adelaide | 55\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnnalyse Lister\n\n\n\nGWS Giants\n\n\nDEF\n\n\n\n492K | GWS Giants | 55\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrace Kelly\n\n\n\nSt Kilda\n\n\nFWD\n\n\n\n505K | St Kilda | 54\n\n\n\n\n\n\n\n\n\n\n\n\n\nSofia Hurley\n\n\n\nSydney Swans\n\n\nMID\n\n\n\n632K | Sydney Swans | 54\n\n\n\n\n\n\n\n\n\n\n\n\n\nAmy Smith\n\n\n\nNorth Melbourne\n\n\nDEF\n\n\n\n642K | North Melbourne | 54\n\n\n\n\n\n\n\n\n\n\n\n\n\nJodie Hicks\n\n\n\nGWS Giants\n\n\nDEF\n\n\n\n667K | GWS Giants | 53.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nGabrielle Newton\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n604K | Western Bulldogs | 53.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nZarlie Goldsworthy\n\n\n\nGWS Giants\n\n\nFWD\n\n\n\n588K | GWS Giants | 53.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Perkins\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n487K | Hawthorn | 53\n\n\n\n\n\n\n\n\n\n\n\n\n\nDanielle Ponter\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n651K | Adelaide Crows | 53\n\n\n\n\n\n\n\n\n\n\n\n\n\nKalinda Howarth\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n697K | Gold Coast Suns | 53\n\n\n\n\n\n\n\n\n\n\n\n\n\nRenee Garing\n\n\n\nGeelong Cats\n\n\nMID\n\n\n\n491K | Geelong Cats | 53\n\n\n\n\n\n\n\n\n\n\n\n\n\nTyanna Smith\n\n\n\nSt Kilda\n\n\nMID\n\n\n\n465K | St Kilda | 53\n\n\n\n\n\n\n\n\n\n\n\n\n\nDana East\n\n\n\nFremantle\n\n\nFWD\n\n\n\n701K | Fremantle | 53\n\n\n\n\n\n\n\n\n\n\n\n\n\nTaylah Gatt\n\n\n\nNorth Melbourne\n\n\nMID\n\n\n\n535K | North Melbourne | 53\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrace Campbell\n\n\n\nCollingwood\n\n\nMID\n\n\n\n459K | Collingwood | 52\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrooke Brown\n\n\n\nEssendon\n\n\nDEF\n\n\n\n651K | Essendon | 52\n\n\n\n\n\n\n\n\n\n\n\n\n\nKatie Brennan\n\n\n\nRichmond\n\n\nFWD\n\n\n\n662K | Richmond | 51.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJade Ellenger\n\n\n\nBrisbane Lions\n\n\nMID\n\n\n\n617K | Brisbane Lions | 51.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlice O‚ÄôLoughlin\n\n\n\nNorth Melbourne\n\n\nFWD\n\n\n\n611K | North Melbourne | 51.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nKeely Coyne\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n542K | Western Bulldogs | 51.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nLucy McEvoy\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n683K | Sydney Swans | 51\n\n\n\n\n\n\n\n\n\n\n\n\n\nAine McDonagh\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n535K | Hawthorn | 51\n\n\n\n\n\n\n\n\n\n\n\n\n\nTaylor Smith\n\n\n\nBrisbane Lions\n\n\nFWD\n\n\n\n544K | Brisbane Lions | 50.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMadeleine Scanlon\n\n\n\nFremantle\n\n\nDEF\n\n\n\n488K | Fremantle | 50.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBelinda Smith\n\n\n\nWest Coast Eagles\n\n\nDEF\n\n\n\n630K | West Coast Eagles | 50\n\n\n\n\n\n\n\n\n\n\n\n\n\nEden Zanker\n\n\n\nMelbourne\n\n\nFWD\n\n\n\n627K | Melbourne | 50\n\n\n\n\n\n\n\n\n\n\n\n\n\nHaneen Zreika\n\n\n\nGWS Giants\n\n\nFWD\n\n\n\n558K | GWS Giants | 50\n\n\n\n\n\n\n\n\n\n\n\n\n\nTarni White\n\n\n\nCollingwood\n\n\nMID\n\n\n\n733K | Collingwood | 50\n\n\n\n\n\n\n\n\n\n\n\n\n\nAmy Mulholland\n\n\n\nFremantle\n\n\nFWD\n\n\n\n474K | Fremantle | 50\n\n\n\n\n\n\n\n\n\n\n\n\n\nAliesha Newman\n\n\n\nSydney Swans\n\n\nFWD\n\n\n\n542K | Sydney Swans | 49.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaddy Brancatisano\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n459K | Gold Coast Suns | 49.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMikayla Bowen\n\n\n\nGeelong Cats\n\n\nMID\n\n\n\n665K | Geelong Cats | 49.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMolly McDonald\n\n\n\nSt Kilda\n\n\nDEF\n\n\n\n649K | St Kilda | 49.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaddison Gay\n\n\n\nMelbourne\n\n\nDEF\n\n\n\n706K | Melbourne | 49\n\n\n\n\n\n\n\n\n\n\n\n\n\nAirlie Runnalls\n\n\n\nFremantle\n\n\nMID\n\n\n\n654K | Fremantle | 49\n\n\n\n\n\n\n\n\n\n\n\n\n\nFleur Davies\n\n\n\nGWS Giants\n\n\nRUC\n\n\n\n468K | GWS Giants | 49\n\n\n\n\n\n\n\n\n\n\n\n\n\nKatie Lynch\n\n\n\nWestern Bulldogs\n\n\nDEF\n\n\n\n691K | Western Bulldogs | 48.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMontana McKinnon\n\n\n\nAdelaide Crows\n\n\nRUC\n\n\n\n688K | Adelaide Crows | 48\n\n\n\n\n\n\n\n\n\n\n\n\n\nElisabeth Georgostathis\n\n\n\nWestern Bulldogs\n\n\nMID\n\n\n\n553K | Western Bulldogs | 48\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Hartwig\n\n\n\nWestern Bulldogs\n\n\nDEF\n\n\n\n555K | Western Bulldogs | 48\n\n\n\n\n\n\n\n\n\n\n\n\n\nGreta Bodey\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n635K | Hawthorn | 48\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrooke Vickers\n\n\n\nCarlton\n\n\nDEF\n\n\n\n537K | Carlton | 48\n\n\n\n\n\n\n\n\n\n\n\n\n\nJasmin Stewart\n\n\n\nPort Adelaide\n\n\nMID\n\n\n\n503K | Port Adelaide | 47.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBianca Jakobsson\n\n\n\nSt Kilda\n\n\nDEF\n\n\n\n655K | St Kilda | 47\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharlotte Thomas\n\n\n\nWest Coast Eagles\n\n\nDEF\n\n\n\n673K | West Coast Eagles | 47\n\n\n\n\n\n\n\n\n\n\n\n\n\nJustine Mules\n\n\n\nPort Adelaide\n\n\nFWD\n\n\n\n540K | Port Adelaide | 46.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nKate Darby\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n575K | Geelong Cats | 46.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nClaudia Gunjaca\n\n\n\nGeelong Cats\n\n\nDEF\n\n\n\n546K | Geelong Cats | 46.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMeara Girvan\n\n\n\nGold Coast Suns\n\n\nDEF\n\n\n\n452K | Gold Coast Suns | 46.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nCynthia Hamilton\n\n\n\nSydney Swans\n\n\nFWD\n\n\n\n590K | Sydney Swans | 46.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAmelia Radford\n\n\n\nEssendon\n\n\nMID\n\n\n\n498K | Essendon | 46.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBreanna Koenen\n\n\n\nBrisbane Lions\n\n\nDEF\n\n\n\n623K | Brisbane Lions | 46\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbie Ballard\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n578K | Adelaide Crows | 46\n\n\n\n\n\n\n\n\n\n\n\n\n\nNajwa Allen\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n524K | Adelaide Crows | 46\n\n\n\n\n\n\n\n\n\n\n\n\n\nIsabella Eddey\n\n\n\nNorth Melbourne\n\n\nFWD\n\n\n\n498K | North Melbourne | 46\n\n\n\n\n\n\n\n\n\n\n\n\n\nLily Postlethwaite\n\n\n\nBrisbane Lions\n\n\nFWD\n\n\n\n433K | Brisbane Lions | 45.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nIsabella Grant\n\n\n\nWestern Bulldogs\n\n\nDEF\n\n\n\n539K | Western Bulldogs | 45.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nCeline Moody\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n601K | Western Bulldogs | 45.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMeg Macdonald\n\n\n\nRichmond\n\n\nFWD\n\n\n\n536K | Richmond | 45.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nHannah Ewings\n\n\n\nPort Adelaide\n\n\nMID\n\n\n\n691K | Port Adelaide | 45\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnnabel Johnson\n\n\n\nGeelong Cats\n\n\nDEF\n\n\n\n615K | Geelong Cats | 45\n\n\n\n\n\n\n\n\n\n\n\n\n\nDominique Carruthers\n\n\n\nWestern Bulldogs\n\n\nMID\n\n\n\n457K | Western Bulldogs | 45\n\n\n\n\n\n\n\n\n\n\n\n\n\nEloise Jones\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n570K | Adelaide Crows | 44.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJaide Britton\n\n\n\nWest Coast Eagles\n\n\nMID\n\n\n\n529K | West Coast Eagles | 44.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nGemma Lagioia\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n427K | Western Bulldogs | 44.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nDeanna Berry\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n661K | Western Bulldogs | 44\n\n\n\n\n\n\n\n\n\n\n\n\n\nLauren Brazzale\n\n\n\nCollingwood\n\n\nDEF\n\n\n\n518K | Collingwood | 44\n\n\n\n\n\n\n\n\n\n\n\n\n\nRachelle Martin\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n513K | Adelaide Crows | 44\n\n\n\n\n\n\n\n\n\n\n\n\n\nErika O‚ÄôShea\n\n\n\nNorth Melbourne\n\n\nDEF\n\n\n\n491K | North Melbourne | 44\n\n\n\n\n\n\n\n\n\n\n\n\n\nJessica Sedunary\n\n\n\nWest Coast Eagles\n\n\nDEF\n\n\n\n447K | West Coast Eagles | 43.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nStevie-Lee Thompson\n\n\n\nAdelaide Crows\n\n\nMID\n\n\n\n629K | Adelaide Crows | 43.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeorgia Patrikios\n\n\n\nSt Kilda\n\n\nMID\n\n\n\n711K | St Kilda | 43.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nLauren Bella\n\n\n\nGold Coast Suns\n\n\nRUC\n\n\n\n631K | Gold Coast Suns | 43.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nZoe Prowse\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n456K | Adelaide Crows | 43.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nKellie Gibson\n\n\n\nWest Coast Eagles\n\n\nFWD\n\n\n\n490K | West Coast Eagles | 43\n\n\n\n\n\n\n\n\n\n\n\n\n\nAngela Foley\n\n\n\nPort Adelaide\n\n\nDEF\n\n\n\n606K | Port Adelaide | 43\n\n\n\n\n\n\n\n\n\n\n\n\n\nSimone Nalder\n\n\n\nSt Kilda\n\n\nRUC\n\n\n\n556K | St Kilda | 43\n\n\n\n\n\n\n\n\n\n\n\n\n\nKiera Mueller\n\n\n\nAdelaide Crows\n\n\nDEF\n\n\n\n431K | Adelaide Crows | 43\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeorgia Clayden\n\n\n\nGold Coast Suns\n\n\nDEF\n\n\n\n408K | Gold Coast Suns | 43\n\n\n\n\n\n\n\n\n\n\n\n\n\nKatelyn Cox\n\n\n\nRichmond\n\n\nDEF\n\n\n\n460K | Richmond | 42.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nEbony Antonio\n\n\n\nFremantle\n\n\nFWD\n\n\n\n634K | Fremantle | 42.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMikayla Hyde\n\n\n\nFremantle\n\n\nFWD\n\n\n\n501K | Fremantle | 42.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAileen Gilroy\n\n\n\nHawthorn\n\n\nMID\n\n\n\n641K | Hawthorn | 42.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nSinead Goldrick\n\n\n\nMelbourne\n\n\nMID\n\n\n\n486K | Melbourne | 42.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nLily Goss\n\n\n\nCarlton\n\n\nFWD\n\n\n\n431K | Carlton | 42.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJessica Wuetschner\n\n\n\nEssendon\n\n\nFWD\n\n\n\n442K | Essendon | 42\n\n\n\n\n\n\n\n\n\n\n\n\n\nNell Morris-Dalton\n\n\n\nCollingwood\n\n\nFWD\n\n\n\n498K | Collingwood | 42\n\n\n\n\n\n\n\n\n\n\n\n\n\nJasmine Ferguson\n\n\n\nNorth Melbourne\n\n\nDEF\n\n\n\n440K | North Melbourne | 42\n\n\n\n\n\n\n\n\n\n\n\n\n\nSasha Goranova\n\n\n\nWest Coast Eagles\n\n\nDEF\n\n\n\n458K | West Coast Eagles | 42\n\n\n\n\n\n\n\n\n\n\n\n\n\nLulu Pullar\n\n\n\nNorth Melbourne\n\n\nDEF\n\n\n\n460K | North Melbourne | 42\n\n\n\n\n\n\n\n\n\n\n\n\n\nElizabeth Keaney\n\n\n\nGold Coast Suns\n\n\nDEF\n\n\n\n636K | Gold Coast Suns | 41.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nSerene Watson\n\n\n\nSt Kilda\n\n\nDEF\n\n\n\n507K | St Kilda | 41.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nEllie Gavalas\n\n\n\nNorth Melbourne\n\n\nFWD\n\n\n\n580K | North Melbourne | 41.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAishling Moloney\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n417K | Geelong Cats | 41.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nStephanie Chiocci\n\n\n\nSt Kilda\n\n\nFWD\n\n\n\n557K | St Kilda | 41\n\n\n\n\n\n\n\n\n\n\n\n\n\nNatalie Grider\n\n\n\nBrisbane Lions\n\n\nDEF\n\n\n\n619K | Brisbane Lions | 41\n\n\n\n\n\n\n\n\n\n\n\n\n\nRylie Wilcox\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n609K | Western Bulldogs | 41\n\n\n\n\n\n\n\n\n\n\n\n\n\nLaura Pugh\n\n\n\nFremantle\n\n\nDEF\n\n\n\n582K | Fremantle | 40.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nCaitlin Greiser\n\n\n\nRichmond\n\n\nFWD\n\n\n\n483K | Richmond | 40.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nYvonne Bonner\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n415K | Adelaide Crows | 40.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmma Humphries\n\n\n\nWest Coast Eagles\n\n\nFWD\n\n\n\n412K | West Coast Eagles | 40\n\n\n\n\n\n\n\n\n\n\n\n\n\nHannah Dunn\n\n\n\nPort Adelaide\n\n\nDEF\n\n\n\n528K | Port Adelaide | 40\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Hosking\n\n\n\nRichmond\n\n\nMID\n\n\n\n867K | Richmond | 40\n\n\n\n\n\n\n\n\n\n\n\n\n\nChelsea Biddell\n\n\n\nAdelaide Crows\n\n\nDEF\n\n\n\n566K | Adelaide Crows | 40\n\n\n\n\n\n\n\n\n\n\n\n\n\nRuby Svarc\n\n\n\nBrisbane Lions\n\n\nFWD\n\n\n\n481K | Brisbane Lions | 40\n\n\n\n\n\n\n\n\n\n\n\n\n\nWallis Randell\n\n\n\nGold Coast Suns\n\n\nDEF\n\n\n\n461K | Gold Coast Suns | 40\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaggie Maclachlan\n\n\n\nPort Adelaide\n\n\nFWD\n\n\n\n400K | Port Adelaide | 40\n\n\n\n\n\n\n\n\n\n\n\n\n\nElla Boag\n\n\n\nPort Adelaide\n\n\nMID\n\n\n\n512K | Port Adelaide | 40\n\n\n\n\n\n\n\n\n\n\n\n\n\nErin Hoare\n\n\n\nGeelong Cats\n\n\nRUC\n\n\n\n422K | Geelong Cats | 39.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrooke Walker\n\n\n\nEssendon\n\n\nDEF\n\n\n\n490K | Essendon | 39.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nShanae Davison\n\n\n\nWest Coast Eagles\n\n\nFWD\n\n\n\n415K | West Coast Eagles | 39.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlly Dallaway\n\n\n\nGWS Giants\n\n\nMID\n\n\n\n598K | GWS Giants | 39.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJanelle Cuthbertson\n\n\n\nPort Adelaide\n\n\nDEF\n\n\n\n451K | Port Adelaide | 39\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeorgia Campbell\n\n\n\nMelbourne\n\n\nFWD\n\n\n\n399K | Melbourne | 39\n\n\n\n\n\n\n\n\n\n\n\n\n\nDaria Bannister\n\n\n\nEssendon\n\n\nFWD\n\n\n\n590K | Essendon | 38.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nNaomi Ferres\n\n\n\nWestern Bulldogs\n\n\nDEF\n\n\n\n524K | Western Bulldogs | 38.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Wright\n\n\n\nNorth Melbourne\n\n\nDEF\n\n\n\n446K | North Melbourne | 38.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMackenzie Eardley\n\n\n\nHawthorn\n\n\nDEF\n\n\n\n474K | Hawthorn | 38.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nPaige Scott\n\n\n\nEssendon\n\n\nFWD\n\n\n\n520K | Essendon | 38.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nRuby Sargent-Wilson\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n449K | Sydney Swans | 38.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nShannon Campbell\n\n\n\nBrisbane Lions\n\n\nDEF\n\n\n\n521K | Brisbane Lions | 38\n\n\n\n\n\n\n\n\n\n\n\n\n\nGabby O‚ÄôSullivan\n\n\n\nFremantle\n\n\nMID\n\n\n\n540K | Fremantle | 38\n\n\n\n\n\n\n\n\n\n\n\n\n\nHannah Stuart\n\n\n\nSt Kilda\n\n\nMID\n\n\n\n624K | St Kilda | 38\n\n\n\n\n\n\n\n\n\n\n\n\n\nMadison Brazendale\n\n\n\nGWS Giants\n\n\nMID\n\n\n\n480K | GWS Giants | 38\n\n\n\n\n\n\n\n\n\n\n\n\n\nLouise Stephenson\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n470K | Hawthorn | 37.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nPepa Randall\n\n\n\nGWS Giants\n\n\nDEF\n\n\n\n417K | GWS Giants | 37.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJordan Membrey\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n451K | Gold Coast Suns | 37.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeorgia Clarke\n\n\n\nEssendon\n\n\nFWD\n\n\n\n467K | Essendon | 37.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nTarni Brown\n\n\n\nCollingwood\n\n\nFWD\n\n\n\n552K | Collingwood | 37.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Goodwin\n\n\n\nAdelaide Crows\n\n\nDEF\n\n\n\n444K | Adelaide Crows | 37.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nNatalie Plane\n\n\n\nSt Kilda\n\n\nFWD\n\n\n\n446K | St Kilda | 37\n\n\n\n\n\n\n\n\n\n\n\n\n\nDaisy Bateman\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n519K | Western Bulldogs | 37\n\n\n\n\n\n\n\n\n\n\n\n\n\nEliza Shannon\n\n\n\nNorth Melbourne\n\n\nDEF\n\n\n\n451K | North Melbourne | 36.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJesse Wardlaw\n\n\n\nSt Kilda\n\n\nFWD\n\n\n\n553K | St Kilda | 36.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbey McDonald\n\n\n\nGeelong Cats\n\n\nDEF\n\n\n\n395K | Geelong Cats | 36.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nCatherine Brown\n\n\n\nHawthorn\n\n\nDEF\n\n\n\n456K | Hawthorn | 36.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrianna McFarlane\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n373K | Western Bulldogs | 36\n\n\n\n\n\n\n\n\n\n\n\n\n\nJenna Richardson\n\n\n\nHawthorn\n\n\nDEF\n\n\n\n436K | Hawthorn | 36\n\n\n\n\n\n\n\n\n\n\n\n\n\nAkec Makur Chuot\n\n\n\nHawthorn\n\n\nDEF\n\n\n\n485K | Hawthorn | 36\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlana Gee\n\n\n\nGold Coast Suns\n\n\nMID\n\n\n\n369K | Gold Coast Suns | 36\n\n\n\n\n\n\n\n\n\n\n\n\n\nAshleigh Saint\n\n\n\nPort Adelaide\n\n\nFWD\n\n\n\n480K | Port Adelaide | 35.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nSophie Casey\n\n\n\nCollingwood\n\n\nDEF\n\n\n\n395K | Collingwood | 35.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlex Ballard\n\n\n\nPort Adelaide\n\n\nDEF\n\n\n\n537K | Port Adelaide | 35.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nVaomua Laloifi\n\n\n\nCarlton\n\n\nDEF\n\n\n\n523K | Carlton | 35.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nTanya Kennedy\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n369K | Sydney Swans | 35.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nEbony O‚ÄôDea\n\n\n\nPort Adelaide\n\n\nMID\n\n\n\n525K | Port Adelaide | 35\n\n\n\n\n\n\n\n\n\n\n\n\n\nTahlia Gillard\n\n\n\nMelbourne\n\n\nRUC\n\n\n\n394K | Melbourne | 35\n\n\n\n\n\n\n\n\n\n\n\n\n\nImogen Barnett\n\n\n\nCollingwood\n\n\nFWD\n\n\n\n534K | Collingwood | 35\n\n\n\n\n\n\n\n\n\n\n\n\n\nErone Fitzpatrick\n\n\n\nCarlton\n\n\nFWD\n\n\n\n361K | Carlton | 35\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmelia Yassir\n\n\n\nRichmond\n\n\nFWD\n\n\n\n407K | Richmond | 34.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nCourtney Rowley\n\n\n\nWest Coast Eagles\n\n\nMID\n\n\n\n526K | West Coast Eagles | 34.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJulia Teakle\n\n\n\nPort Adelaide\n\n\nFWD\n\n\n\n368K | Port Adelaide | 34.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nNiamh McLaughlin\n\n\n\nGold Coast Suns\n\n\nDEF\n\n\n\n351K | Gold Coast Suns | 34.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaggie Gorham\n\n\n\nWestern Bulldogs\n\n\nMID\n\n\n\n327K | Western Bulldogs | 34\n\n\n\n\n\n\n\n\n\n\n\n\n\nOrlagh Lally\n\n\n\nFremantle\n\n\nFWD\n\n\n\n378K | Fremantle | 34\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Verrier\n\n\n\nFremantle\n\n\nDEF\n\n\n\n531K | Fremantle | 33.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nZali Friswell\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n520K | Geelong Cats | 33.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrooke Tonon\n\n\n\nAdelaide Crows\n\n\nDEF\n\n\n\n398K | Adelaide Crows | 33.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMadeline Hendrie\n\n\n\nCarlton\n\n\nRUC\n\n\n\n359K | Carlton | 33.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nElle Bennetts\n\n\n\nWestern Bulldogs\n\n\nMID\n\n\n\n495K | Western Bulldogs | 33\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah D‚ÄôArcy\n\n\n\nRichmond\n\n\nFWD\n\n\n\n432K | Richmond | 32.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAshleigh Richards\n\n\n\nSt Kilda\n\n\nFWD\n\n\n\n346K | St Kilda | 32.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nRuby Tripodi\n\n\n\nNorth Melbourne\n\n\nMID\n\n\n\n351K | North Melbourne | 32.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBailey Hunt\n\n\n\nWestern Bulldogs\n\n\nDEF\n\n\n\n406K | Western Bulldogs | 32\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaeve Chaplin\n\n\n\nMelbourne\n\n\nDEF\n\n\n\n397K | Melbourne | 32\n\n\n\n\n\n\n\n\n\n\n\n\n\nDarcie Davies\n\n\n\nGold Coast Suns\n\n\nRUC\n\n\n\n337K | Gold Coast Suns | 31.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmily Elkington\n\n\n\nWest Coast Eagles\n\n\nMID\n\n\n\n351K | West Coast Eagles | 31.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrooke Lochland\n\n\n\nSydney Swans\n\n\nFWD\n\n\n\n496K | Sydney Swans | 31\n\n\n\n\n\n\n\n\n\n\n\n\n\nEllie Hampson\n\n\n\nBrisbane Lions\n\n\nMID\n\n\n\n651K | Brisbane Lions | 31\n\n\n\n\n\n\n\n\n\n\n\n\n\nPoppy Boltz\n\n\n\nBrisbane Lions\n\n\nDEF\n\n\n\n314K | Brisbane Lions | 31\n\n\n\n\n\n\n\n\n\n\n\n\n\nLauren Ahrens\n\n\n\nGold Coast Suns\n\n\nDEF\n\n\n\n493K | Gold Coast Suns | 31\n\n\n\n\n\n\n\n\n\n\n\n\n\nDaisy Walker\n\n\n\nCarlton\n\n\nFWD\n\n\n\n347K | Carlton | 31\n\n\n\n\n\n\n\n\n\n\n\n\n\nPhoebe Monahan\n\n\n\nBrisbane Lions\n\n\nDEF\n\n\n\n455K | Brisbane Lions | 30.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nLisa Steane\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n433K | Sydney Swans | 30.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaddie Shevlin\n\n\n\nRichmond\n\n\nDEF\n\n\n\n528K | Richmond | 30.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBeth Lynch\n\n\n\nRichmond\n\n\nDEF\n\n\n\n358K | Richmond | 30.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharlotte Mullins\n\n\n\nBrisbane Lions\n\n\nMID\n\n\n\n333K | Brisbane Lions | 30\n\n\n\n\n\n\n\n\n\n\n\n\n\nStacey Livingstone\n\n\n\nCollingwood\n\n\nDEF\n\n\n\n423K | Collingwood | 29.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nClara Fitzpatrick\n\n\n\nGold Coast Suns\n\n\nDEF\n\n\n\n407K | Gold Coast Suns | 29.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nSophie Locke\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n438K | Hawthorn | 29.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nStella Reid\n\n\n\nRichmond\n\n\nFWD\n\n\n\n438K | Richmond | 29.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJoanne Cregg\n\n\n\nFremantle\n\n\nMID\n\n\n\n326K | Fremantle | 29.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJessica Waterhouse\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n415K | Adelaide Crows | 29\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndy Tahau\n\n\n\nPort Adelaide\n\n\nFWD\n\n\n\n477K | Port Adelaide | 29\n\n\n\n\n\n\n\n\n\n\n\n\n\nJade Pregelj\n\n\n\nBrisbane Lions\n\n\nMID\n\n\n\n312K | Brisbane Lions | 29\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Wielstra\n\n\n\nFremantle\n\n\nRUC\n\n\n\n321K | Fremantle | 28.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nCasey Sherriff\n\n\n\nMelbourne\n\n\nMID\n\n\n\n454K | Melbourne | 28\n\n\n\n\n\n\n\n\n\n\n\n\n\nPaige Sheppard\n\n\n\nSydney Swans\n\n\nMID\n\n\n\n430K | Sydney Swans | 28\n\n\n\n\n\n\n\n\n\n\n\n\n\nChloe Dalton\n\n\n\nGWS Giants\n\n\nMID\n\n\n\n551K | GWS Giants | 27.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAshleigh Van Loon\n\n\n\nEssendon\n\n\nDEF\n\n\n\n362K | Essendon | 27.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nEllyse Gamble\n\n\n\nEssendon\n\n\nDEF\n\n\n\n352K | Essendon | 27\n\n\n\n\n\n\n\n\n\n\n\n\n\nAriana Hetherington\n\n\n\nFremantle\n\n\nRUC\n\n\n\n300K | Fremantle | 27\n\n\n\n\n\n\n\n\n\n\n\n\n\nNicola Stevens\n\n\n\nSt Kilda\n\n\nFWD\n\n\n\n473K | St Kilda | 26.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJess Hosking\n\n\n\nRichmond\n\n\nFWD\n\n\n\n444K | Richmond | 26.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnalea McKee\n\n\n\nBrisbane Lions\n\n\nFWD\n\n\n\n300K | Brisbane Lions | 26.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBridie Hipwell\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n330K | Hawthorn | 26.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nTeagan Germech\n\n\n\nGWS Giants\n\n\nDEF\n\n\n\n323K | GWS Giants | 26.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nLauren Wakfer\n\n\n\nWest Coast Eagles\n\n\nRUC\n\n\n\n313K | West Coast Eagles | 26.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelena Karlson\n\n\n\nCollingwood\n\n\nDEF\n\n\n\n316K | Collingwood | 26\n\n\n\n\n\n\n\n\n\n\n\n\n\nTess Craven\n\n\n\nNorth Melbourne\n\n\nFWD\n\n\n\n421K | North Melbourne | 26\n\n\n\n\n\n\n\n\n\n\n\n\n\nLauren Szigeti\n\n\n\nSydney Swans\n\n\nMID\n\n\n\n454K | Sydney Swans | 26\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrace Hill\n\n\n\nGWS Giants\n\n\nFWD\n\n\n\n300K | GWS Giants | 26\n\n\n\n\n\n\n\n\n\n\n\n\n\nLibby Birch\n\n\n\nMelbourne\n\n\nDEF\n\n\n\n501K | Melbourne | 25.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJessica Doyle\n\n\n\nGWS Giants\n\n\nFWD\n\n\n\n326K | GWS Giants | 25.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMikayla Western\n\n\n\nWest Coast Eagles\n\n\nFWD\n\n\n\n384K | West Coast Eagles | 25.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlexia Hamilton\n\n\n\nSydney Swans\n\n\nFWD\n\n\n\n503K | Sydney Swans | 25\n\n\n\n\n\n\n\n\n\n\n\n\n\nCourtney Jones\n\n\n\nRichmond\n\n\nFWD\n\n\n\n487K | Richmond | 25\n\n\n\n\n\n\n\n\n\n\n\n\n\nLibby Graham\n\n\n\nRichmond\n\n\nDEF\n\n\n\n319K | Richmond | 25\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrodee Mowbray\n\n\n\nGWS Giants\n\n\nFWD\n\n\n\n361K | GWS Giants | 25\n\n\n\n\n\n\n\n\n\n\n\n\n\nJulie O‚ÄôSullivan\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n300K | Sydney Swans | 24.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrenna Tarrant\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n393K | Sydney Swans | 24\n\n\n\n\n\n\n\n\n\n\n\n\n\nMegan Fitzsimon\n\n\n\nMelbourne\n\n\nMID\n\n\n\n357K | Melbourne | 24\n\n\n\n\n\n\n\n\n\n\n\n\n\nRebecca Miller\n\n\n\nRichmond\n\n\nDEF\n\n\n\n379K | Richmond | 24\n\n\n\n\n\n\n\n\n\n\n\n\n\nSophie McDonald\n\n\n\nWest Coast Eagles\n\n\nDEF\n\n\n\n360K | West Coast Eagles | 24\n\n\n\n\n\n\n\n\n\n\n\n\n\nMakaela Tuhakaraina\n\n\n\nFremantle\n\n\nFWD\n\n\n\n317K | Fremantle | 24\n\n\n\n\n\n\n\n\n\n\n\n\n\nKirsten McLeod\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n300K | Western Bulldogs | 23.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAshleigh Brazill\n\n\n\nCollingwood\n\n\nFWD\n\n\n\n477K | Collingwood | 23.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeorgie Rankin\n\n\n\nGeelong Cats\n\n\nDEF\n\n\n\n363K | Geelong Cats | 23.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nYasmin Duursma\n\n\n\nPort Adelaide\n\n\nDEF\n\n\n\n383K | Port Adelaide | 23.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nDee Heslop\n\n\n\nBrisbane Lions\n\n\nDEF\n\n\n\n308K | Brisbane Lions | 23\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlice Mitchell\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n300K | Sydney Swans | 23\n\n\n\n\n\n\n\n\n\n\n\n\n\nOlivia Levicki\n\n\n\nPort Adelaide\n\n\nRUC\n\n\n\n506K | Port Adelaide | 23\n\n\n\n\n\n\n\n\n\n\n\n\n\nGenevieve Lawson-Tavan\n\n\n\nCarlton\n\n\nDEF\n\n\n\n300K | Carlton | 22.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlana Porter\n\n\n\nCollingwood\n\n\nFWD\n\n\n\n318K | Collingwood | 22.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlice Burke\n\n\n\nSt Kilda\n\n\nDEF\n\n\n\n376K | St Kilda | 22.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMia Busch\n\n\n\nEssendon\n\n\nDEF\n\n\n\n300K | Essendon | 22.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nBridie Kennedy\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n340K | Sydney Swans | 22\n\n\n\n\n\n\n\n\n\n\n\n\n\nAmy Franklin\n\n\n\nWest Coast Eagles\n\n\nFWD\n\n\n\n335K | West Coast Eagles | 22\n\n\n\n\n\n\n\n\n\n\n\n\n\nTahlia Fellows\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n375K | Hawthorn | 22\n\n\n\n\n\n\n\n\n\n\n\n\n\nEleri Morris\n\n\n\nCollingwood\n\n\nFWD\n\n\n\n300K | Collingwood | 21.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nJessica Low\n\n\n\nFremantle\n\n\nDEF\n\n\n\n300K | Fremantle | 21\n\n\n\n\n\n\n\n\n\n\n\n\n\nRachel Kearns\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n332K | Geelong Cats | 21\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaddie Boyd\n\n\n\nSt Kilda\n\n\nFWD\n\n\n\n300K | St Kilda | 20.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMattea Breed\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n300K | Hawthorn | 20.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nMontana Beruldsen\n\n\n\nSydney Swans\n\n\nMID\n\n\n\n300K | Sydney Swans | 20.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nPhoebe McWilliams\n\n\n\nCarlton\n\n\nFWD\n\n\n\n406K | Carlton | 20\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheyenne Hammond\n\n\n\nPort Adelaide\n\n\nDEF\n\n\n\n300K | Port Adelaide | 20\n\n\n\n\n\n\n\n\n\n\n\n\n\nPoppy Kelly\n\n\n\nRichmond\n\n\nFWD\n\n\n\n300K | Richmond | 20\n\n\n\n\n\n\n\n\n\n\n\n\n\nBeth Pinchin\n\n\n\nSt Kilda\n\n\nDEF\n\n\n\n300K | St Kilda | 20\n\n\n\n\n\n\n\n\n\n\n\n\n\nElla K. Smith\n\n\n\nBrisbane Lions\n\n\nMID\n\n\n\n300K | Brisbane Lions | 20\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmily Everist\n\n\n\nHawthorn\n\n\nDEF\n\n\n\n300K | Hawthorn | 19\n\n\n\n\n\n\n\n\n\n\n\n\n\nKodi Jacques\n\n\n\nEssendon\n\n\nMID\n\n\n\n300K | Essendon | 18.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nKatherine Smith\n\n\n\nGWS Giants\n\n\nDEF\n\n\n\n354K | GWS Giants | 18\n\n\n\n\n\n\n\n\n\n\n\n\n\nMia Austin\n\n\n\nCarlton\n\n\nFWD\n\n\n\n300K | Carlton | 18\n\n\n\n\n\n\n\n\n\n\n\n\n\nAmelie Borg\n\n\n\nPort Adelaide\n\n\nDEF\n\n\n\n300K | Port Adelaide | 17.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nErica Fowler\n\n\n\nCollingwood\n\n\nDEF\n\n\n\n300K | Collingwood | 17\n\n\n\n\n\n\n\n\n\n\n\n\n\nAshanti Bush\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n300K | Gold Coast Suns | 17\n\n\n\n\n\n\n\n\n\n\n\n\n\nCambridge McCormick\n\n\n\nGWS Giants\n\n\nFWD\n\n\n\n352K | GWS Giants | 17\n\n\n\n\n\n\n\n\n\n\n\n\n\nLaura McClelland\n\n\n\nRichmond\n\n\nDEF\n\n\n\n300K | Richmond | 15\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmily Smith\n\n\n\nCollingwood\n\n\nFWD\n\n\n\n300K | Collingwood | 14\n\n\n\n\n\n\n\n\n\n\n\n\n\nDarcy Guttridge\n\n\n\nSt Kilda\n\n\nFWD\n\n\n\n446K | St Kilda | 14\n\n\n\n\n\n\n\n\n\n\n\n\n\nBella R. Smith\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n493K | Sydney Swans | 14\n\n\n\n\n\n\n\n\n\n\n\n\n\nEleanor Hartill\n\n\n\nWest Coast Eagles\n\n\nDEF\n\n\n\n300K | West Coast Eagles | 13.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nKate Bartlett\n\n\n\nWest Coast Eagles\n\n\nFWD\n\n\n\n300K | West Coast Eagles | 12\n\n\n\n\n\n\n\n\n\n\n\n\n\nElla Friend\n\n\n\nSt Kilda\n\n\nDEF\n\n\n\n300K | St Kilda | 12\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnnie Lee\n\n\n\nCarlton\n\n\nFWD\n\n\n\n300K | Carlton | 8\n\n\n\n\n\n\n\n\n\n\n\n\n\nMelissa Bragg\n\n\n\nGeelong Cats\n\n\nDEF\n\n\n\n300K | Geelong Cats | 7.5\n\n\n\n\n\n\n\n\n\n\n\n\n\nEliza James\n\n\n\nCollingwood\n\n\nFWD\n\n\n\n435K | Collingwood | 6\n\n\n\n\n\n\n\n\n\n\n\n\n\nSachi Syme\n\n\n\nPort Adelaide\n\n\nMID\n\n\n\n300K | Port Adelaide | 6\n\n\n\n\n\n\n\n\n\n\n\n\n\nCaitlin Miller\n\n\n\nGWS Giants\n\n\nFWD\n\n\n\n300K | GWS Giants | 4\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharlotte Wilson\n\n\n\nMelbourne\n\n\nDEF\n\n\n\n300K | Melbourne | 2\n\n\n\n\n\n\n\n\n\n\n\n\n\nTaylor Ortlepp\n\n\n\nCarlton\n\n\nMID\n\n\n\n300K | Carlton | 2\n\n\n\n\n\n\n\n\n\n\n\n\n\nRichelle Cranston\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n574K | Western Bulldogs | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMadeline Keryk\n\n\n\nPort Adelaide\n\n\nDEF\n\n\n\n317K | Port Adelaide | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nRosie Dillon\n\n\n\nSt Kilda\n\n\nMID\n\n\n\n752K | St Kilda | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nIsabel Huntington\n\n\n\nGWS Giants\n\n\nFWD\n\n\n\n300K | GWS Giants | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJenna Bruton\n\n\n\nNorth Melbourne\n\n\nMID\n\n\n\n940K | North Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaddy Collier\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n456K | Sydney Swans | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nDeni Varnhagen\n\n\n\nAdelaide Crows\n\n\nMID\n\n\n\n300K | Adelaide Crows | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Allan\n\n\n\nAdelaide Crows\n\n\nDEF\n\n\n\n512K | Adelaide Crows | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nLeah Cutting\n\n\n\nEssendon\n\n\nRUC\n\n\n\n573K | Essendon | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMeagan Kiely\n\n\n\nRichmond\n\n\nFWD\n\n\n\n491K | Richmond | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAimee Schmidt\n\n\n\nWest Coast Eagles\n\n\nFWD\n\n\n\n300K | West Coast Eagles | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nKate Lutkins\n\n\n\nBrisbane Lions\n\n\nDEF\n\n\n\n451K | Brisbane Lions | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAinslie Kemp\n\n\n\nHawthorn\n\n\nDEF\n\n\n\n455K | Hawthorn | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJasmine Grierson\n\n\n\nGWS Giants\n\n\nDEF\n\n\n\n511K | GWS Giants | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nErin McKinnon\n\n\n\nSt Kilda\n\n\nRUC\n\n\n\n600K | St Kilda | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nRuby Schleicher\n\n\n\nCollingwood\n\n\nMID\n\n\n\n957K | Collingwood | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nShelley Scott\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n619K | Geelong Cats | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nNat Exon\n\n\n\nSt Kilda\n\n\nFWD\n\n\n\n650K | St Kilda | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCatherine Phillips\n\n\n\nEssendon\n\n\nFWD\n\n\n\n684K | Essendon | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJordan Ivey\n\n\n\nMelbourne\n\n\nFWD\n\n\n\n320K | Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nElise Barwick\n\n\n\nGold Coast Suns\n\n\nMID\n\n\n\n300K | Gold Coast Suns | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nOlivia Fuller\n\n\n\nGeelong Cats\n\n\nRUC\n\n\n\n842K | Geelong Cats | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nTait Mackrill\n\n\n\nGWS Giants\n\n\nMID\n\n\n\n656K | GWS Giants | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nNikki Nield\n\n\n\nFremantle\n\n\nMID\n\n\n\n730K | Fremantle | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJanet Baird\n\n\n\nHawthorn\n\n\nMID\n\n\n\n300K | Hawthorn | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nZimmorlei Farquharson\n\n\n\nBrisbane Lions\n\n\nFWD\n\n\n\n508K | Brisbane Lions | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nRebecca Webster\n\n\n\nGeelong Cats\n\n\nMID\n\n\n\n968K | Geelong Cats | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMillie Brown\n\n\n\nWestern Bulldogs\n\n\nDEF\n\n\n\n300K | Western Bulldogs | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nRene Caris\n\n\n\nGWS Giants\n\n\nRUC\n\n\n\n315K | GWS Giants | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nEleanor Brown\n\n\n\nWestern Bulldogs\n\n\nDEF\n\n\n\n616K | Western Bulldogs | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMadeleine Guerin\n\n\n\nCarlton\n\n\nFWD\n\n\n\n641K | Carlton | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nElla G. Smith\n\n\n\nWest Coast Eagles\n\n\nFWD\n\n\n\n300K | West Coast Eagles | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMcKenzie Dowrick\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n375K | Adelaide Crows | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nRoxanne Roux\n\n\n\nFremantle\n\n\nFWD\n\n\n\n585K | Fremantle | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJacqui Yorston\n\n\n\nRichmond\n\n\nMID\n\n\n\n891K | Richmond | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nKerryn Peterson\n\n\n\nCarlton\n\n\nMID\n\n\n\n897K | Carlton | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nLauren Butler\n\n\n\nCollingwood\n\n\nDEF\n\n\n\n805K | Collingwood | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nGabrielle Colvin\n\n\n\nMelbourne\n\n\nFWD\n\n\n\n351K | Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMolly Eastman\n\n\n\nRichmond\n\n\nDEF\n\n\n\n660K | Richmond | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nHayley Bullas\n\n\n\nSydney Swans\n\n\nMID\n\n\n\n460K | Sydney Swans | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlexandra Morcom\n\n\n\nEssendon\n\n\nDEF\n\n\n\n300K | Essendon | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nEvangeline Gooch\n\n\n\nWest Coast Eagles\n\n\nDEF\n\n\n\n478K | West Coast Eagles | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nTegan Cunningham\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n438K | Hawthorn | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJade De Melo\n\n\n\nPort Adelaide\n\n\nFWD\n\n\n\n491K | Port Adelaide | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nHannah Munyard\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n528K | Adelaide Crows | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nLisa Whiteley\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n352K | Adelaide Crows | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nHannah Button\n\n\n\nAdelaide Crows\n\n\nDEF\n\n\n\n429K | Adelaide Crows | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAmber Ward\n\n\n\nAdelaide Crows\n\n\nDEF\n\n\n\n300K | Adelaide Crows | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nPhilipa Seth\n\n\n\nFremantle\n\n\nFWD\n\n\n\n484K | Fremantle | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nTara Stribley\n\n\n\nFremantle\n\n\nFWD\n\n\n\n303K | Fremantle | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nGabrielle Biedenweg-Webster\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n300K | Gold Coast Suns | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJayde Van Dyk\n\n\n\nSt Kilda\n\n\nDEF\n\n\n\n378K | St Kilda | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nImogen Milford\n\n\n\nCarlton\n\n\nFWD\n\n\n\n300K | Carlton | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlana Woodward\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n366K | Sydney Swans | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nSamantha Johnson\n\n\n\nMelbourne\n\n\nFWD\n\n\n\n300K | Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nRhiannon Watt\n\n\n\nMelbourne\n\n\nRUC\n\n\n\n478K | Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nStephanie Williams\n\n\n\nRichmond\n\n\nFWD\n\n\n\n300K | Richmond | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nBritney Gutknecht\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n467K | Western Bulldogs | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAilish Considine\n\n\n\nNorth Melbourne\n\n\nMID\n\n\n\n323K | North Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nRenee Tierney\n\n\n\nEssendon\n\n\nMID\n\n\n\n300K | Essendon | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCiara Fitzgerald\n\n\n\nCarlton\n\n\nDEF\n\n\n\n300K | Carlton | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nTahlia Meyer\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n431K | Gold Coast Suns | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nTaylah Levy\n\n\n\nAdelaide Crows\n\n\nMID\n\n\n\n300K | Adelaide Crows | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nElizabeth Snell\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n391K | Western Bulldogs | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlana Barba\n\n\n\nEssendon\n\n\nMID\n\n\n\n414K | Essendon | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nKrstel Petrevski\n\n\n\nWest Coast Eagles\n\n\nFWD\n\n\n\n300K | West Coast Eagles | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nBridget Deed\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n448K | Hawthorn | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nSerena Gibbs\n\n\n\nFremantle\n\n\nFWD\n\n\n\n300K | Fremantle | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nLily-Rose Williamson\n\n\n\nEssendon\n\n\nFWD\n\n\n\n339K | Essendon | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nRenee Saulitis\n\n\n\nSt Kilda\n\n\nFWD\n\n\n\n300K | St Kilda | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nIsabella Simmons\n\n\n\nWest Coast Eagles\n\n\nFWD\n\n\n\n301K | West Coast Eagles | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCassidy Mailer\n\n\n\nNorth Melbourne\n\n\nDEF\n\n\n\n300K | North Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nOlivia Barber\n\n\n\nCollingwood\n\n\nFWD\n\n\n\n344K | Collingwood | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nSophia McCarthy\n\n\n\nNorth Melbourne\n\n\nFWD\n\n\n\n300K | North Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAurora Smith\n\n\n\nWestern Bulldogs\n\n\nMID\n\n\n\n300K | Western Bulldogs | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeorgia Gall\n\n\n\nMelbourne\n\n\nFWD\n\n\n\n300K | Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAmelia Peck\n\n\n\nRichmond\n\n\nFWD\n\n\n\n300K | Richmond | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJoanna Lin\n\n\n\nCollingwood\n\n\nDEF\n\n\n\n577K | Collingwood | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMontana Ham\n\n\n\nSydney Swans\n\n\nMID\n\n\n\n881K | Sydney Swans | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMia Van Dyke\n\n\n\nEssendon\n\n\nDEF\n\n\n\n300K | Essendon | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMia Skinner\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n300K | Geelong Cats | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nIngrid Houtsma\n\n\n\nGeelong Cats\n\n\nDEF\n\n\n\n300K | Geelong Cats | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nGabbi Featherston\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n300K | Geelong Cats | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJemima Woods\n\n\n\nRichmond\n\n\nFWD\n\n\n\n300K | Richmond | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nElla Maurer\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n300K | Gold Coast Suns | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJaide Anthony\n\n\n\nSydney Swans\n\n\nFWD\n\n\n\n300K | Sydney Swans | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nDeanna Jolliffe\n\n\n\nSt Kilda\n\n\nDEF\n\n\n\n446K | St Kilda | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nVivien Saad\n\n\n\nGold Coast Suns\n\n\nDEF\n\n\n\n519K | Gold Coast Suns | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nDanielle Marshall\n\n\n\nEssendon\n\n\nDEF\n\n\n\n574K | Essendon | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmily Pease\n\n\n\nGWS Giants\n\n\nMID\n\n\n\n826K | GWS Giants | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnnise Bradfield\n\n\n\nGWS Giants\n\n\nFWD\n\n\n\n300K | GWS Giants | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMikayla Morrison\n\n\n\nFremantle\n\n\nFWD\n\n\n\n464K | Fremantle | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nLiz McGrath\n\n\n\nNorth Melbourne\n\n\nRUC\n\n\n\n621K | North Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nSarah Ford\n\n\n\nSydney Swans\n\n\nFWD\n\n\n\n300K | Sydney Swans | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJoanne Doonan\n\n\n\nEssendon\n\n\nMID\n\n\n\n384K | Essendon | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaria Moloney\n\n\n\nPort Adelaide\n\n\nMID\n\n\n\n849K | Port Adelaide | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nKeeley Kustermann\n\n\n\nAdelaide Crows\n\n\nMID\n\n\n\n300K | Adelaide Crows | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJade Halfpenny\n\n\n\nPort Adelaide\n\n\nFWD\n\n\n\n380K | Port Adelaide | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nKatelyn Pope\n\n\n\nPort Adelaide\n\n\nMID\n\n\n\n314K | Port Adelaide | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nTahlia Read\n\n\n\nCarlton\n\n\nFWD\n\n\n\n300K | Carlton | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharlotte Blair\n\n\n\nCollingwood\n\n\nMID\n\n\n\n300K | Collingwood | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharley Ryan\n\n\n\nRichmond\n\n\nMID\n\n\n\n300K | Richmond | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrooke Smith\n\n\n\nAdelaide Crows\n\n\nFWD\n\n\n\n300K | Adelaide Crows | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nZara Hamilton\n\n\n\nGWS Giants\n\n\nDEF\n\n\n\n300K | GWS Giants | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrooke Plummer\n\n\n\nGeelong Cats\n\n\nFWD\n\n\n\n372K | Geelong Cats | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCaitlin Matthews\n\n\n\nSt Kilda\n\n\nDEF\n\n\n\n300K | St Kilda | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharlotte Taylor\n\n\n\nCollingwood\n\n\nFWD\n\n\n\n300K | Collingwood | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMeghan Gaffney\n\n\n\nGWS Giants\n\n\nFWD\n\n\n\n307K | GWS Giants | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nClaire Ransom\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n300K | Gold Coast Suns | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJ‚ÄôNoemi Anderson\n\n\n\nSt Kilda\n\n\nFWD\n\n\n\n300K | St Kilda | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nChloe Wrigley\n\n\n\nCarlton\n\n\nMID\n\n\n\n300K | Carlton | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMatilda Dyke\n\n\n\nEssendon\n\n\nRUC\n\n\n\n300K | Essendon | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nBethany Schilling\n\n\n\nWest Coast Eagles\n\n\nDEF\n\n\n\n300K | West Coast Eagles | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMikayla Pauga\n\n\n\nBrisbane Lions\n\n\nFWD\n\n\n\n483K | Brisbane Lions | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nImogen Evans\n\n\n\nCollingwood\n\n\nMID\n\n\n\n497K | Collingwood | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiselle Davies\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n300K | Gold Coast Suns | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nLilly Pearce\n\n\n\nRichmond\n\n\nRUC\n\n\n\n300K | Richmond | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nTessa Lavey\n\n\n\nRichmond\n\n\nDEF\n\n\n\n571K | Richmond | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nPaige Trudgeon\n\n\n\nCarlton\n\n\nDEF\n\n\n\n300K | Carlton | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nLulu Beatty\n\n\n\nCarlton\n\n\nDEF\n\n\n\n328K | Carlton | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nRebecca Ott\n\n\n\nSt Kilda\n\n\nDEF\n\n\n\n384K | St Kilda | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAimee Whelan\n\n\n\nSydney Swans\n\n\nMID\n\n\n\n553K | Sydney Swans | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nHannah Bowey\n\n\n\nNorth Melbourne\n\n\nMID\n\n\n\n300K | North Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nLucy Burke\n\n\n\nNorth Melbourne\n\n\nFWD\n\n\n\n404K | North Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nEliza Vale\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n301K | Sydney Swans | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrooke Sheridan\n\n\n\nBrisbane Lions\n\n\nFWD\n\n\n\n300K | Brisbane Lions | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nBella K. Smith\n\n\n\nBrisbane Lions\n\n\nMID\n\n\n\n300K | Brisbane Lions | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJasmyn Smith\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n425K | Gold Coast Suns | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nLaquoiya Cockatoo-Motlap\n\n\n\nPort Adelaide\n\n\nFWD\n\n\n\n300K | Port Adelaide | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nLitonya Cockatoo-Motlap\n\n\n\nPort Adelaide\n\n\nDEF\n\n\n\n300K | Port Adelaide | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeorgie Jaques\n\n\n\nPort Adelaide\n\n\nRUC\n\n\n\n308K | Port Adelaide | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nIsadora McLeay\n\n\n\nGWS Giants\n\n\nDEF\n\n\n\n300K | GWS Giants | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCaitlin Wendland\n\n\n\nBrisbane Lions\n\n\nMID\n\n\n\n300K | Brisbane Lions | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbbygail Bushby\n\n\n\nWest Coast Eagles\n\n\nMID\n\n\n\n300K | West Coast Eagles | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJasmine Simmons\n\n\n\nPort Adelaide\n\n\nDEF\n\n\n\n300K | Port Adelaide | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nLuka Yoshida-Martin\n\n\n\nBrisbane Lions\n\n\nFWD\n\n\n\n300K | Brisbane Lions | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeorgina Fowler\n\n\n\nMelbourne\n\n\nMID\n\n\n\n300K | Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nKaylee Kimber\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n300K | Gold Coast Suns | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nKiara Hillier\n\n\n\nBrisbane Lions\n\n\nDEF\n\n\n\n300K | Brisbane Lions | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nLily Johnson\n\n\n\nPort Adelaide\n\n\nDEF\n\n\n\n318K | Port Adelaide | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nHeidi Woodley\n\n\n\nWestern Bulldogs\n\n\nFWD\n\n\n\n549K | Western Bulldogs | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharli Granville\n\n\n\nNorth Melbourne\n\n\nFWD\n\n\n\n300K | North Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nZoe Barbakos\n\n\n\nHawthorn\n\n\nFWD\n\n\n\n300K | Hawthorn | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nSamantha Gooden\n\n\n\nGeelong Cats\n\n\nRUC\n\n\n\n300K | Geelong Cats | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCara McCrossan\n\n\n\nGold Coast Suns\n\n\nFWD\n\n\n\n326K | Gold Coast Suns | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nMackenzie Webb\n\n\n\nWest Coast Eagles\n\n\nDEF\n\n\n\n300K | West Coast Eagles | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmmelie Fiedler\n\n\n\nFremantle\n\n\nRUC\n\n\n\n324K | Fremantle | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJae Flynn\n\n\n\nFremantle\n\n\nMID\n\n\n\n304K | Fremantle | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharli Wicksteed\n\n\n\nRichmond\n\n\nMID\n\n\n\n300K | Richmond | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nZoe Wakfer\n\n\n\nWest Coast Eagles\n\n\nDEF\n\n\n\n300K | West Coast Eagles | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nTess Cattle\n\n\n\nGWS Giants\n\n\nDEF\n\n\n\n358K | GWS Giants | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nVikki Wall\n\n\n\nNorth Melbourne\n\n\nFWD\n\n\n\n667K | North Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nZoe Savarirayan\n\n\n\nNorth Melbourne\n\n\nFWD\n\n\n\n320K | North Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nKiara Beesley\n\n\n\nSydney Swans\n\n\nDEF\n\n\n\n300K | Sydney Swans | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nSaraid Taylor\n\n\n\nMelbourne\n\n\nDEF\n\n\n\n300K | Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nKate Reynolds\n\n\n\nSydney Swans\n\n\nRUC\n\n\n\n331K | Sydney Swans | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nTahleah Mulder\n\n\n\nFremantle\n\n\nMID\n\n\n\n332K | Fremantle | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nShelby Knoll\n\n\n\nRichmond\n\n\nFWD\n\n\n\n300K | Richmond | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCasey Dumont\n\n\n\nHawthorn\n\n\nDEF\n\n\n\n300K | Hawthorn | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJennifer Dunne\n\n\n\nBrisbane Lions\n\n\nDEF\n\n\n\n300K | Brisbane Lions | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nDayna Finn\n\n\n\nCarlton\n\n\nMID\n\n\n\n300K | Carlton | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nJennifer Higgins\n\n\n\nSydney Swans\n\n\nMID\n\n\n\n300K | Sydney Swans | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnna-Rose Kennedy\n\n\n\nGeelong Cats\n\n\nDEF\n\n\n\n300K | Geelong Cats | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nAimee Mackin\n\n\n\nMelbourne\n\n\nFWD\n\n\n\n300K | Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nNiamh Martin\n\n\n\nNorth Melbourne\n\n\nDEF\n\n\n\n300K | North Melbourne | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nParis McCarthy\n\n\n\nSydney Swans\n\n\nMID\n\n\n\n300K | Sydney Swans | NA\n\n\n\n\n\n\n\n\n\n\n\n\n\nCourtney Murphy\n\n\n\nBrisbane Lions\n\n\nRUC\n\n\n\n300K | Brisbane Lions | NA\n\n\n\n\n\n\n\nNo matching items\n\n\n  \n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "players/aflw/index.html",
    "href": "players/aflw/index.html",
    "title": "AFLW Player Data",
    "section": "",
    "text": "library(reactable)\nlibrary(htmltools)\nlibrary(tippy)\nlibrary(bslib)\nlibrary(arrow)\nlibrary(stringr)\nlibrary(data.table)\nlibrary(dplyr)\nlibrary(purrr)\n\nsource(\"../../parameters.R\")\n\nsource(\"https://github.com/bit-in-that/data-automation/raw/main/aflw_fantasy/modules/get_player_data_afw.R\")\nplayer_data &lt;- get_player_data()\nplayer_data_round &lt;- get_player_data(by_round = TRUE)\n\nplayer_details_all &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/raw/player_details_all.parquet\")\n\nplayer_data_columns &lt;- as_tibble(fread(\"../player_data_column_info.csv\"))\n\n\naflw_player_details &lt;- player_details_all |&gt; \n  filter(\n    competition_name_lookup == \"AFLW\", year ==2023\n  ) |&gt;\n  select(\n    id = playerId,\n    playerDetails.heightCm,\n    playerDetails.age,\n    date_of_birth = playerDetails.dateOfBirth,\n    playerDetails.stateOfOrigin,\n    # recruited_from = playerDetails.recruitedFrom,\n    starts_with(\"averages\")\n  ) |&gt; \n  select(-averages.ranking, -averages.ratingPoints, -averages.superGoals, -averages.fantasy_points, \n         -averages.turnovers, -averages.matchesPlayed, -averages.dreamTeamPoints) |&gt;\n  mutate(\n    date_of_birth = as.Date(date_of_birth, format = \"%e/%m/%Y\")\n  )  |&gt; \n  rename_with(~ {\n    .x |&gt;\n      str_remove(\"^averages\\\\.\") #|&gt;\n  }, .cols = starts_with(\"averages\")) |&gt; \n  relocate(goals, .before = behinds) |&gt; \n  relocate(kicks, .before = handballs)\n\nseason_stat_names &lt;- aflw_player_details |&gt; \n  select(behinds:tacklesInside50) |&gt; \n  names()\n\nplayer_data_restricted &lt;- player_data |&gt; \n  mutate(\n      id = paste0(\"CD_I\", id),\n      gamesPlayed  = if_else(is.na(gamesPlayed), 0L, gamesPlayed)\n    ) |&gt; \n  select(id, full_name, squad_name, gamesPlayed, position, cost, avgPoints, avgPointsLast3, avgPointsLast5, seasonPriceChange, lastRoundPriceChange) |&gt; \n  left_join(aflw_player_details, by = \"id\") |&gt; \n  arrange(desc(cost)) |&gt; \n  relocate(id, .before = playerDetails.heightCm)\n\n\n\nformat_price &lt;- function(cell_value) {\n  if(is.na(cell_value)) {\n    \"\"\n  } else {\n    sign_prefix &lt;- if(cell_value &gt; 0) \"\" else \"-\"\n    paste0(sign_prefix, \"$\", format(round(abs(cell_value/1000), digits = 0), big.mark = \",\"), \"K\")\n    \n  }\n}\n\nformat_date &lt;- function(cell_value) {\n  if(is.na(cell_value)) {\n    \"\"\n  } else {\n    format(cell_value, format = \"%e %b %Y\")\n  }\n}\n\n\n# player_data_restricted\n\n# TODO: for individual players create this and save as a RDS (generate in separate script), then whenever the full colDef is needed, it can be read in\n\nverbose_name_map &lt;- player_data_columns$verbose_name |&gt; \n  `names&lt;-`(player_data_columns$column_name)\n\nhover_over_verbose_name &lt;- function(header_value, column_name){\n  tippy(header_value, verbose_name_map[column_name])\n  }\n\n\nreactable_specification &lt;- player_data_columns |&gt;\n  filter(\n   column_name %in% names(player_data_restricted)\n  ) |&gt; \n  mutate(\n    colDefs_base = abbreviated_name |&gt; \n      map2(width, ~ colDef(name = .x, header = hover_over_verbose_name, minWidth = .y)) |&gt; \n      `names&lt;-`(column_name),\n     colDefs_base = case_when(\n       is_price ~ map(colDefs_base, ~ structure(c(.x, list(cell = format_price)),  class = \"colDef\")),\n       is_date ~ map(colDefs_base, ~ structure(c(.x, list(cell = format_date)),  class = \"colDef\")),\n       TRUE ~ colDefs_base\n      ),\n    colDefs_default = colDefs_base |&gt; \n      map2(default_stats, ~ structure(c(.x, list(show = .y)),  class = \"colDef\")),\n    colDefs_basic = colDefs_base |&gt; \n      map2(basic_stats, ~ structure(c(.x, list(show = .y)),  class = \"colDef\"))\n  )\n\ncolGroups_default &lt;- reactable_specification |&gt; \n  group_by(grouping) |&gt; \n  summarise(\n    columns = list(column_name)\n  ) |&gt; \n  mutate(\n    colGroups_default = map2(grouping, columns, ~ colGroup(name = .x, columns = .y, headerStyle = list(\"white-space\" = \"nowrap\")))\n  ) |&gt; \n  pull()\n\nadditional_columns &lt;- list(\n  full_name = colDef(\n    name = \"Player\",\n    sticky = \"left\",\n    cell = function(cell_value, row_index, column_name) {\n      id &lt;- player_data_restricted[[\"id\"]][[row_index]]\n      img_url &lt;- paste0(\"https://aflwfantasy.afl/media/players/\", str_remove(id, \"CD_I\"), \"_500.webp\")\n      player_url &lt;- paste0(\"https://dfsaustralia.com/aflw-fantasy-player-summary/?playerId=\", id)\n      tags$a(\n        tags$img(src = img_url, style = \"height: 24px;width: 24px;\"),\n        \" \",\n        cell_value,\n        href = player_url,\n        target = \"_blank\"\n        )\n      },\n    width = 200)\n  )\n\n\nplayer_data_basic &lt;- player_data_restricted |&gt; \n  reactable(\n    columns = c(reactable_specification$colDefs_basic, additional_columns),\n    columnGroups = colGroups_default,\n    elementId = \"player-data\",\n    filterable = TRUE\n    )\n\nplayer_data_default &lt;- player_data_restricted |&gt; \n  reactable(\n    columns = c(reactable_specification$colDefs_default, additional_columns),\n    columnGroups = colGroups_default,\n    elementId = \"player-data-default\",\n    filterable = TRUE\n    )\n\n\n\nBasic\nMain\n\n\n\n\ntagList(\n  tags$button(\"Download as CSV\", onclick = \"download_table()\"),\n  tags$button(\"Show All\", onclick = \"Reactable.setHiddenColumns('player-data', [''])\"),\n  player_data_basic\n)\n\n\nDownload as CSV\nShow All\n\n\n\n\n\n\n\ntagList(\n  tags$button(\"Download as CSV\", onclick = \"download_table()\"),\n  tags$button(\"Show All\", onclick = \"Reactable.setHiddenColumns('player-data-default', [''])\"),\n  player_data_default\n)\n\n\nDownload as CSV\nShow All\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1002587.html",
    "href": "players/afl/underage_profiles/CD_I1002587.html",
    "title": "Josh Chatfield",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1002587.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1002587.html#player-details",
    "title": "Josh Chatfield",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2000-08-02\n\n\nState:\nVIC\n\n\nState League Club:\nFootscray Bulldogs (VFL)\n\n\nCommunity Club:\nNorth Ballarat\n\n\nHeight:\n187-191cm\n\n\nWeight:\n83-86kg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1002587.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1002587.html#seasons",
    "title": "Josh Chatfield",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1002587.html#matches",
    "href": "players/afl/underage_profiles/CD_I1002587.html#matches",
    "title": "Josh Chatfield",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1009643.html",
    "href": "players/afl/underage_profiles/CD_I1009643.html",
    "title": "Mutaz El Nour",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1009643.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1009643.html#player-details",
    "title": "Mutaz El Nour",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2001-08-14\n\n\nState:\nVIC\n\n\nState League Club:\nRichmond (VFL)\n\n\nCommunity Club:\nCaroline Springs\n\n\nHeight:\n192cm\n\n\nWeight:\n83kg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1009643.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1009643.html#seasons",
    "title": "Mutaz El Nour",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1009643.html#matches",
    "href": "players/afl/underage_profiles/CD_I1009643.html#matches",
    "title": "Mutaz El Nour",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1013996.html",
    "href": "players/afl/underage_profiles/CD_I1013996.html",
    "title": "Jordan Croft",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1013996.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1013996.html#player-details",
    "title": "Jordan Croft",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-12\n\n\nState:\nVIC M\n\n\nState League Club:\nCalder Cannons\n\n\nCommunity Club:\nMaribyrnong Park\n\n\nHeight:\n199-200cm\n\n\nWeight:\n75-80kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n14\n\n\nPhantom Draft Ranking (Sporting News):\n13\n\n\nPhantom Draft Ranking (Fox Sports):\n13\n\n\nPhantom Draft Ranking (Abc):\n16"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1013996.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1013996.html#seasons",
    "title": "Jordan Croft",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1013996.html#matches",
    "href": "players/afl/underage_profiles/CD_I1013996.html#matches",
    "title": "Jordan Croft",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1014013.html",
    "href": "players/afl/underage_profiles/CD_I1014013.html",
    "title": "Lachlan Charleson",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1014013.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1014013.html#player-details",
    "title": "Lachlan Charleson",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-01-29\n\n\nState:\nVIC C\n\n\nState League Club:\nGWV Rebels\n\n\nCommunity Club:\nEast Point\n\n\nHeight:\n176-184cm\n\n\nWeight:\n73kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1014013.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1014013.html#seasons",
    "title": "Lachlan Charleson",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1014013.html#matches",
    "href": "players/afl/underage_profiles/CD_I1014013.html#matches",
    "title": "Lachlan Charleson",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1017939.html",
    "href": "players/afl/underage_profiles/CD_I1017939.html",
    "title": "Ryley Sanders",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1017939.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1017939.html#player-details",
    "title": "Ryley Sanders",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-01-21\n\n\nState:\nTAS\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nNorth Launceston\n\n\nHeight:\n184-186cm\n\n\nWeight:\n76-85kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n7\n\n\nPhantom Draft Ranking (Sporting News):\n6\n\n\nPhantom Draft Ranking (Fox Sports):\n8\n\n\nPhantom Draft Ranking (Abc):\n6"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1017939.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1017939.html#seasons",
    "title": "Ryley Sanders",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1017939.html#matches",
    "href": "players/afl/underage_profiles/CD_I1017939.html#matches",
    "title": "Ryley Sanders",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1017959.html",
    "href": "players/afl/underage_profiles/CD_I1017959.html",
    "title": "Lance Collard",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1017959.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1017959.html#player-details",
    "title": "Lance Collard",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-03-26\n\n\nState:\nWA\n\n\nState League Club:\nSubiaco\n\n\nCommunity Club:\nNorth Beach\n\n\nHeight:\n179-180cm\n\n\nWeight:\n66-68kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n18\n\n\nPhantom Draft Ranking (Sporting News):\n20\n\n\nPhantom Draft Ranking (Fox Sports):\n18\n\n\nPhantom Draft Ranking (Abc):\n23"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1017959.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1017959.html#seasons",
    "title": "Lance Collard",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1017959.html#matches",
    "href": "players/afl/underage_profiles/CD_I1017959.html#matches",
    "title": "Lance Collard",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1018123.html",
    "href": "players/afl/underage_profiles/CD_I1018123.html",
    "title": "Jake Rogers",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1018123.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1018123.html#player-details",
    "title": "Jake Rogers",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-03-02\n\n\nState:\nQLD\n\n\nState League Club:\nGold Coast Suns Academy\n\n\nCommunity Club:\nBroadbeach\n\n\nHeight:\n172cm\n\n\nWeight:\n67-69kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n13\n\n\nPhantom Draft Ranking (Sporting News):\n14\n\n\nPhantom Draft Ranking (Fox Sports):\n11\n\n\nPhantom Draft Ranking (Abc):\n12"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1018123.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1018123.html#seasons",
    "title": "Jake Rogers",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1018123.html#matches",
    "href": "players/afl/underage_profiles/CD_I1018123.html#matches",
    "title": "Jake Rogers",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019916.html",
    "href": "players/afl/underage_profiles/CD_I1019916.html",
    "title": "Kane McAuliffe",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019916.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1019916.html#player-details",
    "title": "Kane McAuliffe",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-03-01\n\n\nState:\nSA\n\n\nState League Club:\nNorth Adelaide\n\n\nCommunity Club:\nCentral Augusta\n\n\nHeight:\n188cm\n\n\nWeight:\n88kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019916.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1019916.html#seasons",
    "title": "Kane McAuliffe",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019916.html#matches",
    "href": "players/afl/underage_profiles/CD_I1019916.html#matches",
    "title": "Kane McAuliffe",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019938.html",
    "href": "players/afl/underage_profiles/CD_I1019938.html",
    "title": "Logan Evans",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019938.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1019938.html#player-details",
    "title": "Logan Evans",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-10-07\n\n\nState:\nSA\n\n\nState League Club:\nNorwood\n\n\nCommunity Club:\nHectorville\n\n\nHeight:\n189-190cm\n\n\nWeight:\n76-78kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019938.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1019938.html#seasons",
    "title": "Logan Evans",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019938.html#matches",
    "href": "players/afl/underage_profiles/CD_I1019938.html#matches",
    "title": "Logan Evans",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019939.html",
    "href": "players/afl/underage_profiles/CD_I1019939.html",
    "title": "William Rowlands",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019939.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1019939.html#player-details",
    "title": "William Rowlands",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-19\n\n\nState:\nNT/SA\n\n\nState League Club:\nNT Academy/Norwood\n\n\nCommunity Club:\nSouthern Districts\n\n\nHeight:\n178-180cm\n\n\nWeight:\n74-80kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019939.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1019939.html#seasons",
    "title": "William Rowlands",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019939.html#matches",
    "href": "players/afl/underage_profiles/CD_I1019939.html#matches",
    "title": "William Rowlands",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019975.html",
    "href": "players/afl/underage_profiles/CD_I1019975.html",
    "title": "Jack Delean",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019975.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1019975.html#player-details",
    "title": "Jack Delean",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-15\n\n\nState:\nSA\n\n\nState League Club:\nSouth Adelaide\n\n\nCommunity Club:\nReynella\n\n\nHeight:\n182cm\n\n\nWeight:\n74kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019975.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1019975.html#seasons",
    "title": "Jack Delean",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1019975.html#matches",
    "href": "players/afl/underage_profiles/CD_I1019975.html#matches",
    "title": "Jack Delean",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020020.html",
    "href": "players/afl/underage_profiles/CD_I1020020.html",
    "title": "Alex Holt",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020020.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1020020.html#player-details",
    "title": "Alex Holt",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-01-28\n\n\nState:\nSA\n\n\nState League Club:\nSturt\n\n\nCommunity Club:\nGlenunga\n\n\nHeight:\n183cm\n\n\nWeight:\n81kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020020.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1020020.html#seasons",
    "title": "Alex Holt",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020020.html#matches",
    "href": "players/afl/underage_profiles/CD_I1020020.html#matches",
    "title": "Alex Holt",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020032.html",
    "href": "players/afl/underage_profiles/CD_I1020032.html",
    "title": "Loch Rawlinson",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020032.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1020032.html#player-details",
    "title": "Loch Rawlinson",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-01\n\n\nState:\nSA\n\n\nState League Club:\nSturt\n\n\nCommunity Club:\nMitcham\n\n\nHeight:\n177cm\n\n\nWeight:\n69kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020032.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1020032.html#seasons",
    "title": "Loch Rawlinson",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020032.html#matches",
    "href": "players/afl/underage_profiles/CD_I1020032.html#matches",
    "title": "Loch Rawlinson",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020036.html",
    "href": "players/afl/underage_profiles/CD_I1020036.html",
    "title": "Luca Slade",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020036.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1020036.html#player-details",
    "title": "Luca Slade",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-03\n\n\nState:\nSA\n\n\nState League Club:\nSturt\n\n\nCommunity Club:\nGlenunga\n\n\nHeight:\n182cm\n\n\nWeight:\n70kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020036.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1020036.html#seasons",
    "title": "Luca Slade",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020036.html#matches",
    "href": "players/afl/underage_profiles/CD_I1020036.html#matches",
    "title": "Luca Slade",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020097.html",
    "href": "players/afl/underage_profiles/CD_I1020097.html",
    "title": "Ashton Moir",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020097.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1020097.html#player-details",
    "title": "Ashton Moir",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-15\n\n\nState:\nSA\n\n\nState League Club:\nGlenelg\n\n\nCommunity Club:\nPlympton\n\n\nHeight:\n188cm\n\n\nWeight:\n84kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\n29\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020097.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1020097.html#seasons",
    "title": "Ashton Moir",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1020097.html#matches",
    "href": "players/afl/underage_profiles/CD_I1020097.html#matches",
    "title": "Ashton Moir",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022383.html",
    "href": "players/afl/underage_profiles/CD_I1022383.html",
    "title": "Liam Fawcett",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022383.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1022383.html#player-details",
    "title": "Liam Fawcett",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-22\n\n\nState:\nSA\n\n\nState League Club:\nCentral District\n\n\nCommunity Club:\nPooraka\n\n\nHeight:\n198cm\n\n\nWeight:\n87kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022383.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1022383.html#seasons",
    "title": "Liam Fawcett",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022383.html#matches",
    "href": "players/afl/underage_profiles/CD_I1022383.html#matches",
    "title": "Liam Fawcett",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022410.html",
    "href": "players/afl/underage_profiles/CD_I1022410.html",
    "title": "William McCabe",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022410.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1022410.html#player-details",
    "title": "William McCabe",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-29\n\n\nState:\nSA\n\n\nState League Club:\nCentral District\n\n\nCommunity Club:\nTanunda\n\n\nHeight:\n197cm\n\n\nWeight:\n82kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n19\n\n\nPhantom Draft Ranking (Sporting News):\n17\n\n\nPhantom Draft Ranking (Fox Sports):\n17\n\n\nPhantom Draft Ranking (Abc):\n17"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022410.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1022410.html#seasons",
    "title": "William McCabe",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022410.html#matches",
    "href": "players/afl/underage_profiles/CD_I1022410.html#matches",
    "title": "William McCabe",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022458.html",
    "href": "players/afl/underage_profiles/CD_I1022458.html",
    "title": "Harrison Francis",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022458.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1022458.html#player-details",
    "title": "Harrison Francis",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-19\n\n\nState:\nSA\n\n\nState League Club:\nGlenelg\n\n\nCommunity Club:\nPhantoms\n\n\nHeight:\n196cm\n\n\nWeight:\n80kg\n\n\nUrls:\n\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022458.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1022458.html#seasons",
    "title": "Harrison Francis",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022458.html#matches",
    "href": "players/afl/underage_profiles/CD_I1022458.html#matches",
    "title": "Harrison Francis",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022473.html",
    "href": "players/afl/underage_profiles/CD_I1022473.html",
    "title": "Bodie Ryan",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022473.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1022473.html#player-details",
    "title": "Bodie Ryan",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-20\n\n\nState:\nSA\n\n\nState League Club:\nGlenelg\n\n\nCommunity Club:\nBrighton\n\n\nHeight:\n188cm\n\n\nWeight:\n82kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022473.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1022473.html#seasons",
    "title": "Bodie Ryan",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022473.html#matches",
    "href": "players/afl/underage_profiles/CD_I1022473.html#matches",
    "title": "Bodie Ryan",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022495.html",
    "href": "players/afl/underage_profiles/CD_I1022495.html",
    "title": "Orlando Turner",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022495.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1022495.html#player-details",
    "title": "Orlando Turner",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-16\n\n\nState:\nNT/SA\n\n\nState League Club:\nNT Academy/Norwood\n\n\nCommunity Club:\nSouth Alice Springs\n\n\nHeight:\n176cm\n\n\nWeight:\n67kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022495.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1022495.html#seasons",
    "title": "Orlando Turner",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022495.html#matches",
    "href": "players/afl/underage_profiles/CD_I1022495.html#matches",
    "title": "Orlando Turner",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022531.html",
    "href": "players/afl/underage_profiles/CD_I1022531.html",
    "title": "Jed Dignan",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022531.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1022531.html#player-details",
    "title": "Jed Dignan",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-02-03\n\n\nState:\nSA\n\n\nState League Club:\nNorth Adelaide\n\n\nCommunity Club:\nOrroroo\n\n\nHeight:\n188cm\n\n\nWeight:\n77kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022531.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1022531.html#seasons",
    "title": "Jed Dignan",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022531.html#matches",
    "href": "players/afl/underage_profiles/CD_I1022531.html#matches",
    "title": "Jed Dignan",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022590.html",
    "href": "players/afl/underage_profiles/CD_I1022590.html",
    "title": "William Patton",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022590.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1022590.html#player-details",
    "title": "William Patton",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-01-04\n\n\nState:\nSA\n\n\nState League Club:\nWest Adelaide\n\n\nCommunity Club:\nMitcham\n\n\nHeight:\n193-194cm\n\n\nWeight:\n74-81kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022590.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1022590.html#seasons",
    "title": "William Patton",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1022590.html#matches",
    "href": "players/afl/underage_profiles/CD_I1022590.html#matches",
    "title": "William Patton",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023160.html",
    "href": "players/afl/underage_profiles/CD_I1023160.html",
    "title": "Riley Wills",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023160.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1023160.html#player-details",
    "title": "Riley Wills",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2004-07-08\n\n\nState:\nWA\n\n\nState League Club:\nSubiaco\n\n\nCommunity Club:\nCarine\n\n\nHeight:\n178cm\n\n\nWeight:\n70kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023160.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1023160.html#seasons",
    "title": "Riley Wills",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023160.html#matches",
    "href": "players/afl/underage_profiles/CD_I1023160.html#matches",
    "title": "Riley Wills",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023208.html",
    "href": "players/afl/underage_profiles/CD_I1023208.html",
    "title": "Oscar Hine-Baston",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023208.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1023208.html#player-details",
    "title": "Oscar Hine-Baston",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2004-10-18\n\n\nState:\nWA\n\n\nState League Club:\nPerth\n\n\nCommunity Club:\nManning Rippers\n\n\nHeight:\n176-177cm\n\n\nWeight:\n73kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023208.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1023208.html#seasons",
    "title": "Oscar Hine-Baston",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023208.html#matches",
    "href": "players/afl/underage_profiles/CD_I1023208.html#matches",
    "title": "Oscar Hine-Baston",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023343.html",
    "href": "players/afl/underage_profiles/CD_I1023343.html",
    "title": "Bailey Van De Heuvel",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023343.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1023343.html#player-details",
    "title": "Bailey Van De Heuvel",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n1998-07-31\n\n\nState:\nVIC\n\n\nState League Club:\nGeelong Cats (VFL)\n\n\nCommunity Club:\nBallarat\n\n\nHeight:\n200cm\n\n\nWeight:\n98kg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023343.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1023343.html#seasons",
    "title": "Bailey Van De Heuvel",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023343.html#matches",
    "href": "players/afl/underage_profiles/CD_I1023343.html#matches",
    "title": "Bailey Van De Heuvel",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023473.html",
    "href": "players/afl/underage_profiles/CD_I1023473.html",
    "title": "Nick Watson",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023473.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1023473.html#player-details",
    "title": "Nick Watson",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-02-24\n\n\nState:\nVIC M\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nEast Ringwood\n\n\nHeight:\n168-170cm\n\n\nWeight:\n66-67kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n5\n\n\nPhantom Draft Ranking (Sporting News):\n7\n\n\nPhantom Draft Ranking (Fox Sports):\n7\n\n\nPhantom Draft Ranking (Abc):\n9"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023473.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1023473.html#seasons",
    "title": "Nick Watson",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023473.html#matches",
    "href": "players/afl/underage_profiles/CD_I1023473.html#matches",
    "title": "Nick Watson",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023492.html",
    "href": "players/afl/underage_profiles/CD_I1023492.html",
    "title": "Harley Reid",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023492.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1023492.html#player-details",
    "title": "Harley Reid",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-17\n\n\nState:\nVIC C\n\n\nState League Club:\nBendigo Pioneers\n\n\nCommunity Club:\nTongala\n\n\nHeight:\n182-185cm\n\n\nWeight:\n75-78kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n1\n\n\nPhantom Draft Ranking (Sporting News):\n1\n\n\nPhantom Draft Ranking (Fox Sports):\n1\n\n\nPhantom Draft Ranking (Abc):\n1"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023492.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1023492.html#seasons",
    "title": "Harley Reid",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023492.html#matches",
    "href": "players/afl/underage_profiles/CD_I1023492.html#matches",
    "title": "Harley Reid",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023494.html",
    "href": "players/afl/underage_profiles/CD_I1023494.html",
    "title": "Zane Duursma",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023494.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1023494.html#player-details",
    "title": "Zane Duursma",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-28\n\n\nState:\nVIC C\n\n\nState League Club:\nGippsland Power\n\n\nCommunity Club:\nFoster\n\n\nHeight:\n185-189cm\n\n\nWeight:\n73kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n3\n\n\nPhantom Draft Ranking (Sporting News):\n3\n\n\nPhantom Draft Ranking (Fox Sports):\n4\n\n\nPhantom Draft Ranking (Abc):\n5"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023494.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1023494.html#seasons",
    "title": "Zane Duursma",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023494.html#matches",
    "href": "players/afl/underage_profiles/CD_I1023494.html#matches",
    "title": "Zane Duursma",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023515.html",
    "href": "players/afl/underage_profiles/CD_I1023515.html",
    "title": "Archie Roberts",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023515.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1023515.html#player-details",
    "title": "Archie Roberts",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-18\n\n\nState:\nVIC M\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nHampton Rovers\n\n\nHeight:\n182cm\n\n\nWeight:\n71-77kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n23\n\n\nPhantom Draft Ranking (Sporting News):\n22\n\n\nPhantom Draft Ranking (Fox Sports):\n25\n\n\nPhantom Draft Ranking (Abc):\n27"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023515.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1023515.html#seasons",
    "title": "Archie Roberts",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023515.html#matches",
    "href": "players/afl/underage_profiles/CD_I1023515.html#matches",
    "title": "Archie Roberts",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023625.html",
    "href": "players/afl/underage_profiles/CD_I1023625.html",
    "title": "Riley Hardeman",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023625.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1023625.html#player-details",
    "title": "Riley Hardeman",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-02-27\n\n\nState:\nWA\n\n\nState League Club:\nSwan Districts\n\n\nCommunity Club:\nCaversham\n\n\nHeight:\n184-185cm\n\n\nWeight:\n65-73kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n17\n\n\nPhantom Draft Ranking (Sporting News):\n19\n\n\nPhantom Draft Ranking (Fox Sports):\n21\n\n\nPhantom Draft Ranking (Abc):\n25"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023625.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1023625.html#seasons",
    "title": "Riley Hardeman",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023625.html#matches",
    "href": "players/afl/underage_profiles/CD_I1023625.html#matches",
    "title": "Riley Hardeman",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023640.html",
    "href": "players/afl/underage_profiles/CD_I1023640.html",
    "title": "Koltyn Tholstrup",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023640.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1023640.html#player-details",
    "title": "Koltyn Tholstrup",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-28\n\n\nState:\nWA\n\n\nState League Club:\nSubiaco\n\n\nCommunity Club:\nNewtown Condingup\n\n\nHeight:\n184-188cm\n\n\nWeight:\n80-86kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n16\n\n\nPhantom Draft Ranking (Sporting News):\n18\n\n\nPhantom Draft Ranking (Fox Sports):\n19\n\n\nPhantom Draft Ranking (Abc):\n20"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023640.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1023640.html#seasons",
    "title": "Koltyn Tholstrup",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023640.html#matches",
    "href": "players/afl/underage_profiles/CD_I1023640.html#matches",
    "title": "Koltyn Tholstrup",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023681.html",
    "href": "players/afl/underage_profiles/CD_I1023681.html",
    "title": "George Stevens",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023681.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1023681.html#player-details",
    "title": "George Stevens",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-14\n\n\nState:\nVIC C\n\n\nState League Club:\nGWV Rebels\n\n\nCommunity Club:\nSouth Warrnambool\n\n\nHeight:\n189-190cm\n\n\nWeight:\n90kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n30\n\n\nPhantom Draft Ranking (Sporting News):\n28\n\n\nPhantom Draft Ranking (Fox Sports):\n27\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023681.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1023681.html#seasons",
    "title": "George Stevens",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023681.html#matches",
    "href": "players/afl/underage_profiles/CD_I1023681.html#matches",
    "title": "George Stevens",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023736.html",
    "href": "players/afl/underage_profiles/CD_I1023736.html",
    "title": "Jed Walter",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023736.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1023736.html#player-details",
    "title": "Jed Walter",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-08\n\n\nState:\nQLD\n\n\nState League Club:\nGold Coast Suns Academy\n\n\nCommunity Club:\nPalm Beach Currumbin\n\n\nHeight:\n181-195cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n2\n\n\nPhantom Draft Ranking (Sporting News):\n2\n\n\nPhantom Draft Ranking (Fox Sports):\n2\n\n\nPhantom Draft Ranking (Abc):\n2"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023736.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1023736.html#seasons",
    "title": "Jed Walter",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1023736.html#matches",
    "href": "players/afl/underage_profiles/CD_I1023736.html#matches",
    "title": "Jed Walter",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024022.html",
    "href": "players/afl/underage_profiles/CD_I1024022.html",
    "title": "Koen Sanchez",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024022.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024022.html#player-details",
    "title": "Koen Sanchez",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-01-19\n\n\nState:\nWA\n\n\nState League Club:\nEast Fremantle\n\n\nCommunity Club:\nApplecross Mt Pleasant\n\n\nHeight:\n176cm\n\n\nWeight:\n65-70kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\n23\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024022.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024022.html#seasons",
    "title": "Koen Sanchez",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024022.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024022.html#matches",
    "title": "Koen Sanchez",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024023.html",
    "href": "players/afl/underage_profiles/CD_I1024023.html",
    "title": "Daniel Curtin",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024023.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024023.html#player-details",
    "title": "Daniel Curtin",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-03-08\n\n\nState:\nWA\n\n\nState League Club:\nClaremont\n\n\nCommunity Club:\nWest Coast\n\n\nHeight:\n195cm\n\n\nWeight:\n91-94kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n6\n\n\nPhantom Draft Ranking (Sporting News):\n4\n\n\nPhantom Draft Ranking (Fox Sports):\n5\n\n\nPhantom Draft Ranking (Abc):\n7"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024023.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024023.html#seasons",
    "title": "Daniel Curtin",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024023.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024023.html#matches",
    "title": "Daniel Curtin",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024055.html",
    "href": "players/afl/underage_profiles/CD_I1024055.html",
    "title": "Lachlan Cabor",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024055.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024055.html#player-details",
    "title": "Lachlan Cabor",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-28\n\n\nState:\nNSW/ACT\n\n\nState League Club:\nSydney Swans Academy\n\n\nCommunity Club:\nShellharbour\n\n\nHeight:\n181cm\n\n\nWeight:\n75-82kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024055.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024055.html#seasons",
    "title": "Lachlan Cabor",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024055.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024055.html#matches",
    "title": "Lachlan Cabor",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024057.html",
    "href": "players/afl/underage_profiles/CD_I1024057.html",
    "title": "Caiden Cleary",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024057.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024057.html#player-details",
    "title": "Caiden Cleary",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-03-05\n\n\nState:\nNSW/ACT\n\n\nState League Club:\nSydney Swans Academy\n\n\nCommunity Club:\nSydney University\n\n\nHeight:\n180-182cm\n\n\nWeight:\n77-81kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\n19"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024057.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024057.html#seasons",
    "title": "Caiden Cleary",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024057.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024057.html#matches",
    "title": "Caiden Cleary",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024064.html",
    "href": "players/afl/underage_profiles/CD_I1024064.html",
    "title": "Aiden O‚ÄôDriscoll",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024064.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024064.html#player-details",
    "title": "Aiden O‚ÄôDriscoll",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-22\n\n\nState:\nWA\n\n\nState League Club:\nPerth\n\n\nCommunity Club:\nNortham Saints\n\n\nHeight:\n172-175cm\n\n\nWeight:\n60-69kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\nWAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024064.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024064.html#seasons",
    "title": "Aiden O‚ÄôDriscoll",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024064.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024064.html#matches",
    "title": "Aiden O‚ÄôDriscoll",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024093.html",
    "href": "players/afl/underage_profiles/CD_I1024093.html",
    "title": "Nathan Philactides",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024093.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024093.html#player-details",
    "title": "Nathan Philactides",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-01-10\n\n\nState:\nVIC M\n\n\nState League Club:\nOakleigh Chargers\n\n\nCommunity Club:\nBlackburn\n\n\nHeight:\n181cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024093.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024093.html#seasons",
    "title": "Nathan Philactides",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024093.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024093.html#matches",
    "title": "Nathan Philactides",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024187.html",
    "href": "players/afl/underage_profiles/CD_I1024187.html",
    "title": "Reece Torrent",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024187.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024187.html#player-details",
    "title": "Reece Torrent",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-03\n\n\nState:\nWA\n\n\nState League Club:\nPeel Thunder\n\n\nCommunity Club:\nHalls Head\n\n\nHeight:\n182-183cm\n\n\nWeight:\n75-83kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024187.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024187.html#seasons",
    "title": "Reece Torrent",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024187.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024187.html#matches",
    "title": "Reece Torrent",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024188.html",
    "href": "players/afl/underage_profiles/CD_I1024188.html",
    "title": "Clay Hall",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024188.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024188.html#player-details",
    "title": "Clay Hall",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-12\n\n\nState:\nWA\n\n\nState League Club:\nPeel Thunder\n\n\nCommunity Club:\nHarvey Brunswick Leschenault\n\n\nHeight:\n188-189cm\n\n\nWeight:\n78-84kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024188.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024188.html#seasons",
    "title": "Clay Hall",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024188.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024188.html#matches",
    "title": "Clay Hall",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024271.html",
    "href": "players/afl/underage_profiles/CD_I1024271.html",
    "title": "Jack Callinan",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024271.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024271.html#player-details",
    "title": "Jack Callinan",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-10-07\n\n\nState:\nTAS\n\n\nState League Club:\nTasmania Devils\n\n\nCommunity Club:\nClarence\n\n\nHeight:\n177-179cm\n\n\nWeight:\n73-78kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024271.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024271.html#seasons",
    "title": "Jack Callinan",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024271.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024271.html#matches",
    "title": "Jack Callinan",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024272.html",
    "href": "players/afl/underage_profiles/CD_I1024272.html",
    "title": "Colby McKercher",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024272.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024272.html#player-details",
    "title": "Colby McKercher",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-12\n\n\nState:\nTAS\n\n\nState League Club:\nTasmania Devils\n\n\nCommunity Club:\nLaunceston\n\n\nHeight:\n181-182cm\n\n\nWeight:\n72-76kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n4\n\n\nPhantom Draft Ranking (Sporting News):\n5\n\n\nPhantom Draft Ranking (Fox Sports):\n3\n\n\nPhantom Draft Ranking (Abc):\n3"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024272.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024272.html#seasons",
    "title": "Colby McKercher",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024272.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024272.html#matches",
    "title": "Colby McKercher",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024275.html",
    "href": "players/afl/underage_profiles/CD_I1024275.html",
    "title": "Heath Ollington",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024275.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024275.html#player-details",
    "title": "Heath Ollington",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2004-12-10\n\n\nState:\nTAS\n\n\nState League Club:\nTasmania Devils\n\n\nCommunity Club:\nNorth Launceston\n\n\nHeight:\n189-190cm\n\n\nWeight:\n78-84kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024275.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024275.html#seasons",
    "title": "Heath Ollington",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024275.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024275.html#matches",
    "title": "Heath Ollington",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024279.html",
    "href": "players/afl/underage_profiles/CD_I1024279.html",
    "title": "Arie Schoenmaker",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024279.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024279.html#player-details",
    "title": "Arie Schoenmaker",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-01-07\n\n\nState:\nTAS\n\n\nState League Club:\nTasmania Devils\n\n\nCommunity Club:\nLaunceston\n\n\nHeight:\n193-194cm\n\n\nWeight:\n89kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\n26\n\n\nPhantom Draft Ranking (Fox Sports):\n20\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024279.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024279.html#seasons",
    "title": "Arie Schoenmaker",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024279.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024279.html#matches",
    "title": "Arie Schoenmaker",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024304.html",
    "href": "players/afl/underage_profiles/CD_I1024304.html",
    "title": "Mitchell Edwards",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024304.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024304.html#player-details",
    "title": "Mitchell Edwards",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-02\n\n\nState:\nWA\n\n\nState League Club:\nPeel Thunder\n\n\nCommunity Club:\nSouth Mandurah\n\n\nHeight:\n203-205cm\n\n\nWeight:\n76-88kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n26\n\n\nPhantom Draft Ranking (Sporting News):\n30\n\n\nPhantom Draft Ranking (Fox Sports):\n29\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024304.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024304.html#seasons",
    "title": "Mitchell Edwards",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024304.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024304.html#matches",
    "title": "Mitchell Edwards",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024337.html",
    "href": "players/afl/underage_profiles/CD_I1024337.html",
    "title": "Luker Kentfield",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024337.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024337.html#player-details",
    "title": "Luker Kentfield",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-10\n\n\nState:\nWA\n\n\nState League Club:\nSubiaco\n\n\nCommunity Club:\nCarine\n\n\nHeight:\n193-194cm\n\n\nWeight:\n92-93kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024337.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024337.html#seasons",
    "title": "Luker Kentfield",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024337.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024337.html#matches",
    "title": "Luker Kentfield",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024685.html",
    "href": "players/afl/underage_profiles/CD_I1024685.html",
    "title": "Patrick Snell",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024685.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1024685.html#player-details",
    "title": "Patrick Snell",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-18\n\n\nState:\nNT/QLD\n\n\nState League Club:\nBrisbane Lions Academy\n\n\nCommunity Club:\nSouthern Districts/Wilston Grange\n\n\nHeight:\n194cm\n\n\nWeight:\n88kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024685.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1024685.html#seasons",
    "title": "Patrick Snell",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1024685.html#matches",
    "href": "players/afl/underage_profiles/CD_I1024685.html#matches",
    "title": "Patrick Snell",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1026960.html",
    "href": "players/afl/underage_profiles/CD_I1026960.html",
    "title": "William Graham",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1026960.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1026960.html#player-details",
    "title": "William Graham",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-27\n\n\nState:\nQLD\n\n\nState League Club:\nGold Coast Suns Academy\n\n\nCommunity Club:\nPalm Beach Currumbin\n\n\nHeight:\n186cm\n\n\nWeight:\n77-81kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1026960.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1026960.html#seasons",
    "title": "William Graham",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1026960.html#matches",
    "href": "players/afl/underage_profiles/CD_I1026960.html#matches",
    "title": "William Graham",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1026962.html",
    "href": "players/afl/underage_profiles/CD_I1026962.html",
    "title": "Nick Williams",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1026962.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1026962.html#player-details",
    "title": "Nick Williams",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2004-05-02\n\n\nState:\nQLD\n\n\nState League Club:\nGold Coast Suns Academy\n\n\nCommunity Club:\nSurfers Paradise\n\n\nHeight:\n191cm\n\n\nWeight:\n82-83kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1026962.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1026962.html#seasons",
    "title": "Nick Williams",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1026962.html#matches",
    "href": "players/afl/underage_profiles/CD_I1026962.html#matches",
    "title": "Nick Williams",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027033.html",
    "href": "players/afl/underage_profiles/CD_I1027033.html",
    "title": "Ethan Read",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027033.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027033.html#player-details",
    "title": "Ethan Read",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-07\n\n\nState:\nQLD\n\n\nState League Club:\nGold Coast Suns Academy\n\n\nCommunity Club:\nPalm Beach Currumbin\n\n\nHeight:\n200cm\n\n\nWeight:\n82-88kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n9\n\n\nPhantom Draft Ranking (Sporting News):\n8\n\n\nPhantom Draft Ranking (Fox Sports):\n6\n\n\nPhantom Draft Ranking (Abc):\n4"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027033.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027033.html#seasons",
    "title": "Ethan Read",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027033.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027033.html#matches",
    "title": "Ethan Read",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027063.html",
    "href": "players/afl/underage_profiles/CD_I1027063.html",
    "title": "Caleb May",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027063.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027063.html#player-details",
    "title": "Caleb May",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-13\n\n\nState:\nNSW/ACT\n\n\nState League Club:\nSydney Swans Academy\n\n\nCommunity Club:\nSouth West Sydney Blues\n\n\nHeight:\n204-206cm\n\n\nWeight:\n95-104kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027063.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027063.html#seasons",
    "title": "Caleb May",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027063.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027063.html#matches",
    "title": "Caleb May",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027644.html",
    "href": "players/afl/underage_profiles/CD_I1027644.html",
    "title": "Oskar Smartt",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027644.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027644.html#player-details",
    "title": "Oskar Smartt",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-10-26\n\n\nState:\nVIC C\n\n\nState League Club:\nBendigo Pioneers\n\n\nCommunity Club:\nLeitchville Gunbower\n\n\nHeight:\n179cm\n\n\nWeight:\n80kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027644.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027644.html#seasons",
    "title": "Oskar Smartt",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027644.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027644.html#matches",
    "title": "Oskar Smartt",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027651.html",
    "href": "players/afl/underage_profiles/CD_I1027651.html",
    "title": "Oliver Poole",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027651.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027651.html#player-details",
    "title": "Oliver Poole",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-03-18\n\n\nState:\nVIC C\n\n\nState League Club:\nBendigo Pioneers\n\n\nCommunity Club:\nEchuca United\n\n\nHeight:\n182-183cm\n\n\nWeight:\n67kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027651.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027651.html#seasons",
    "title": "Oliver Poole",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027651.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027651.html#matches",
    "title": "Oliver Poole",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027656.html",
    "href": "players/afl/underage_profiles/CD_I1027656.html",
    "title": "Cooper Simpson",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027656.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027656.html#player-details",
    "title": "Cooper Simpson",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-02-13\n\n\nState:\nVIC C\n\n\nState League Club:\nDandenong Stingrays\n\n\nCommunity Club:\nMt Martha\n\n\nHeight:\n181-182cm\n\n\nWeight:\n74kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027656.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027656.html#seasons",
    "title": "Cooper Simpson",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027656.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027656.html#matches",
    "title": "Cooper Simpson",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027669.html",
    "href": "players/afl/underage_profiles/CD_I1027669.html",
    "title": "Kade De La Rue",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027669.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027669.html#player-details",
    "title": "Kade De La Rue",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-19\n\n\nState:\nVIC C\n\n\nState League Club:\nDandenong Stingrays\n\n\nCommunity Club:\nBeaconsfield\n\n\nHeight:\n181-184cm\n\n\nWeight:\n75kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027669.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027669.html#seasons",
    "title": "Kade De La Rue",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027669.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027669.html#matches",
    "title": "Kade De La Rue",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027673.html",
    "href": "players/afl/underage_profiles/CD_I1027673.html",
    "title": "Harry DeMattia",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027673.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027673.html#player-details",
    "title": "Harry DeMattia",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-11\n\n\nState:\nVIC C\n\n\nState League Club:\nDandenong Stingrays\n\n\nCommunity Club:\nEdithvale-Aspendale\n\n\nHeight:\n184-188cm\n\n\nWeight:\n77kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n20\n\n\nPhantom Draft Ranking (Sporting News):\n21\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\n29"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027673.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027673.html#seasons",
    "title": "Harry DeMattia",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027673.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027673.html#matches",
    "title": "Harry DeMattia",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027674.html",
    "href": "players/afl/underage_profiles/CD_I1027674.html",
    "title": "Kobe Shipp",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027674.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027674.html#player-details",
    "title": "Kobe Shipp",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-12\n\n\nState:\nVIC C\n\n\nState League Club:\nDandenong Stingrays\n\n\nCommunity Club:\nBeaconsfield\n\n\nHeight:\n186-187cm\n\n\nWeight:\n79kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027674.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027674.html#seasons",
    "title": "Kobe Shipp",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027674.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027674.html#matches",
    "title": "Kobe Shipp",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027678.html",
    "href": "players/afl/underage_profiles/CD_I1027678.html",
    "title": "Billy Wilson",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027678.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027678.html#player-details",
    "title": "Billy Wilson",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-16\n\n\nState:\nVIC C\n\n\nState League Club:\nDandenong Stingrays\n\n\nCommunity Club:\nDromana\n\n\nHeight:\n181-182cm\n\n\nWeight:\n66kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027678.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027678.html#seasons",
    "title": "Billy Wilson",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027678.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027678.html#matches",
    "title": "Billy Wilson",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027693.html",
    "href": "players/afl/underage_profiles/CD_I1027693.html",
    "title": "Archer Reid",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027693.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027693.html#player-details",
    "title": "Archer Reid",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-19\n\n\nState:\nVIC C\n\n\nState League Club:\nGippsland Power\n\n\nCommunity Club:\nInverloch-Kongwak\n\n\nHeight:\n201-203cm\n\n\nWeight:\n85kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n27\n\n\nPhantom Draft Ranking (Sporting News):\n27\n\n\nPhantom Draft Ranking (Fox Sports):\n22\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027693.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027693.html#seasons",
    "title": "Archer Reid",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027693.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027693.html#matches",
    "title": "Archer Reid",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027702.html",
    "href": "players/afl/underage_profiles/CD_I1027702.html",
    "title": "Lachlan Smith",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027702.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027702.html#player-details",
    "title": "Lachlan Smith",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-10-05\n\n\nState:\nVIC C\n\n\nState League Club:\nGippsland Power\n\n\nCommunity Club:\nWarragul\n\n\nHeight:\n201-202cm\n\n\nWeight:\n98kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027702.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027702.html#seasons",
    "title": "Lachlan Smith",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027702.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027702.html#matches",
    "title": "Lachlan Smith",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027704.html",
    "href": "players/afl/underage_profiles/CD_I1027704.html",
    "title": "Joel Freijah",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027704.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027704.html#player-details",
    "title": "Joel Freijah",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-14\n\n\nState:\nVIC C\n\n\nState League Club:\nGWV Rebels\n\n\nCommunity Club:\nHorsham Saints\n\n\nHeight:\n189-191cm\n\n\nWeight:\n80kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027704.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027704.html#seasons",
    "title": "Joel Freijah",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027704.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027704.html#matches",
    "title": "Joel Freijah",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027706.html",
    "href": "players/afl/underage_profiles/CD_I1027706.html",
    "title": "Luamon Lual",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027706.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027706.html#player-details",
    "title": "Luamon Lual",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-03-28\n\n\nState:\nVIC C\n\n\nState League Club:\nGWV Rebels\n\n\nCommunity Club:\nSouth Warrnambool\n\n\nHeight:\n181cm\n\n\nWeight:\n70kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027706.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027706.html#seasons",
    "title": "Luamon Lual",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027706.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027706.html#matches",
    "title": "Luamon Lual",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027712.html",
    "href": "players/afl/underage_profiles/CD_I1027712.html",
    "title": "Oscar Gawith",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027712.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027712.html#player-details",
    "title": "Oscar Gawith",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-23\n\n\nState:\nVIC C\n\n\nState League Club:\nGWV Rebels\n\n\nCommunity Club:\nMinyip Murtoa\n\n\nHeight:\n190-192cm\n\n\nWeight:\n94kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027712.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027712.html#seasons",
    "title": "Oscar Gawith",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027712.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027712.html#matches",
    "title": "Oscar Gawith",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027726.html",
    "href": "players/afl/underage_profiles/CD_I1027726.html",
    "title": "Geordie Payne",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027726.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027726.html#player-details",
    "title": "Geordie Payne",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-11-06\n\n\nState:\nTAS\n\n\nState League Club:\nTasmania Devils\n\n\nCommunity Club:\nWynyard\n\n\nHeight:\n183-184cm\n\n\nWeight:\n70kg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027726.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027726.html#seasons",
    "title": "Geordie Payne",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027726.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027726.html#matches",
    "title": "Geordie Payne",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027790.html",
    "href": "players/afl/underage_profiles/CD_I1027790.html",
    "title": "Hugo Garcia",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027790.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027790.html#player-details",
    "title": "Hugo Garcia",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-05-22\n\n\nState:\nVIC M\n\n\nState League Club:\nCalder Cannons\n\n\nCommunity Club:\nGreenvale\n\n\nHeight:\n180-183cm\n\n\nWeight:\n69kg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027790.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027790.html#seasons",
    "title": "Hugo Garcia",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027790.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027790.html#matches",
    "title": "Hugo Garcia",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027804.html",
    "href": "players/afl/underage_profiles/CD_I1027804.html",
    "title": "Mahmoud Taha",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027804.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027804.html#player-details",
    "title": "Mahmoud Taha",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-04\n\n\nState:\nVIC M\n\n\nState League Club:\nCalder Cannons\n\n\nCommunity Club:\nPascoe Vale\n\n\nHeight:\n182cm\n\n\nWeight:\n71-75kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027804.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027804.html#seasons",
    "title": "Mahmoud Taha",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027804.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027804.html#matches",
    "title": "Mahmoud Taha",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027814.html",
    "href": "players/afl/underage_profiles/CD_I1027814.html",
    "title": "Cameron Nyko",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027814.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027814.html#player-details",
    "title": "Cameron Nyko",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-25\n\n\nState:\nVIC M\n\n\nState League Club:\nEastern¬†Ranges\n\n\nCommunity Club:\nHealesville\n\n\nHeight:\n178-180cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027814.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027814.html#seasons",
    "title": "Cameron Nyko",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027814.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027814.html#matches",
    "title": "Cameron Nyko",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027821.html",
    "href": "players/afl/underage_profiles/CD_I1027821.html",
    "title": "Caleb Windsor",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027821.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027821.html#player-details",
    "title": "Caleb Windsor",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-09\n\n\nState:\nVIC M\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nLysterfield\n\n\nHeight:\n184cm\n\n\nWeight:\n74kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n11\n\n\nPhantom Draft Ranking (Sporting News):\n15\n\n\nPhantom Draft Ranking (Fox Sports):\n16\n\n\nPhantom Draft Ranking (Abc):\n13"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027821.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027821.html#seasons",
    "title": "Caleb Windsor",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027821.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027821.html#matches",
    "title": "Caleb Windsor",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027826.html",
    "href": "players/afl/underage_profiles/CD_I1027826.html",
    "title": "Riley Weatherill",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027826.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027826.html#player-details",
    "title": "Riley Weatherill",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-21\n\n\nState:\nVIC M\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nEast Ringwood\n\n\nHeight:\n195cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027826.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027826.html#seasons",
    "title": "Riley Weatherill",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027826.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027826.html#matches",
    "title": "Riley Weatherill",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027830.html",
    "href": "players/afl/underage_profiles/CD_I1027830.html",
    "title": "Brayden Laplanche",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027830.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027830.html#player-details",
    "title": "Brayden Laplanche",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-30\n\n\nState:\nVIC M\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nRowville Hawks\n\n\nHeight:\n188-189cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027830.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027830.html#seasons",
    "title": "Brayden Laplanche",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027830.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027830.html#matches",
    "title": "Brayden Laplanche",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027840.html",
    "href": "players/afl/underage_profiles/CD_I1027840.html",
    "title": "Michael Rudd",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027840.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027840.html#player-details",
    "title": "Michael Rudd",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-14\n\n\nState:\nVIC C\n\n\nState League Club:\nGeelong Falcons\n\n\nCommunity Club:\nSt Marys\n\n\nHeight:\n189-192cm\n\n\nWeight:\n79kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027840.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027840.html#seasons",
    "title": "Michael Rudd",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027840.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027840.html#matches",
    "title": "Michael Rudd",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027854.html",
    "href": "players/afl/underage_profiles/CD_I1027854.html",
    "title": "Joe Pike",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027854.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027854.html#player-details",
    "title": "Joe Pike",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-17\n\n\nState:\nVIC C\n\n\nState League Club:\nGeelong Falcons\n\n\nCommunity Club:\nBarwon Heads\n\n\nHeight:\n201-203cm\n\n\nWeight:\n94kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027854.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027854.html#seasons",
    "title": "Joe Pike",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027854.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027854.html#matches",
    "title": "Joe Pike",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027870.html",
    "href": "players/afl/underage_profiles/CD_I1027870.html",
    "title": "Thomas Anastasopoulos",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027870.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027870.html#player-details",
    "title": "Thomas Anastasopoulos",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-31\n\n\nState:\nVIC C\n\n\nState League Club:\nGeelong Falcons\n\n\nCommunity Club:\nNewtown & Chilwell\n\n\nHeight:\n173-176cm\n\n\nWeight:\n60kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027870.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027870.html#seasons",
    "title": "Thomas Anastasopoulos",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027870.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027870.html#matches",
    "title": "Thomas Anastasopoulos",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027872.html",
    "href": "players/afl/underage_profiles/CD_I1027872.html",
    "title": "Angus Hastie",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027872.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027872.html#player-details",
    "title": "Angus Hastie",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-19\n\n\nState:\nVIC C\n\n\nState League Club:\nGeelong Falcons\n\n\nCommunity Club:\nGeelong West Giants\n\n\nHeight:\n187-189cm\n\n\nWeight:\n69kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\n21"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027872.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027872.html#seasons",
    "title": "Angus Hastie",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027872.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027872.html#matches",
    "title": "Angus Hastie",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027875.html",
    "href": "players/afl/underage_profiles/CD_I1027875.html",
    "title": "Darcy Wilson",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027875.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027875.html#player-details",
    "title": "Darcy Wilson",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-18\n\n\nState:\nVIC C\n\n\nState League Club:\nMurray Bushrangers\n\n\nCommunity Club:\nWangaratta Rovers\n\n\nHeight:\n184-185cm\n\n\nWeight:\n66kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n15\n\n\nPhantom Draft Ranking (Sporting News):\n12\n\n\nPhantom Draft Ranking (Fox Sports):\n12\n\n\nPhantom Draft Ranking (Abc):\n15"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027875.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027875.html#seasons",
    "title": "Darcy Wilson",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027875.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027875.html#matches",
    "title": "Darcy Wilson",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027877.html",
    "href": "players/afl/underage_profiles/CD_I1027877.html",
    "title": "Connor O‚ÄôSullivan",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027877.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027877.html#player-details",
    "title": "Connor O‚ÄôSullivan",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-19\n\n\nState:\nNSW/ACT\n\n\nState League Club:\nMurray Bushrangers\n\n\nCommunity Club:\nAlbury\n\n\nHeight:\n195-198cm\n\n\nWeight:\n85-92kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n10\n\n\nPhantom Draft Ranking (Sporting News):\n10\n\n\nPhantom Draft Ranking (Fox Sports):\n9\n\n\nPhantom Draft Ranking (Abc):\n8"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027877.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027877.html#seasons",
    "title": "Connor O‚ÄôSullivan",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027877.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027877.html#matches",
    "title": "Connor O‚ÄôSullivan",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027884.html",
    "href": "players/afl/underage_profiles/CD_I1027884.html",
    "title": "Boston Dowling",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027884.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027884.html#player-details",
    "title": "Boston Dowling",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-04-08\n\n\nState:\nVIC C\n\n\nState League Club:\nOakleigh Chargers\n\n\nCommunity Club:\nOld Trinity Grammarians\n\n\nHeight:\n200-203cm\n\n\nWeight:\n87kg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027884.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027884.html#seasons",
    "title": "Boston Dowling",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027884.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027884.html#matches",
    "title": "Boston Dowling",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027893.html",
    "href": "players/afl/underage_profiles/CD_I1027893.html",
    "title": "Oscar Ryan",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027893.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027893.html#player-details",
    "title": "Oscar Ryan",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-15\n\n\nState:\nVIC C\n\n\nState League Club:\nMurray Bushrangers\n\n\nCommunity Club:\nShepparton United\n\n\nHeight:\n184-187cm\n\n\nWeight:\n75kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027893.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027893.html#seasons",
    "title": "Oscar Ryan",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027893.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027893.html#matches",
    "title": "Oscar Ryan",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027899.html",
    "href": "players/afl/underage_profiles/CD_I1027899.html",
    "title": "Nate Caddy",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027899.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027899.html#player-details",
    "title": "Nate Caddy",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-14\n\n\nState:\nVIC M\n\n\nState League Club:\nNorthern Knights\n\n\nCommunity Club:\nYarrambat\n\n\nHeight:\n191-192cm\n\n\nWeight:\n83-91kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n8\n\n\nPhantom Draft Ranking (Sporting News):\n9\n\n\nPhantom Draft Ranking (Fox Sports):\n10\n\n\nPhantom Draft Ranking (Abc):\n11"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027899.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027899.html#seasons",
    "title": "Nate Caddy",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027899.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027899.html#matches",
    "title": "Nate Caddy",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027901.html",
    "href": "players/afl/underage_profiles/CD_I1027901.html",
    "title": "William Green",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027901.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027901.html#player-details",
    "title": "William Green",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-08\n\n\nState:\nVIC M\n\n\nState League Club:\nNorthern Knights\n\n\nCommunity Club:\nNorthcote\n\n\nHeight:\n202-204cm\n\n\nWeight:\n83-89kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n25\n\n\nPhantom Draft Ranking (Sporting News):\n24\n\n\nPhantom Draft Ranking (Fox Sports):\n24\n\n\nPhantom Draft Ranking (Abc):\n26"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027901.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027901.html#seasons",
    "title": "William Green",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027901.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027901.html#matches",
    "title": "William Green",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027925.html",
    "href": "players/afl/underage_profiles/CD_I1027925.html",
    "title": "Harvey Thomas",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027925.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027925.html#player-details",
    "title": "Harvey Thomas",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-08\n\n\nState:\nNSW/ACT\n\n\nState League Club:\nGWS Giants Academy/Oakleigh Chargers\n\n\nCommunity Club:\nTurvey Park\n\n\nHeight:\n175-177cm\n\n\nWeight:\n60-68kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027925.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027925.html#seasons",
    "title": "Harvey Thomas",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027925.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027925.html#matches",
    "title": "Harvey Thomas",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027928.html",
    "href": "players/afl/underage_profiles/CD_I1027928.html",
    "title": "Oliver Badr",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027928.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027928.html#player-details",
    "title": "Oliver Badr",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-06-04\n\n\nState:\nVIC M\n\n\nState League Club:\nOakleigh Chargers\n\n\nCommunity Club:\nGlen Eira\n\n\nHeight:\n176-177cm\n\n\nWeight:\n71kg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027928.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027928.html#seasons",
    "title": "Oliver Badr",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027928.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027928.html#matches",
    "title": "Oliver Badr",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027949.html",
    "href": "players/afl/underage_profiles/CD_I1027949.html",
    "title": "Kynan Brown",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027949.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027949.html#player-details",
    "title": "Kynan Brown",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-01-13\n\n\nState:\nVIC M\n\n\nState League Club:\nOakleigh Chargers\n\n\nCommunity Club:\nOld Geelong\n\n\nHeight:\n180-181cm\n\n\nWeight:\n72-78kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027949.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027949.html#seasons",
    "title": "Kynan Brown",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027949.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027949.html#matches",
    "title": "Kynan Brown",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027953.html",
    "href": "players/afl/underage_profiles/CD_I1027953.html",
    "title": "Will Brown",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027953.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027953.html#player-details",
    "title": "Will Brown",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-16\n\n\nState:\nVIC M\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nEast Brighton Vampires\n\n\nHeight:\n192-194cm\n\n\nWeight:\n80-86kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027953.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027953.html#seasons",
    "title": "Will Brown",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027953.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027953.html#matches",
    "title": "Will Brown",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027964.html",
    "href": "players/afl/underage_profiles/CD_I1027964.html",
    "title": "Matthew Carroll",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027964.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027964.html#player-details",
    "title": "Matthew Carroll",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-28\n\n\nState:\nVIC M\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nEast Malvern\n\n\nHeight:\n187-190cm\n\n\nWeight:\n78kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027964.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027964.html#seasons",
    "title": "Matthew Carroll",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027964.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027964.html#matches",
    "title": "Matthew Carroll",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027966.html",
    "href": "players/afl/underage_profiles/CD_I1027966.html",
    "title": "Vigo Visentini",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027966.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027966.html#player-details",
    "title": "Vigo Visentini",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-05\n\n\nState:\nVIC M\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nBrighton Beach\n\n\nHeight:\n199-203cm\n\n\nWeight:\n78-97kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027966.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027966.html#seasons",
    "title": "Vigo Visentini",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027966.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027966.html#matches",
    "title": "Vigo Visentini",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027969.html",
    "href": "players/afl/underage_profiles/CD_I1027969.html",
    "title": "Harvey Johnston",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027969.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027969.html#player-details",
    "title": "Harvey Johnston",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-18\n\n\nState:\nVIC M\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nParkdale Vultures\n\n\nHeight:\n183-184cm\n\n\nWeight:\n76kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027969.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027969.html#seasons",
    "title": "Harvey Johnston",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027969.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027969.html#matches",
    "title": "Harvey Johnston",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027974.html",
    "href": "players/afl/underage_profiles/CD_I1027974.html",
    "title": "Charlton Harrop",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027974.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027974.html#player-details",
    "title": "Charlton Harrop",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-13\n\n\nState:\nVIC M\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nBeaumaris\n\n\nHeight:\n185-187cm\n\n\nWeight:\n76-79kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027974.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027974.html#seasons",
    "title": "Charlton Harrop",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027974.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027974.html#matches",
    "title": "Charlton Harrop",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027981.html",
    "href": "players/afl/underage_profiles/CD_I1027981.html",
    "title": "Tarkyn O‚ÄôLeary",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027981.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027981.html#player-details",
    "title": "Tarkyn O‚ÄôLeary",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-01\n\n\nState:\nVIC M\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nParkdale Vultures\n\n\nHeight:\n176-179cm\n\n\nWeight:\n64-70kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027981.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027981.html#seasons",
    "title": "Tarkyn O‚ÄôLeary",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027981.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027981.html#matches",
    "title": "Tarkyn O‚ÄôLeary",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027985.html",
    "href": "players/afl/underage_profiles/CD_I1027985.html",
    "title": "Luke Lloyd",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027985.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027985.html#player-details",
    "title": "Luke Lloyd",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-08-08\n\n\nState:\nVIC M\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nDe La Salle\n\n\nHeight:\n192-193cm\n\n\nWeight:\n78kg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027985.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027985.html#seasons",
    "title": "Luke Lloyd",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027985.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027985.html#matches",
    "title": "Luke Lloyd",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027990.html",
    "href": "players/afl/underage_profiles/CD_I1027990.html",
    "title": "Oliver Murphy",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027990.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1027990.html#player-details",
    "title": "Oliver Murphy",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-16\n\n\nState:\nVIC M\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nEast Brighton Vampires\n\n\nHeight:\n198-200cm\n\n\nWeight:\n81-85kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n24\n\n\nPhantom Draft Ranking (Sporting News):\n16\n\n\nPhantom Draft Ranking (Fox Sports):\n14\n\n\nPhantom Draft Ranking (Abc):\n14"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027990.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1027990.html#seasons",
    "title": "Oliver Murphy",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1027990.html#matches",
    "href": "players/afl/underage_profiles/CD_I1027990.html#matches",
    "title": "Oliver Murphy",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028019.html",
    "href": "players/afl/underage_profiles/CD_I1028019.html",
    "title": "Logan Morris",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028019.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1028019.html#player-details",
    "title": "Logan Morris",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-10\n\n\nState:\nVIC M\n\n\nState League Club:\nWestern Jets\n\n\nCommunity Club:\nWerribee Districts\n\n\nHeight:\n192cm\n\n\nWeight:\n88-90kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\n30\n\n\nPhantom Draft Ranking (Abc):\n28"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028019.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1028019.html#seasons",
    "title": "Logan Morris",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028019.html#matches",
    "href": "players/afl/underage_profiles/CD_I1028019.html#matches",
    "title": "Logan Morris",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028216.html",
    "href": "players/afl/underage_profiles/CD_I1028216.html",
    "title": "Sam van Rooyen",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028216.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1028216.html#player-details",
    "title": "Sam van Rooyen",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-02-24\n\n\nState:\nWA\n\n\nState League Club:\nClaremont\n\n\nCommunity Club:\nScarborough\n\n\nHeight:\n193cm\n\n\nWeight:\n80-83kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028216.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1028216.html#seasons",
    "title": "Sam van Rooyen",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028216.html#matches",
    "href": "players/afl/underage_profiles/CD_I1028216.html#matches",
    "title": "Sam van Rooyen",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028272.html",
    "href": "players/afl/underage_profiles/CD_I1028272.html",
    "title": "Jack Cocking",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028272.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1028272.html#player-details",
    "title": "Jack Cocking",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-01-27\n\n\nState:\nWA\n\n\nState League Club:\nEast Fremantle\n\n\nCommunity Club:\nRailway\n\n\nHeight:\n184-189cm\n\n\nWeight:\n70-78kg\n\n\nUrls:\n\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028272.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1028272.html#seasons",
    "title": "Jack Cocking",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028272.html#matches",
    "href": "players/afl/underage_profiles/CD_I1028272.html#matches",
    "title": "Jack Cocking",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028291.html",
    "href": "players/afl/underage_profiles/CD_I1028291.html",
    "title": "Coen Livingstone",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028291.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1028291.html#player-details",
    "title": "Coen Livingstone",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-25\n\n\nState:\nWA\n\n\nState League Club:\nPerth\n\n\nCommunity Club:\nYork\n\n\nHeight:\n199cm\n\n\nWeight:\n90-95kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028291.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1028291.html#seasons",
    "title": "Coen Livingstone",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028291.html#matches",
    "href": "players/afl/underage_profiles/CD_I1028291.html#matches",
    "title": "Coen Livingstone",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028371.html",
    "href": "players/afl/underage_profiles/CD_I1028371.html",
    "title": "Odin Jones",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028371.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1028371.html#player-details",
    "title": "Odin Jones",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-20\n\n\nState:\nWA\n\n\nState League Club:\nWest Perth\n\n\nCommunity Club:\nJoondalup Kinross\n\n\nHeight:\n197cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028371.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1028371.html#seasons",
    "title": "Odin Jones",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028371.html#matches",
    "href": "players/afl/underage_profiles/CD_I1028371.html#matches",
    "title": "Odin Jones",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028392.html",
    "href": "players/afl/underage_profiles/CD_I1028392.html",
    "title": "Evan Smith",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028392.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1028392.html#player-details",
    "title": "Evan Smith",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-11\n\n\nState:\nWA\n\n\nState League Club:\nSwan Districts\n\n\nCommunity Club:\nAveley\n\n\nHeight:\n194-199cm\n\n\nWeight:\n73-85kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028392.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1028392.html#seasons",
    "title": "Evan Smith",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028392.html#matches",
    "href": "players/afl/underage_profiles/CD_I1028392.html#matches",
    "title": "Evan Smith",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028551.html",
    "href": "players/afl/underage_profiles/CD_I1028551.html",
    "title": "Wil Dawson",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028551.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1028551.html#player-details",
    "title": "Wil Dawson",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-12-20\n\n\nState:\nVIC C\n\n\nState League Club:\nGippsland Power\n\n\nCommunity Club:\nLeongatha\n\n\nHeight:\n198-200cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028551.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1028551.html#seasons",
    "title": "Wil Dawson",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028551.html#matches",
    "href": "players/afl/underage_profiles/CD_I1028551.html#matches",
    "title": "Wil Dawson",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028671.html",
    "href": "players/afl/underage_profiles/CD_I1028671.html",
    "title": "Charlie Edwards",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028671.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1028671.html#player-details",
    "title": "Charlie Edwards",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-05-18\n\n\nState:\nVIC M\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nSandhurst\n\n\nHeight:\n188-190cm\n\n\nWeight:\n78kg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\n21\n\n\nPhantom Draft Ranking (Sporting News):\n23\n\n\nPhantom Draft Ranking (Fox Sports):\n26\n\n\nPhantom Draft Ranking (Abc):\n18"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028671.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1028671.html#seasons",
    "title": "Charlie Edwards",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1028671.html#matches",
    "href": "players/afl/underage_profiles/CD_I1028671.html#matches",
    "title": "Charlie Edwards",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029067.html",
    "href": "players/afl/underage_profiles/CD_I1029067.html",
    "title": "Charlie McCormack",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029067.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1029067.html#player-details",
    "title": "Charlie McCormack",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-02\n\n\nState:\nNSW/ACT\n\n\nState League Club:\nGWS Giants Academy\n\n\nCommunity Club:\nCoolamon\n\n\nHeight:\n198cm\n\n\nWeight:\n78kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029067.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1029067.html#seasons",
    "title": "Charlie McCormack",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029067.html#matches",
    "href": "players/afl/underage_profiles/CD_I1029067.html#matches",
    "title": "Charlie McCormack",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029158.html",
    "href": "players/afl/underage_profiles/CD_I1029158.html",
    "title": "Xavier Walsh",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029158.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1029158.html#player-details",
    "title": "Xavier Walsh",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-06\n\n\nState:\nWA\n\n\nState League Club:\nEast Perth\n\n\nCommunity Club:\nMt Lawley Inglewood\n\n\nHeight:\n195cm\n\n\nWeight:\n90kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029158.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1029158.html#seasons",
    "title": "Xavier Walsh",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029158.html#matches",
    "href": "players/afl/underage_profiles/CD_I1029158.html#matches",
    "title": "Xavier Walsh",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029262.html",
    "href": "players/afl/underage_profiles/CD_I1029262.html",
    "title": "William Lorenz",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029262.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1029262.html#player-details",
    "title": "William Lorenz",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-19\n\n\nState:\nVIC M\n\n\nState League Club:\nOakleigh Chargers\n\n\nCommunity Club:\nBoroondara Hawks\n\n\nHeight:\n186cm\n\n\nWeight:\n70-71kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029262.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1029262.html#seasons",
    "title": "William Lorenz",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029262.html#matches",
    "href": "players/afl/underage_profiles/CD_I1029262.html#matches",
    "title": "William Lorenz",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029435.html",
    "href": "players/afl/underage_profiles/CD_I1029435.html",
    "title": "Ben Hopkins",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029435.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1029435.html#player-details",
    "title": "Ben Hopkins",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-07-28\n\n\nState:\nVIC C\n\n\nState League Club:\nDandenong Stingrays\n\n\nCommunity Club:\nLangwarrin\n\n\nHeight:\n188cm\n\n\nWeight:\nNAkg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029435.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1029435.html#seasons",
    "title": "Ben Hopkins",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029435.html#matches",
    "href": "players/afl/underage_profiles/CD_I1029435.html#matches",
    "title": "Ben Hopkins",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029701.html",
    "href": "players/afl/underage_profiles/CD_I1029701.html",
    "title": "Ry Cantwell",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029701.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1029701.html#player-details",
    "title": "Ry Cantwell",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-08-16\n\n\nState:\nVIC M\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nNorth Ringwood\n\n\nHeight:\n186cm\n\n\nWeight:\nNAkg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029701.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1029701.html#seasons",
    "title": "Ry Cantwell",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1029701.html#matches",
    "href": "players/afl/underage_profiles/CD_I1029701.html#matches",
    "title": "Ry Cantwell",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031506.html",
    "href": "players/afl/underage_profiles/CD_I1031506.html",
    "title": "Taylor Goad",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031506.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1031506.html#player-details",
    "title": "Taylor Goad",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-28\n\n\nState:\nSA\n\n\nState League Club:\nSouth Adelaide\n\n\nCommunity Club:\nWillunga\n\n\nHeight:\n206cm\n\n\nWeight:\n92kg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n29\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\n24"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031506.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1031506.html#seasons",
    "title": "Taylor Goad",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031506.html#matches",
    "href": "players/afl/underage_profiles/CD_I1031506.html#matches",
    "title": "Taylor Goad",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031675.html",
    "href": "players/afl/underage_profiles/CD_I1031675.html",
    "title": "Henry Maerschel",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031675.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1031675.html#player-details",
    "title": "Henry Maerschel",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-10-11\n\n\nState:\nSA\n\n\nState League Club:\nSturt\n\n\nCommunity Club:\nSt Peters\n\n\nHeight:\n189cm\n\n\nWeight:\n80kg\n\n\nUrls:\n\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031675.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1031675.html#seasons",
    "title": "Henry Maerschel",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031675.html#matches",
    "href": "players/afl/underage_profiles/CD_I1031675.html#matches",
    "title": "Henry Maerschel",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031924.html",
    "href": "players/afl/underage_profiles/CD_I1031924.html",
    "title": "Hugh Byrne",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031924.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1031924.html#player-details",
    "title": "Hugh Byrne",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-10-19\n\n\nState:\nVIC C\n\n\nState League Club:\nBendigo Pioneers\n\n\nCommunity Club:\nEchuca\n\n\nHeight:\n191cm\n\n\nWeight:\nNAkg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031924.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1031924.html#seasons",
    "title": "Hugh Byrne",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031924.html#matches",
    "href": "players/afl/underage_profiles/CD_I1031924.html#matches",
    "title": "Hugh Byrne",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031948.html",
    "href": "players/afl/underage_profiles/CD_I1031948.html",
    "title": "Jacob Grant",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031948.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1031948.html#player-details",
    "title": "Jacob Grant",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-18\n\n\nState:\nVIC C\n\n\nState League Club:\nDandenong Stingrays\n\n\nCommunity Club:\nEndeavour Hills\n\n\nHeight:\n191cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031948.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1031948.html#seasons",
    "title": "Jacob Grant",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031948.html#matches",
    "href": "players/afl/underage_profiles/CD_I1031948.html#matches",
    "title": "Jacob Grant",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031988.html",
    "href": "players/afl/underage_profiles/CD_I1031988.html",
    "title": "Cooper Trembath",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031988.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1031988.html#player-details",
    "title": "Cooper Trembath",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-10-17\n\n\nState:\nVIC M\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nPark Orchards\n\n\nHeight:\n192cm\n\n\nWeight:\nNAkg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031988.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1031988.html#seasons",
    "title": "Cooper Trembath",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1031988.html#matches",
    "href": "players/afl/underage_profiles/CD_I1031988.html#matches",
    "title": "Cooper Trembath",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032017.html",
    "href": "players/afl/underage_profiles/CD_I1032017.html",
    "title": "Tew Jiath",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032017.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1032017.html#player-details",
    "title": "Tew Jiath",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-03-02\n\n\nState:\nVIC C\n\n\nState League Club:\nGippsland Power\n\n\nCommunity Club:\nMorwell\n\n\nHeight:\n187cm\n\n\nWeight:\nNAkg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\n22\n\n\nPhantom Draft Ranking (Sporting News):\n25\n\n\nPhantom Draft Ranking (Fox Sports):\n28\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032017.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1032017.html#seasons",
    "title": "Tew Jiath",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032017.html#matches",
    "href": "players/afl/underage_profiles/CD_I1032017.html#matches",
    "title": "Tew Jiath",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032042.html",
    "href": "players/afl/underage_profiles/CD_I1032042.html",
    "title": "Phoenix Gothard",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032042.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1032042.html#player-details",
    "title": "Phoenix Gothard",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-07\n\n\nState:\nNSW/ACT\n\n\nState League Club:\nMurray Bushrangers\n\n\nCommunity Club:\nAlbury\n\n\nHeight:\n179cm\n\n\nWeight:\n71kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n28\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\n22"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032042.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1032042.html#seasons",
    "title": "Phoenix Gothard",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032042.html#matches",
    "href": "players/afl/underage_profiles/CD_I1032042.html#matches",
    "title": "Phoenix Gothard",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032063.html",
    "href": "players/afl/underage_profiles/CD_I1032063.html",
    "title": "Kristian Ferronato",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032063.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1032063.html#player-details",
    "title": "Kristian Ferronato",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-01-19\n\n\nState:\nVIC M\n\n\nState League Club:\nNorthern Knights\n\n\nCommunity Club:\nGreensborough\n\n\nHeight:\n184cm\n\n\nWeight:\nNAkg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032063.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1032063.html#seasons",
    "title": "Kristian Ferronato",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032063.html#matches",
    "href": "players/afl/underage_profiles/CD_I1032063.html#matches",
    "title": "Kristian Ferronato",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032119.html",
    "href": "players/afl/underage_profiles/CD_I1032119.html",
    "title": "James Leake",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032119.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1032119.html#player-details",
    "title": "James Leake",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-10-02\n\n\nState:\nTAS\n\n\nState League Club:\nTasmania Devils\n\n\nCommunity Club:\nLaunceston\n\n\nHeight:\n188cm\n\n\nWeight:\n77kg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\n12\n\n\nPhantom Draft Ranking (Sporting News):\n11\n\n\nPhantom Draft Ranking (Fox Sports):\n15\n\n\nPhantom Draft Ranking (Abc):\n10"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032119.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1032119.html#seasons",
    "title": "James Leake",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032119.html#matches",
    "href": "players/afl/underage_profiles/CD_I1032119.html#matches",
    "title": "James Leake",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032629.html",
    "href": "players/afl/underage_profiles/CD_I1032629.html",
    "title": "Joe Fonti",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032629.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1032629.html#player-details",
    "title": "Joe Fonti",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2004-12-24\n\n\nState:\nWA\n\n\nState League Club:\nClaremont\n\n\nCommunity Club:\nEast Fremantle\n\n\nHeight:\n189cm\n\n\nWeight:\n73kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032629.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1032629.html#seasons",
    "title": "Joe Fonti",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032629.html#matches",
    "href": "players/afl/underage_profiles/CD_I1032629.html#matches",
    "title": "Joe Fonti",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032650.html",
    "href": "players/afl/underage_profiles/CD_I1032650.html",
    "title": "Zane Zakostelsky",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032650.html#player-details",
    "href": "players/afl/underage_profiles/CD_I1032650.html#player-details",
    "title": "Zane Zakostelsky",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-12-14\n\n\nState:\nWA\n\n\nState League Club:\nClaremont\n\n\nCommunity Club:\nNorth Beach\n\n\nHeight:\n196cm\n\n\nWeight:\n90kg\n\n\nUrls:\n\nRookie Me Central\nWAFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\n30"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032650.html#seasons",
    "href": "players/afl/underage_profiles/CD_I1032650.html#seasons",
    "title": "Zane Zakostelsky",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/afl/underage_profiles/CD_I1032650.html#matches",
    "href": "players/afl/underage_profiles/CD_I1032650.html#matches",
    "title": "Zane Zakostelsky",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/24cf3fb0-70e7-11eb-94fe-b722f927e9df.html",
    "href": "players/aflw/underage_profiles/24cf3fb0-70e7-11eb-94fe-b722f927e9df.html",
    "title": "Liliana Grassenis",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/24cf3fb0-70e7-11eb-94fe-b722f927e9df.html#player-details",
    "href": "players/aflw/underage_profiles/24cf3fb0-70e7-11eb-94fe-b722f927e9df.html#player-details",
    "title": "Liliana Grassenis",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\nNA\n\n\nState:\nWA\n\n\nState League Club:\nWest Perth\n\n\nCommunity Club:\nJoondalup Kinross\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\nWAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/24cf3fb0-70e7-11eb-94fe-b722f927e9df.html#seasons",
    "href": "players/aflw/underage_profiles/24cf3fb0-70e7-11eb-94fe-b722f927e9df.html#seasons",
    "title": "Liliana Grassenis",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/24cf3fb0-70e7-11eb-94fe-b722f927e9df.html#matches",
    "href": "players/aflw/underage_profiles/24cf3fb0-70e7-11eb-94fe-b722f927e9df.html#matches",
    "title": "Liliana Grassenis",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/29a0a3c0-70eb-11eb-945c-a51414d69cd2.html",
    "href": "players/aflw/underage_profiles/29a0a3c0-70eb-11eb-945c-a51414d69cd2.html",
    "title": "Ella Slocombe",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/29a0a3c0-70eb-11eb-945c-a51414d69cd2.html#player-details",
    "href": "players/aflw/underage_profiles/29a0a3c0-70eb-11eb-945c-a51414d69cd2.html#player-details",
    "title": "Ella Slocombe",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\nNA\n\n\nState:\nWA\n\n\nState League Club:\nClaremont\n\n\nCommunity Club:\nClaremont\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\nWAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/29a0a3c0-70eb-11eb-945c-a51414d69cd2.html#seasons",
    "href": "players/aflw/underage_profiles/29a0a3c0-70eb-11eb-945c-a51414d69cd2.html#seasons",
    "title": "Ella Slocombe",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/29a0a3c0-70eb-11eb-945c-a51414d69cd2.html#matches",
    "href": "players/aflw/underage_profiles/29a0a3c0-70eb-11eb-945c-a51414d69cd2.html#matches",
    "title": "Ella Slocombe",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/38ce2780-70f4-11eb-8b8c-5565c60fff8f.html",
    "href": "players/aflw/underage_profiles/38ce2780-70f4-11eb-8b8c-5565c60fff8f.html",
    "title": "Georgie Cleaver",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/38ce2780-70f4-11eb-8b8c-5565c60fff8f.html#player-details",
    "href": "players/aflw/underage_profiles/38ce2780-70f4-11eb-8b8c-5565c60fff8f.html#player-details",
    "title": "Georgie Cleaver",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\nNA\n\n\nState:\nWA\n\n\nState League Club:\nEast Fremantle\n\n\nCommunity Club:\nWilletton\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\nWAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/38ce2780-70f4-11eb-8b8c-5565c60fff8f.html#seasons",
    "href": "players/aflw/underage_profiles/38ce2780-70f4-11eb-8b8c-5565c60fff8f.html#seasons",
    "title": "Georgie Cleaver",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/38ce2780-70f4-11eb-8b8c-5565c60fff8f.html#matches",
    "href": "players/aflw/underage_profiles/38ce2780-70f4-11eb-8b8c-5565c60fff8f.html#matches",
    "title": "Georgie Cleaver",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/3936fb90-758b-11eb-96f9-558ba06f2cac.html",
    "href": "players/aflw/underage_profiles/3936fb90-758b-11eb-96f9-558ba06f2cac.html",
    "title": "Eva O‚ÄôDonnell",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/3936fb90-758b-11eb-96f9-558ba06f2cac.html#player-details",
    "href": "players/aflw/underage_profiles/3936fb90-758b-11eb-96f9-558ba06f2cac.html#player-details",
    "title": "Eva O‚ÄôDonnell",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\nNA\n\n\nState:\nWA\n\n\nState League Club:\nClaremont\n\n\nCommunity Club:\nSubiaco\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\nWAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/3936fb90-758b-11eb-96f9-558ba06f2cac.html#seasons",
    "href": "players/aflw/underage_profiles/3936fb90-758b-11eb-96f9-558ba06f2cac.html#seasons",
    "title": "Eva O‚ÄôDonnell",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/3936fb90-758b-11eb-96f9-558ba06f2cac.html#matches",
    "href": "players/aflw/underage_profiles/3936fb90-758b-11eb-96f9-558ba06f2cac.html#matches",
    "title": "Eva O‚ÄôDonnell",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/5657b8e0-7063-11eb-941b-095a26aa9eeb.html",
    "href": "players/aflw/underage_profiles/5657b8e0-7063-11eb-941b-095a26aa9eeb.html",
    "title": "Mylee Leitch",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/5657b8e0-7063-11eb-941b-095a26aa9eeb.html#player-details",
    "href": "players/aflw/underage_profiles/5657b8e0-7063-11eb-941b-095a26aa9eeb.html#player-details",
    "title": "Mylee Leitch",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\nNA\n\n\nState:\nWA\n\n\nState League Club:\nEast Fremantle\n\n\nCommunity Club:\nMundijong Centrals\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\nWAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/5657b8e0-7063-11eb-941b-095a26aa9eeb.html#seasons",
    "href": "players/aflw/underage_profiles/5657b8e0-7063-11eb-941b-095a26aa9eeb.html#seasons",
    "title": "Mylee Leitch",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/5657b8e0-7063-11eb-941b-095a26aa9eeb.html#matches",
    "href": "players/aflw/underage_profiles/5657b8e0-7063-11eb-941b-095a26aa9eeb.html#matches",
    "title": "Mylee Leitch",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/58434620-6d14-11eb-9cad-9173f38b8c20.html",
    "href": "players/aflw/underage_profiles/58434620-6d14-11eb-9cad-9173f38b8c20.html",
    "title": "Kaitlyn Srhoj",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/58434620-6d14-11eb-9cad-9173f38b8c20.html#player-details",
    "href": "players/aflw/underage_profiles/58434620-6d14-11eb-9cad-9173f38b8c20.html#player-details",
    "title": "Kaitlyn Srhoj",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\nNA\n\n\nState:\nWA\n\n\nState League Club:\nPeel Thunder\n\n\nCommunity Club:\nHalls Head\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\nWAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/58434620-6d14-11eb-9cad-9173f38b8c20.html#seasons",
    "href": "players/aflw/underage_profiles/58434620-6d14-11eb-9cad-9173f38b8c20.html#seasons",
    "title": "Kaitlyn Srhoj",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/58434620-6d14-11eb-9cad-9173f38b8c20.html#matches",
    "href": "players/aflw/underage_profiles/58434620-6d14-11eb-9cad-9173f38b8c20.html#matches",
    "title": "Kaitlyn Srhoj",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/ccad9fc0-70c1-11eb-a4d0-db8c92e3a3fb.html",
    "href": "players/aflw/underage_profiles/ccad9fc0-70c1-11eb-a4d0-db8c92e3a3fb.html",
    "title": "Anjelique Raison",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/ccad9fc0-70c1-11eb-a4d0-db8c92e3a3fb.html#player-details",
    "href": "players/aflw/underage_profiles/ccad9fc0-70c1-11eb-a4d0-db8c92e3a3fb.html#player-details",
    "title": "Anjelique Raison",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\nNA\n\n\nState:\nWA\n\n\nState League Club:\nEast Fremantle\n\n\nCommunity Club:\nWilleton\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\nWAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/ccad9fc0-70c1-11eb-a4d0-db8c92e3a3fb.html#seasons",
    "href": "players/aflw/underage_profiles/ccad9fc0-70c1-11eb-a4d0-db8c92e3a3fb.html#seasons",
    "title": "Anjelique Raison",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/ccad9fc0-70c1-11eb-a4d0-db8c92e3a3fb.html#matches",
    "href": "players/aflw/underage_profiles/ccad9fc0-70c1-11eb-a4d0-db8c92e3a3fb.html#matches",
    "title": "Anjelique Raison",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1015163.html",
    "href": "players/aflw/underage_profiles/CD_I1015163.html",
    "title": "Kiera Whiley",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1015163.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1015163.html#player-details",
    "title": "Kiera Whiley",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-07\n\n\nState:\nVIC\n\n\nState League Club:\nWestern Jets\n\n\nCommunity Club:\nHillside\n\n\nHeight:\n168-173cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1015163.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1015163.html#seasons",
    "title": "Kiera Whiley",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1015163.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1015163.html#matches",
    "title": "Kiera Whiley",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1019806.html",
    "href": "players/aflw/underage_profiles/CD_I1019806.html",
    "title": "Jemma Rigoni",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1019806.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1019806.html#player-details",
    "title": "Jemma Rigoni",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2004-06-04\n\n\nState:\nVIC\n\n\nState League Club:\nOakleigh Chargers\n\n\nCommunity Club:\nAshburton\n\n\nHeight:\n170-172cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1019806.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1019806.html#seasons",
    "title": "Jemma Rigoni",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1019806.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1019806.html#matches",
    "title": "Jemma Rigoni",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021365.html",
    "href": "players/aflw/underage_profiles/CD_I1021365.html",
    "title": "Annabel Kievit",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021365.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021365.html#player-details",
    "title": "Annabel Kievit",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-09-22\n\n\nState:\nNT\n\n\nState League Club:\nNorthern Territory Academy\n\n\nCommunity Club:\nWaratah\n\n\nHeight:\n173cm\n\n\nWeight:\nNAkg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021365.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021365.html#seasons",
    "title": "Annabel Kievit",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021365.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021365.html#matches",
    "title": "Annabel Kievit",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021379.html",
    "href": "players/aflw/underage_profiles/CD_I1021379.html",
    "title": "Kyanne Campbell",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021379.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021379.html#player-details",
    "title": "Kyanne Campbell",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-01-13\n\n\nState:\nNT\n\n\nState League Club:\nNorthern Territory Academy\n\n\nCommunity Club:\nPioneer\n\n\nHeight:\n162-163cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021379.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021379.html#seasons",
    "title": "Kyanne Campbell",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021379.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021379.html#matches",
    "title": "Kyanne Campbell",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021819.html",
    "href": "players/aflw/underage_profiles/CD_I1021819.html",
    "title": "Sophie Butterworth",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021819.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021819.html#player-details",
    "title": "Sophie Butterworth",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-12\n\n\nState:\nVIC\n\n\nState League Club:\nDandenong Stingrays\n\n\nCommunity Club:\nMornington\n\n\nHeight:\n180-181cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021819.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021819.html#seasons",
    "title": "Sophie Butterworth",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021819.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021819.html#matches",
    "title": "Sophie Butterworth",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021822.html",
    "href": "players/aflw/underage_profiles/CD_I1021822.html",
    "title": "Mikayla Williamson",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021822.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021822.html#player-details",
    "title": "Mikayla Williamson",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-05\n\n\nState:\nVIC\n\n\nState League Club:\nDandenong Stingrays\n\n\nCommunity Club:\nPines\n\n\nHeight:\n173-174cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021822.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021822.html#seasons",
    "title": "Mikayla Williamson",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021822.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021822.html#matches",
    "title": "Mikayla Williamson",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021824.html",
    "href": "players/aflw/underage_profiles/CD_I1021824.html",
    "title": "Hayley McLaughlin",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021824.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021824.html#player-details",
    "title": "Hayley McLaughlin",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-22\n\n\nState:\nVIC\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nBlackburn\n\n\nHeight:\n156-164cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021824.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021824.html#seasons",
    "title": "Hayley McLaughlin",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021824.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021824.html#matches",
    "title": "Hayley McLaughlin",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021828.html",
    "href": "players/aflw/underage_profiles/CD_I1021828.html",
    "title": "Alyssia Pisano",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021828.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021828.html#player-details",
    "title": "Alyssia Pisano",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-01\n\n\nState:\nVIC\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nRowville Knights\n\n\nHeight:\n160-162cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021828.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021828.html#seasons",
    "title": "Alyssia Pisano",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021828.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021828.html#matches",
    "title": "Alyssia Pisano",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021834.html",
    "href": "players/aflw/underage_profiles/CD_I1021834.html",
    "title": "Georgia Stubs",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021834.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021834.html#player-details",
    "title": "Georgia Stubs",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-16\n\n\nState:\nVIC\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nOlinda Ferny Creek\n\n\nHeight:\n165-167cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021834.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021834.html#seasons",
    "title": "Georgia Stubs",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021834.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021834.html#matches",
    "title": "Georgia Stubs",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021837.html",
    "href": "players/aflw/underage_profiles/CD_I1021837.html",
    "title": "Laura Stone",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021837.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021837.html#player-details",
    "title": "Laura Stone",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-22\n\n\nState:\nVIC\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nSBL Wolves\n\n\nHeight:\n167-169cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021837.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021837.html#seasons",
    "title": "Laura Stone",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021837.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021837.html#matches",
    "title": "Laura Stone",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021840.html",
    "href": "players/aflw/underage_profiles/CD_I1021840.html",
    "title": "Ava Campbell",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021840.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021840.html#player-details",
    "title": "Ava Campbell",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-29\n\n\nState:\nVIC\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nVermont\n\n\nHeight:\n173-174cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021840.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021840.html#seasons",
    "title": "Ava Campbell",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021840.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021840.html#matches",
    "title": "Ava Campbell",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021844.html",
    "href": "players/aflw/underage_profiles/CD_I1021844.html",
    "title": "Jess Vukic",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021844.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021844.html#player-details",
    "title": "Jess Vukic",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-09\n\n\nState:\nVIC\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nVermont\n\n\nHeight:\n179-180cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021844.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021844.html#seasons",
    "title": "Jess Vukic",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021844.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021844.html#matches",
    "title": "Jess Vukic",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021845.html",
    "href": "players/aflw/underage_profiles/CD_I1021845.html",
    "title": "Jacinta Hose",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021845.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021845.html#player-details",
    "title": "Jacinta Hose",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-05\n\n\nState:\nVIC\n\n\nState League Club:\nEastern Ranges\n\n\nCommunity Club:\nVermont\n\n\nHeight:\n181-184cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021845.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021845.html#seasons",
    "title": "Jacinta Hose",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021845.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021845.html#matches",
    "title": "Jacinta Hose",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021852.html",
    "href": "players/aflw/underage_profiles/CD_I1021852.html",
    "title": "Ava Jordan",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021852.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021852.html#player-details",
    "title": "Ava Jordan",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-29\n\n\nState:\nVIC\n\n\nState League Club:\nNorthern Knights\n\n\nCommunity Club:\nBanyule\n\n\nHeight:\n146-150cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021852.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021852.html#seasons",
    "title": "Ava Jordan",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021852.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021852.html#matches",
    "title": "Ava Jordan",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021868.html",
    "href": "players/aflw/underage_profiles/CD_I1021868.html",
    "title": "Mia Zielinski",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021868.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021868.html#player-details",
    "title": "Mia Zielinski",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-07-21\n\n\nState:\nVIC\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nEast Malvern\n\n\nHeight:\n174-178cm\n\n\nWeight:\nNAkg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021868.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021868.html#seasons",
    "title": "Mia Zielinski",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021868.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021868.html#matches",
    "title": "Mia Zielinski",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021879.html",
    "href": "players/aflw/underage_profiles/CD_I1021879.html",
    "title": "Kristie-Lee Weston-Turner",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021879.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021879.html#player-details",
    "title": "Kristie-Lee Weston-Turner",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-01\n\n\nState:\nVIC\n\n\nState League Club:\nWestern Jets\n\n\nCommunity Club:\nSunshine Heights\n\n\nHeight:\n176-180cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021879.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021879.html#seasons",
    "title": "Kristie-Lee Weston-Turner",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021879.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021879.html#matches",
    "title": "Kristie-Lee Weston-Turner",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021884.html",
    "href": "players/aflw/underage_profiles/CD_I1021884.html",
    "title": "Sarah Grunden",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021884.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021884.html#player-details",
    "title": "Sarah Grunden",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-02-25\n\n\nState:\nVIC\n\n\nState League Club:\nCalder Cannons\n\n\nCommunity Club:\nKeilor\n\n\nHeight:\n164-168cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021884.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021884.html#seasons",
    "title": "Sarah Grunden",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021884.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021884.html#matches",
    "title": "Sarah Grunden",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021893.html",
    "href": "players/aflw/underage_profiles/CD_I1021893.html",
    "title": "Brooke Barwick",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021893.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021893.html#player-details",
    "title": "Brooke Barwick",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-29\n\n\nState:\nTAS\n\n\nState League Club:\nTasmania Devils\n\n\nCommunity Club:\nGlenorchy\n\n\nHeight:\n156-159cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021893.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021893.html#seasons",
    "title": "Brooke Barwick",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021893.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021893.html#matches",
    "title": "Brooke Barwick",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021895.html",
    "href": "players/aflw/underage_profiles/CD_I1021895.html",
    "title": "Georgia Clark",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021895.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021895.html#player-details",
    "title": "Georgia Clark",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-12-11\n\n\nState:\nTAS\n\n\nState League Club:\nTasmania Devils\n\n\nCommunity Club:\nGlenorchy\n\n\nHeight:\n171-173cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021895.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021895.html#seasons",
    "title": "Georgia Clark",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021895.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021895.html#matches",
    "title": "Georgia Clark",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021898.html",
    "href": "players/aflw/underage_profiles/CD_I1021898.html",
    "title": "Tunisha Kikoak",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021898.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021898.html#player-details",
    "title": "Tunisha Kikoak",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-12\n\n\nState:\nTAS\n\n\nState League Club:\nTasmania Devils\n\n\nCommunity Club:\nOld Scotch Collegians\n\n\nHeight:\n178-180cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021898.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021898.html#seasons",
    "title": "Tunisha Kikoak",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021898.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021898.html#matches",
    "title": "Tunisha Kikoak",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021924.html",
    "href": "players/aflw/underage_profiles/CD_I1021924.html",
    "title": "Lila Keck",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021924.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021924.html#player-details",
    "title": "Lila Keck",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-10-20\n\n\nState:\nVIC\n\n\nState League Club:\nBendigo Pioneers\n\n\nCommunity Club:\nStrathfieldsaye\n\n\nHeight:\n160-161cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021924.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021924.html#seasons",
    "title": "Lila Keck",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021924.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021924.html#matches",
    "title": "Lila Keck",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021927.html",
    "href": "players/aflw/underage_profiles/CD_I1021927.html",
    "title": "Bryde O‚ÄôRourke",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021927.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021927.html#player-details",
    "title": "Bryde O‚ÄôRourke",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-28\n\n\nState:\nVIC\n\n\nState League Club:\nBendigo Pioneers\n\n\nCommunity Club:\nStrathfieldsaye\n\n\nHeight:\n172-174cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021927.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021927.html#seasons",
    "title": "Bryde O‚ÄôRourke",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021927.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021927.html#matches",
    "title": "Bryde O‚ÄôRourke",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021929.html",
    "href": "players/aflw/underage_profiles/CD_I1021929.html",
    "title": "Keeley Fullerton",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021929.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1021929.html#player-details",
    "title": "Keeley Fullerton",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-01-30\n\n\nState:\nVIC\n\n\nState League Club:\nBendigo Pioneers\n\n\nCommunity Club:\nEaglehawk\n\n\nHeight:\n160-162cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021929.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1021929.html#seasons",
    "title": "Keeley Fullerton",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1021929.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1021929.html#matches",
    "title": "Keeley Fullerton",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022181.html",
    "href": "players/aflw/underage_profiles/CD_I1022181.html",
    "title": "Shineah Goody",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022181.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1022181.html#player-details",
    "title": "Shineah Goody",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\nNA\n\n\nState:\nSA\n\n\nState League Club:\nWoodville-West Torrens\n\n\nCommunity Club:\nHenley\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022181.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1022181.html#seasons",
    "title": "Shineah Goody",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022181.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1022181.html#matches",
    "title": "Shineah Goody",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022196.html",
    "href": "players/aflw/underage_profiles/CD_I1022196.html",
    "title": "Piper Window",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022196.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1022196.html#player-details",
    "title": "Piper Window",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\nNA\n\n\nState:\nSA\n\n\nState League Club:\nGlenelg\n\n\nCommunity Club:\nMorphettville Park\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022196.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1022196.html#seasons",
    "title": "Piper Window",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022196.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1022196.html#matches",
    "title": "Piper Window",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022203.html",
    "href": "players/aflw/underage_profiles/CD_I1022203.html",
    "title": "Elaine Grigg",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022203.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1022203.html#player-details",
    "title": "Elaine Grigg",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\nNA\n\n\nState:\nSA\n\n\nState League Club:\nCentral District\n\n\nCommunity Club:\nBroadview\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022203.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1022203.html#seasons",
    "title": "Elaine Grigg",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022203.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1022203.html#matches",
    "title": "Elaine Grigg",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022220.html",
    "href": "players/aflw/underage_profiles/CD_I1022220.html",
    "title": "Molly Brooksby",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022220.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1022220.html#player-details",
    "title": "Molly Brooksby",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\nNA\n\n\nState:\nSA\n\n\nState League Club:\nNorwood\n\n\nCommunity Club:\nGolden Grove\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022220.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1022220.html#seasons",
    "title": "Molly Brooksby",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022220.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1022220.html#matches",
    "title": "Molly Brooksby",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022224.html",
    "href": "players/aflw/underage_profiles/CD_I1022224.html",
    "title": "Brooke Boileau",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022224.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1022224.html#player-details",
    "title": "Brooke Boileau",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\nNA\n\n\nState:\nSA\n\n\nState League Club:\nSouth Adelaide\n\n\nCommunity Club:\nMount Compass\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022224.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1022224.html#seasons",
    "title": "Brooke Boileau",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022224.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1022224.html#matches",
    "title": "Brooke Boileau",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022248.html",
    "href": "players/aflw/underage_profiles/CD_I1022248.html",
    "title": "Lauren Young",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022248.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1022248.html#player-details",
    "title": "Lauren Young",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\nNA\n\n\nState:\nSA\n\n\nState League Club:\nWest Adelaide\n\n\nCommunity Club:\nGoodwood Saints\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022248.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1022248.html#seasons",
    "title": "Lauren Young",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022248.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1022248.html#matches",
    "title": "Lauren Young",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022331.html",
    "href": "players/aflw/underage_profiles/CD_I1022331.html",
    "title": "Asha Turner-Funk",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022331.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1022331.html#player-details",
    "title": "Asha Turner-Funk",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2004-04-29\n\n\nState:\nNSW-ACT\n\n\nState League Club:\nSydney Swans Academy\n\n\nCommunity Club:\nManly Warringah Wolves\n\n\nHeight:\n176cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022331.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1022331.html#seasons",
    "title": "Asha Turner-Funk",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022331.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1022331.html#matches",
    "title": "Asha Turner-Funk",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022334.html",
    "href": "players/aflw/underage_profiles/CD_I1022334.html",
    "title": "Olivia Morris",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022334.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1022334.html#player-details",
    "title": "Olivia Morris",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-06\n\n\nState:\nNSW-ACT\n\n\nState League Club:\nSydney Swans Academy\n\n\nCommunity Club:\nPennant Hills\n\n\nHeight:\n165cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022334.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1022334.html#seasons",
    "title": "Olivia Morris",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022334.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1022334.html#matches",
    "title": "Olivia Morris",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022335.html",
    "href": "players/aflw/underage_profiles/CD_I1022335.html",
    "title": "Marnie Robinson",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022335.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1022335.html#player-details",
    "title": "Marnie Robinson",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-08\n\n\nState:\nNSW-ACT\n\n\nState League Club:\nSydney Swans Academy\n\n\nCommunity Club:\nUTS Bats\n\n\nHeight:\n172cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022335.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1022335.html#seasons",
    "title": "Marnie Robinson",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022335.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1022335.html#matches",
    "title": "Marnie Robinson",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022346.html",
    "href": "players/aflw/underage_profiles/CD_I1022346.html",
    "title": "Kendra Blattman",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022346.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1022346.html#player-details",
    "title": "Kendra Blattman",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-07\n\n\nState:\nNSW-ACT\n\n\nState League Club:\nSydney Swans Academy\n\n\nCommunity Club:\nSydney University\n\n\nHeight:\n177cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022346.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1022346.html#seasons",
    "title": "Kendra Blattman",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022346.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1022346.html#matches",
    "title": "Kendra Blattman",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022353.html",
    "href": "players/aflw/underage_profiles/CD_I1022353.html",
    "title": "Sophia de Castella",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022353.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1022353.html#player-details",
    "title": "Sophia de Castella",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-20\n\n\nState:\nNSW-ACT\n\n\nState League Club:\nGWS Giants Academy\n\n\nCommunity Club:\nAinslie\n\n\nHeight:\n164cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022353.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1022353.html#seasons",
    "title": "Sophia de Castella",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022353.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1022353.html#matches",
    "title": "Sophia de Castella",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022765.html",
    "href": "players/aflw/underage_profiles/CD_I1022765.html",
    "title": "Bianca Lyne",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022765.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1022765.html#player-details",
    "title": "Bianca Lyne",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-04\n\n\nState:\nVIC\n\n\nState League Club:\nDandenong Stingrays\n\n\nCommunity Club:\nTyabb\n\n\nHeight:\n174-176cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022765.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1022765.html#seasons",
    "title": "Bianca Lyne",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1022765.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1022765.html#matches",
    "title": "Bianca Lyne",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023389.html",
    "href": "players/aflw/underage_profiles/CD_I1023389.html",
    "title": "Chloe Adams",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023389.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1023389.html#player-details",
    "title": "Chloe Adams",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-12-13\n\n\nState:\nVIC\n\n\nState League Club:\nGeelong Falcons\n\n\nCommunity Club:\nGrovedale\n\n\nHeight:\n167cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023389.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1023389.html#seasons",
    "title": "Chloe Adams",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023389.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1023389.html#matches",
    "title": "Chloe Adams",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023427.html",
    "href": "players/aflw/underage_profiles/CD_I1023427.html",
    "title": "Lilu Hung",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023427.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1023427.html#player-details",
    "title": "Lilu Hung",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-06-07\n\n\nState:\nQLD\n\n\nState League Club:\nBrisbane Lions Academy\n\n\nCommunity Club:\nAspley\n\n\nHeight:\n176cm\n\n\nWeight:\nNAkg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023427.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1023427.html#seasons",
    "title": "Lilu Hung",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023427.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1023427.html#matches",
    "title": "Lilu Hung",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023564.html",
    "href": "players/aflw/underage_profiles/CD_I1023564.html",
    "title": "Jemma Ramsdale",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023564.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1023564.html#player-details",
    "title": "Jemma Ramsdale",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-05\n\n\nState:\nVIC\n\n\nState League Club:\nDandenong Stingrays\n\n\nCommunity Club:\nPines\n\n\nHeight:\n173-174cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023564.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1023564.html#seasons",
    "title": "Jemma Ramsdale",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023564.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1023564.html#matches",
    "title": "Jemma Ramsdale",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023950.html",
    "href": "players/aflw/underage_profiles/CD_I1023950.html",
    "title": "Alissa Brook",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023950.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1023950.html#player-details",
    "title": "Alissa Brook",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\nNA\n\n\nState:\nSA\n\n\nState League Club:\nSouth Adelaide\n\n\nCommunity Club:\nVictor Harbor\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023950.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1023950.html#seasons",
    "title": "Alissa Brook",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1023950.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1023950.html#matches",
    "title": "Alissa Brook",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024528.html",
    "href": "players/aflw/underage_profiles/CD_I1024528.html",
    "title": "Tsharni Graham",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024528.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1024528.html#player-details",
    "title": "Tsharni Graham",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-10-28\n\n\nState:\nNT\n\n\nState League Club:\nNorthern Territory Academy\n\n\nCommunity Club:\nPalmerston Magpies\n\n\nHeight:\n173cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024528.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1024528.html#seasons",
    "title": "Tsharni Graham",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024528.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1024528.html#matches",
    "title": "Tsharni Graham",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024538.html",
    "href": "players/aflw/underage_profiles/CD_I1024538.html",
    "title": "Josie McCabe",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024538.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1024538.html#player-details",
    "title": "Josie McCabe",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-18\n\n\nState:\nQLD\n\n\nState League Club:\nGold Coast Suns Academy\n\n\nCommunity Club:\nBond University\n\n\nHeight:\n173-174cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024538.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1024538.html#seasons",
    "title": "Josie McCabe",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024538.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1024538.html#matches",
    "title": "Josie McCabe",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024541.html",
    "href": "players/aflw/underage_profiles/CD_I1024541.html",
    "title": "Sienna McMullen",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024541.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1024541.html#player-details",
    "title": "Sienna McMullen",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-15\n\n\nState:\nQLD\n\n\nState League Club:\nGold Coast Suns Academy\n\n\nCommunity Club:\nBond University\n\n\nHeight:\n165cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024541.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1024541.html#seasons",
    "title": "Sienna McMullen",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024541.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1024541.html#matches",
    "title": "Sienna McMullen",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024563.html",
    "href": "players/aflw/underage_profiles/CD_I1024563.html",
    "title": "Jacinta Baldwick",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024563.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1024563.html#player-details",
    "title": "Jacinta Baldwick",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-14\n\n\nState:\nQLD\n\n\nState League Club:\nBrisbane Lions Academy\n\n\nCommunity Club:\nCoorparoo\n\n\nHeight:\n169cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024563.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1024563.html#seasons",
    "title": "Jacinta Baldwick",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1024563.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1024563.html#matches",
    "title": "Jacinta Baldwick",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025421.html",
    "href": "players/aflw/underage_profiles/CD_I1025421.html",
    "title": "Amber Schutte",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025421.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025421.html#player-details",
    "title": "Amber Schutte",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-12-13\n\n\nState:\nVIC\n\n\nState League Club:\nGippsland Power\n\n\nCommunity Club:\nTraralgon\n\n\nHeight:\n169cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025421.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025421.html#seasons",
    "title": "Amber Schutte",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025421.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025421.html#matches",
    "title": "Amber Schutte",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025428.html",
    "href": "players/aflw/underage_profiles/CD_I1025428.html",
    "title": "Jessica Rentsch",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025428.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025428.html#player-details",
    "title": "Jessica Rentsch",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-10-11\n\n\nState:\nVIC\n\n\nState League Club:\nGWV Rebels\n\n\nCommunity Club:\nLake Wendouree\n\n\nHeight:\n170cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025428.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025428.html#seasons",
    "title": "Jessica Rentsch",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025428.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025428.html#matches",
    "title": "Jessica Rentsch",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025431.html",
    "href": "players/aflw/underage_profiles/CD_I1025431.html",
    "title": "Tyla Crabtree",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025431.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025431.html#player-details",
    "title": "Tyla Crabtree",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-09-04\n\n\nState:\nVIC\n\n\nState League Club:\nGWV Rebels\n\n\nCommunity Club:\nRedan\n\n\nHeight:\n160-161cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025431.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025431.html#seasons",
    "title": "Tyla Crabtree",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025431.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025431.html#matches",
    "title": "Tyla Crabtree",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025494.html",
    "href": "players/aflw/underage_profiles/CD_I1025494.html",
    "title": "Meg Robertson",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025494.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025494.html#player-details",
    "title": "Meg Robertson",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-06\n\n\nState:\nVIC\n\n\nState League Club:\nDandenong Stingrays\n\n\nCommunity Club:\nBerwick\n\n\nHeight:\n170-171cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025494.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025494.html#seasons",
    "title": "Meg Robertson",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025494.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025494.html#matches",
    "title": "Meg Robertson",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025525.html",
    "href": "players/aflw/underage_profiles/CD_I1025525.html",
    "title": "Amy Gaylor",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025525.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025525.html#player-details",
    "title": "Amy Gaylor",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-23\n\n\nState:\nVIC\n\n\nState League Club:\nCalder Cannons\n\n\nCommunity Club:\nStrathmore\n\n\nHeight:\n170-171cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025525.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025525.html#seasons",
    "title": "Amy Gaylor",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025525.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025525.html#matches",
    "title": "Amy Gaylor",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025526.html",
    "href": "players/aflw/underage_profiles/CD_I1025526.html",
    "title": "Kayley Kavanagh",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025526.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025526.html#player-details",
    "title": "Kayley Kavanagh",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-06\n\n\nState:\nVIC\n\n\nState League Club:\nCalder Cannons\n\n\nCommunity Club:\nStrathmore\n\n\nHeight:\n169cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025526.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025526.html#seasons",
    "title": "Kayley Kavanagh",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025526.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025526.html#matches",
    "title": "Kayley Kavanagh",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025609.html",
    "href": "players/aflw/underage_profiles/CD_I1025609.html",
    "title": "Lucille Cronin",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025609.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025609.html#player-details",
    "title": "Lucille Cronin",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-10-05\n\n\nState:\nVIC\n\n\nState League Club:\nOakleigh Chargers\n\n\nCommunity Club:\nKew Comets\n\n\nHeight:\n178-180cm\n\n\nWeight:\nNAkg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025609.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025609.html#seasons",
    "title": "Lucille Cronin",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025609.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025609.html#matches",
    "title": "Lucille Cronin",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025616.html",
    "href": "players/aflw/underage_profiles/CD_I1025616.html",
    "title": "Lara Hausegger",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025616.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025616.html#player-details",
    "title": "Lara Hausegger",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-03\n\n\nState:\nVIC\n\n\nState League Club:\nOakleigh Chargers\n\n\nCommunity Club:\nOld Yarra Cobras\n\n\nHeight:\n172cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025616.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025616.html#seasons",
    "title": "Lara Hausegger",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025616.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025616.html#matches",
    "title": "Lara Hausegger",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025636.html",
    "href": "players/aflw/underage_profiles/CD_I1025636.html",
    "title": "Tamara Henry",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025636.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025636.html#player-details",
    "title": "Tamara Henry",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-07-05\n\n\nState:\nVIC\n\n\nState League Club:\nWestern Jets\n\n\nCommunity Club:\nDarley Devils\n\n\nHeight:\n170cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025636.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025636.html#seasons",
    "title": "Tamara Henry",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025636.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025636.html#matches",
    "title": "Tamara Henry",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025669.html",
    "href": "players/aflw/underage_profiles/CD_I1025669.html",
    "title": "Annabelle Embelton",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025669.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025669.html#player-details",
    "title": "Annabelle Embelton",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-12-06\n\n\nState:\nVIC\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nEast Malvern\n\n\nHeight:\n175cm\n\n\nWeight:\nNAkg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025669.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025669.html#seasons",
    "title": "Annabelle Embelton",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025669.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025669.html#matches",
    "title": "Annabelle Embelton",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025674.html",
    "href": "players/aflw/underage_profiles/CD_I1025674.html",
    "title": "Emily Gough",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025674.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025674.html#player-details",
    "title": "Emily Gough",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-12-01\n\n\nState:\nVIC\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nEast Malvern\n\n\nHeight:\n178-180cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025674.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025674.html#seasons",
    "title": "Emily Gough",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025674.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025674.html#matches",
    "title": "Emily Gough",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025684.html",
    "href": "players/aflw/underage_profiles/CD_I1025684.html",
    "title": "Jasmine Shepherd",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025684.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025684.html#player-details",
    "title": "Jasmine Shepherd",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-10-07\n\n\nState:\nVIC\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nBeaumaris\n\n\nHeight:\n172-174cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025684.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025684.html#seasons",
    "title": "Jasmine Shepherd",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025684.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025684.html#matches",
    "title": "Jasmine Shepherd",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025861.html",
    "href": "players/aflw/underage_profiles/CD_I1025861.html",
    "title": "Holly Ifould",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025861.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1025861.html#player-details",
    "title": "Holly Ifould",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\nNA\n\n\nState:\nSA\n\n\nState League Club:\nSouth Adelaide\n\n\nCommunity Club:\nWillunga\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025861.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1025861.html#seasons",
    "title": "Holly Ifould",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1025861.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1025861.html#matches",
    "title": "Holly Ifould",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026105.html",
    "href": "players/aflw/underage_profiles/CD_I1026105.html",
    "title": "Kiara Bischa",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026105.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1026105.html#player-details",
    "title": "Kiara Bischa",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-15\n\n\nState:\nQLD\n\n\nState League Club:\nGold Coast Suns Academy\n\n\nCommunity Club:\nBond University\n\n\nHeight:\n171cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026105.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1026105.html#seasons",
    "title": "Kiara Bischa",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026105.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1026105.html#matches",
    "title": "Kiara Bischa",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026107.html",
    "href": "players/aflw/underage_profiles/CD_I1026107.html",
    "title": "Amber Swan",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026107.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1026107.html#player-details",
    "title": "Amber Swan",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-03-17\n\n\nState:\nQLD\n\n\nState League Club:\nBrisbane Lions Academy\n\n\nCommunity Club:\nMaroochydore\n\n\nHeight:\n164cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026107.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1026107.html#seasons",
    "title": "Amber Swan",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026107.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1026107.html#matches",
    "title": "Amber Swan",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026111.html",
    "href": "players/aflw/underage_profiles/CD_I1026111.html",
    "title": "Sophie Peters",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026111.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1026111.html#player-details",
    "title": "Sophie Peters",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-03-12\n\n\nState:\nQLD\n\n\nState League Club:\nBrisbane Lions Academy\n\n\nCommunity Club:\nMaroochydore\n\n\nHeight:\n163cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026111.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1026111.html#seasons",
    "title": "Sophie Peters",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026111.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1026111.html#matches",
    "title": "Sophie Peters",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026113.html",
    "href": "players/aflw/underage_profiles/CD_I1026113.html",
    "title": "Indiana Williams",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026113.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1026113.html#player-details",
    "title": "Indiana Williams",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-06-12\n\n\nState:\nQLD\n\n\nState League Club:\nBrisbane Lions Academy\n\n\nCommunity Club:\nMaroochydore\n\n\nHeight:\n176cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026113.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1026113.html#seasons",
    "title": "Indiana Williams",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026113.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1026113.html#matches",
    "title": "Indiana Williams",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026114.html",
    "href": "players/aflw/underage_profiles/CD_I1026114.html",
    "title": "Laura Roy",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026114.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1026114.html#player-details",
    "title": "Laura Roy",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-16\n\n\nState:\nQLD\n\n\nState League Club:\nBrisbane Lions Academy\n\n\nCommunity Club:\nUniversity of Queensland\n\n\nHeight:\n170cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026114.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1026114.html#seasons",
    "title": "Laura Roy",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026114.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1026114.html#matches",
    "title": "Laura Roy",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026937.html",
    "href": "players/aflw/underage_profiles/CD_I1026937.html",
    "title": "Rania Crozier",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026937.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1026937.html#player-details",
    "title": "Rania Crozier",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-11-18\n\n\nState:\nQLD\n\n\nState League Club:\nBrisbane Lions Academy\n\n\nCommunity Club:\nAspley\n\n\nHeight:\n178-179cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026937.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1026937.html#seasons",
    "title": "Rania Crozier",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026937.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1026937.html#matches",
    "title": "Rania Crozier",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026947.html",
    "href": "players/aflw/underage_profiles/CD_I1026947.html",
    "title": "Chantal Mason",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026947.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1026947.html#player-details",
    "title": "Chantal Mason",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-28\n\n\nState:\nVIC\n\n\nState League Club:\nGeelong Falcons\n\n\nCommunity Club:\nSt Josephs\n\n\nHeight:\n177cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026947.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1026947.html#seasons",
    "title": "Chantal Mason",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1026947.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1026947.html#matches",
    "title": "Chantal Mason",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1028873.html",
    "href": "players/aflw/underage_profiles/CD_I1028873.html",
    "title": "Melanie Staunton",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1028873.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1028873.html#player-details",
    "title": "Melanie Staunton",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\n2005-05-24\n\n\nState:\nNSW-ACT\n\n\nState League Club:\nGWS Giants Academy\n\n\nCommunity Club:\nEast Coast Eagles/Ulladulla\n\n\nHeight:\n169cm\n\n\nWeight:\nNAkg\n\n\nUrls:\nAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1028873.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1028873.html#seasons",
    "title": "Melanie Staunton",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1028873.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1028873.html#matches",
    "title": "Melanie Staunton",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1028921.html",
    "href": "players/aflw/underage_profiles/CD_I1028921.html",
    "title": "Serina Baukes",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1028921.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1028921.html#player-details",
    "title": "Serina Baukes",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-19\n\n\nState:\nNSW-ACT\n\n\nState League Club:\nSydney Swans Academy\n\n\nCommunity Club:\nUTS Bats\n\n\nHeight:\n171cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1028921.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1028921.html#seasons",
    "title": "Serina Baukes",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1028921.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1028921.html#matches",
    "title": "Serina Baukes",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1029279.html",
    "href": "players/aflw/underage_profiles/CD_I1029279.html",
    "title": "Holly Cooper",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1029279.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1029279.html#player-details",
    "title": "Holly Cooper",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-02-23\n\n\nState:\nNSW-ACT\n\n\nState League Club:\nSydney Swans Academy\n\n\nCommunity Club:\nManly Warringah Wolves\n\n\nHeight:\n164cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1029279.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1029279.html#seasons",
    "title": "Holly Cooper",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1029279.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1029279.html#matches",
    "title": "Holly Cooper",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1030368.html",
    "href": "players/aflw/underage_profiles/CD_I1030368.html",
    "title": "Jasmyn Thompson",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1030368.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1030368.html#player-details",
    "title": "Jasmyn Thompson",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-10-29\n\n\nState:\nTAS\n\n\nState League Club:\nTasmania Devils\n\n\nCommunity Club:\nUlverstone\n\n\nHeight:\n164cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1030368.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1030368.html#seasons",
    "title": "Jasmyn Thompson",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1030368.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1030368.html#matches",
    "title": "Jasmyn Thompson",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1030942.html",
    "href": "players/aflw/underage_profiles/CD_I1030942.html",
    "title": "Zara Walsh",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1030942.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1030942.html#player-details",
    "title": "Zara Walsh",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\nNA\n\n\nState:\nSA\n\n\nState League Club:\nSturt\n\n\nCommunity Club:\nOnkaparinga Valley\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nSANFL\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1030942.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1030942.html#seasons",
    "title": "Zara Walsh",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1030942.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1030942.html#matches",
    "title": "Zara Walsh",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031398.html",
    "href": "players/aflw/underage_profiles/CD_I1031398.html",
    "title": "Isabel Bacon",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031398.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1031398.html#player-details",
    "title": "Isabel Bacon",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-11\n\n\nState:\nVIC\n\n\nState League Club:\nSandringham Dragons\n\n\nCommunity Club:\nCollegians\n\n\nHeight:\n172cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031398.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1031398.html#seasons",
    "title": "Isabel Bacon",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031398.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1031398.html#matches",
    "title": "Isabel Bacon",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031412.html",
    "href": "players/aflw/underage_profiles/CD_I1031412.html",
    "title": "Mackenzie Ford",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031412.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1031412.html#player-details",
    "title": "Mackenzie Ford",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-04-27\n\n\nState:\nTAS\n\n\nState League Club:\nTasmania Devils\n\n\nCommunity Club:\nKingborough\n\n\nHeight:\n163cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031412.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1031412.html#seasons",
    "title": "Mackenzie Ford",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031412.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1031412.html#matches",
    "title": "Mackenzie Ford",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031563.html",
    "href": "players/aflw/underage_profiles/CD_I1031563.html",
    "title": "Gabrielle Eaton",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031563.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1031563.html#player-details",
    "title": "Gabrielle Eaton",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-10-21\n\n\nState:\nNSW-ACT\n\n\nState League Club:\nSydney Swans Academy\n\n\nCommunity Club:\nSouthern Power\n\n\nHeight:\n178cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031563.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1031563.html#seasons",
    "title": "Gabrielle Eaton",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031563.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1031563.html#matches",
    "title": "Gabrielle Eaton",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031784.html",
    "href": "players/aflw/underage_profiles/CD_I1031784.html",
    "title": "Cleo Buttifant",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031784.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1031784.html#player-details",
    "title": "Cleo Buttifant",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-05-03\n\n\nState:\nNSW-ACT\n\n\nState League Club:\nGWS Giants Academy\n\n\nCommunity Club:\nAinslie/Turvey Park\n\n\nHeight:\n174cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031784.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1031784.html#seasons",
    "title": "Cleo Buttifant",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1031784.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1031784.html#matches",
    "title": "Cleo Buttifant",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1033269.html",
    "href": "players/aflw/underage_profiles/CD_I1033269.html",
    "title": "Evie Long",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1033269.html#player-details",
    "href": "players/aflw/underage_profiles/CD_I1033269.html#player-details",
    "title": "Evie Long",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\n\n\n\n\n\nDate of Birth:\n2005-08-22\n\n\nState:\nQLD\n\n\nState League Club:\nBrisbane Lions Academy\n\n\nCommunity Club:\nSandgate\n\n\nHeight:\n175cm\n\n\nWeight:\nNAkg\n\n\nUrls:\n\nRookie Me Central\nAFL\n\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1033269.html#seasons",
    "href": "players/aflw/underage_profiles/CD_I1033269.html#seasons",
    "title": "Evie Long",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/CD_I1033269.html#matches",
    "href": "players/aflw/underage_profiles/CD_I1033269.html#matches",
    "title": "Evie Long",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/e8825240-71da-11eb-b80f-ab575312b416.html",
    "href": "players/aflw/underage_profiles/e8825240-71da-11eb-b80f-ab575312b416.html",
    "title": "Jaime Henry",
    "section": "",
    "text": "library(reactable)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(htmltools)\nlibrary(stringr)\n\ncombine_player_details &lt;- read_parquet(\"https://github.com/bit-in-that/data-automation/raw/main/players/data/processed/combine_player_details.parquet\") |&gt; \n  filter(player_first_name == params$player_first_name, player_surname == params$player_surname)\n\nplayerIds &lt;- combine_player_details$playerIds[[1]]\n\nseason_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/season_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\n\nmatch_data_table &lt;- read_parquet(\"../../../_tempates/draft_prospects/match_data_table.parquet\") |&gt; \n  filter(\n    playerId %in% playerIds\n  )\ncreate_html_table &lt;- function(row_list) {\n  row_list &lt;- row_list |&gt; \n    imap(~{\n      tags$tr(\n        tags$td(tags$b(paste0(.y, \":\"))),\n        tags$td(.x)\n      )\n    })\n  \n  # do.call(tags$table, row_list)\n  tags$table(row_list)\n}"
  },
  {
    "objectID": "players/aflw/underage_profiles/e8825240-71da-11eb-b80f-ab575312b416.html#player-details",
    "href": "players/aflw/underage_profiles/e8825240-71da-11eb-b80f-ab575312b416.html#player-details",
    "title": "Jaime Henry",
    "section": "Player Details",
    "text": "Player Details\n\n\n\n\n\n\nImages\n\n\n\n\n\n\ncombine_player_details$player_images[[1]] |&gt; \n  map(~tags$img(src = .x)) |&gt; \n  tags$span()\n\n\n\n\n\n\n\n\n\ncombine_player_details |&gt; \n  transmute(\n    `Date of Birth` = date_of_birth, State = state, `State League Club` = state_league_club,\n    `Community Club` = community_club, Height = paste0(player_height_range, \"cm\"), Weight = paste0(player_weight_range, \"kg\"),\n    Urls = player_urls |&gt; map(~{\n      link_labels &lt;- case_when(\n        str_detect(.x, \"wafl.com.au\") ~ \"WAFL\",\n        str_detect(.x,\"central.rookieme.com\") ~ \"Rookie Me Central\",\n        str_detect(.x, \"www.afl.com.au\") ~ \"AFL\",\n        str_detect(.x, \"sanfl.com.au\") ~ \"SANFL\"\n      )\n      \n      map2(.x, link_labels, \\(player_url, link_label) {\n        p(\n          tags$a(\n            link_label, href = player_url, target = \"_blank\"\n          )\n        )\n      })\n    }),\n    `Phantom Draft Ranking (Afl)` = phantom_draft_afl, \n    `Phantom Draft Ranking (Sporting News)` = phantom_draft_sporting_news, \n    `Phantom Draft Ranking (Fox Sports)` = phantom_draft_fox_sports, \n    `Phantom Draft Ranking (Abc)` = phantom_draft_abc\n  ) |&gt; \n  create_html_table()\n\n\n\nDate of Birth:\nNA\n\n\nState:\nWA\n\n\nState League Club:\nSwan Districts\n\n\nCommunity Club:\nUpper Swan\n\n\nHeight:\nNAcm\n\n\nWeight:\nNAkg\n\n\nUrls:\nWAFL\n\n\nPhantom Draft Ranking (Afl):\nNA\n\n\nPhantom Draft Ranking (Sporting News):\nNA\n\n\nPhantom Draft Ranking (Fox Sports):\nNA\n\n\nPhantom Draft Ranking (Abc):\nNA"
  },
  {
    "objectID": "players/aflw/underage_profiles/e8825240-71da-11eb-b80f-ab575312b416.html#seasons",
    "href": "players/aflw/underage_profiles/e8825240-71da-11eb-b80f-ab575312b416.html#seasons",
    "title": "Jaime Henry",
    "section": "Seasons",
    "text": "Seasons\n\nseason_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      season = colDef(name = \"Season\", sticky = \"left\"),\n      tier = colDef(name = \"Tier\", sticky = \"left\"),\n      comp_name = colDef(name = \"Competition\"),\n      games_played = colDef(name = \"Games\"),\n      fantasy_ceiling = colDef(name = \"Ceiling\"),\n      fantasy_floor = colDef(name = \"Floor\"),\n      fantasy_points = colDef(name = \"Average\", format = colFormat(digits = 1)),\n      goals = colDef(name = \"Goals\", format = colFormat(digits = 1)),\n      behinds = colDef(name = \"Behinds\", format = colFormat(digits = 1)),\n      kicks = colDef(name = \"Kicks\", format = colFormat(digits = 1)),\n      handballs = colDef(name = \"Handballs\", format = colFormat(digits = 1)),\n      disposals = colDef(name = \"Disposals\", format = colFormat(digits = 1)),\n      marks = colDef(name = \"Marks\", format = colFormat(digits = 1)),\n      tackles = colDef(name = \"Tackles\", format = colFormat(digits = 1)),\n      hitouts = colDef(name = \"Hitouts\", format = colFormat(digits = 1)),\n      frees_for = colDef(name = \"Frees For\", format = colFormat(digits = 1)),\n      frees_against = colDef(name = \"Frees Against\", format = colFormat(digits = 1))\n    ),\n    columnGroups = list(\n      colGroup(name = \"AFL Fantasy\", columns = c(\"fantasy_ceiling\", \"fantasy_floor\", \"fantasy_points\")),\n      colGroup(name = \"Average Stats\", columns = c(\"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE\n  )"
  },
  {
    "objectID": "players/aflw/underage_profiles/e8825240-71da-11eb-b80f-ab575312b416.html#matches",
    "href": "players/aflw/underage_profiles/e8825240-71da-11eb-b80f-ab575312b416.html#matches",
    "title": "Jaime Henry",
    "section": "Matches",
    "text": "Matches\nNote that times below are (unfortunately) in Sydney/Melbourne time (in future I would like to make them local time instead).\n\nmatch_data_table |&gt; \n  select(-playerId) |&gt; \n  reactable(\n    columns = list(\n      match_time = colDef(\n        name = \"Time\", sticky = \"left\", cell = function(cell_value, row_index, column_name){\n          match_url &lt;- match_data_table[[\"match_url\"]][[row_index]]\n          tags$a(\n            format(cell_value, format = \"%e/%m/%Y\\n%I:%M %p\", tz = \"Australia/Melbourne\"),\n            href = match_url,\n            target = \"_blank\"\n          )\n        }\n      ),\n      match_url = colDef(show = FALSE),\n      is_home = colDef(show = FALSE),\n      team_name = colDef(name = \"Team\"),\n      opposition_name = colDef(name = \"Opposition\", cell = function(cell_value, row_index, column_name){\n        is_home &lt;- match_data_table[[\"is_home\"]][[row_index]]\n        if(is_home) {\n          paste(\"vs.\", cell_value)\n        } else {\n          paste(\"@\", cell_value)\n        }\n      }),\n      tier = colDef(name = \"Tier\"),\n      match_type = colDef(name = \"Type\"),\n      round_abbreviation = colDef(name = \"Round\"),\n      comp_name = colDef(name = \"Competition\"),\n      position = colDef(name = \"Position\"),\n      fantasy_points = colDef(name = \"Fantasy Points\"),\n      goals = colDef(name = \"Goals\"),\n      behinds = colDef(name = \"Behinds\"),\n      kicks = colDef(name = \"Kicks\"),\n      handballs = colDef(name = \"Handballs\"),\n      disposals = colDef(name = \"Disposals\"),\n      marks = colDef(name = \"Marks\"),\n      tackles = colDef(name = \"Tackles\"),\n      hitouts = colDef(name = \"Hitouts\"),\n      frees_for = colDef(name = \"Frees For\"),\n      frees_against = colDef(name = \"Frees Against\")\n    ),\n    columnGroups = list(\n      colGroup(name = \"Match Info\", columns = c(\"tier\", \"comp_name\", \"match_type\", \"round_abbreviation\", \"team_name\", \"opposition_name\")),\n      colGroup(name = \"Average Stats\", columns = c(\"fantasy_points\", \"goals\", \"behinds\", \"kicks\", \"handballs\", \"disposals\", \"marks\", \"tackles\", \"hitouts\", \"frees_for\", \"frees_against\"))\n    ),\n    filterable = TRUE,\n    pagination = FALSE,\n    height = 750\n  )"
  }
]